#NEXUS
[written Tue Jun 16 15:40:15 EDT 2009 by Mesquite  version 2.5 (build j77) at Seiffert1/129.49.255.79]

BEGIN TAXA;
	TITLE Taxa;
	DIMENSIONS NTAX=29;
	TAXLABELS
		Paranomalurus_walkeri Pondaungimys Prolapsus Shazurus Hartenbergeromys Glibia Nementchamys Theridomys Paranomalurus_soniae Zegdoumys Eogliravus Cocomys Pappocricetodon Remys Anomalurus Protadelomys Pantrogna Paramys Tribosphenomys Kebirmys Bransatoglis Pauromys Knightomys Paranomalurus_bishopi Idiurus Glibia_namibiensis Elfomys Birbalomys Sinosminthus 
	;

END;


BEGIN CHARACTERS;
	TITLE  'Matrix in file "small anomalurid matrix.nex"';
	DIMENSIONS  NCHAR=99;
	FORMAT DATATYPE = STANDARD GAP = - MISSING = ? SYMBOLS = "  0 1 2 3 4 5 6 7 8 9 A B C D E F G H J K";
	CHARSTATELABELS 
		1 'Infraorbital foramen (maxilla)' /  'pseudo-myomorphous ' sciuromorphous_ protrogomorphous_ hystricomorphous_, 2 Mandible /  sciurognathous_ hystricognathous_, 3 'Hunter-Schreger Bands (HSB)' /  absent_ present_, 4 Prisms_per_HSB_ /  1_ States_0_or_2 '1-3 ' States_2_or_4 '2-4 ', 5 IPM_crystallite_arrangement_in_PI /  sheath_surrounding_prisms_ States_0_or_2 parallel_ States_2_or_4 acute_angular_anastomozing_, 6 IPM_thickness /  thick_ thin_, 7 Percentage_of_PE_thickness /  'PE < or = PI' 'PE reduced (<25%) ', 8 Band_inclination_relative_to_EDJ /  0_degrees_ '<10 degrees ' '10-20 degrees ', 9 Size_of_P4 /  'P4 > or = M1 ' 'P4 < M1 ' minute_ absent_, 10 Protoconule_on_P4 /  inflated_ weak_ indistinct_, 11 Metaconule_on_P4 /  strong_ weak_ indistinct_, 12 Protoloph_on_P4 /  absent_ 'incomplete (lingual Prl absent) ' Complete_, 13 Metaloph_on_P4 /  absent_ States_0_or_2 'incomplete (lingual Mel absent) ' States_2_or_4 complete_ States_4_or_6 submerged_in_posteroloph_, 14 Metacone_on_P4 /  minute_to_absent_ weak_ strong_, 15 Hypocone /  minute_to_absent_ States_0_or_2 weak__ States_2_or_4 strong_, 16 Mesostyle_on_P4 /  absent_ States_0_or_2 weak_and_isolated_ States_2_or_4 strong_, 17 Anterocingulum_on_dP4 /  weak_ low_and_mesiodistally_widened_ high_, 18 Labial_pericingulum_on_dP4 /  present_ States_0_or_2 absent_, 19 dP4_retention /  P4_replaces_dP4_ dP4_retained__, 20 Talonid_of_p4_ /  narrow_ '< or = to trigonid ' slightly_wider_then_trigonid_ greatly_wider_then_trigonid_, 21 Predominant_cuspids_on_p4 /  strong_metaconid_ 'metaconid > protoconid ' 'metaconid = protoconid ', 22 Hypolophid_on_p4 /  absent__ States_0_or_2 present_, 23 'Metaconid - protoconid compression on p4' /  absent__ States_0_or_2 present_, 24 'Metaconid/protoconid position on p4' /  protoconid_posterior_ States_0_or_2 opposed_ States_2_or_4 protoconid_anterior, 25 Hypoconulid_on_p4 /  minute_to_absent_ weak_ strong_, 26 Mesoconid_on_p4 /  absent_ States_0_or_2 weak_, 27 Ectolophid_on_p4 /  absent_ 'incomplete, anteriorly interrupted ' 'complete, reaches protoconid from mesoconid ', 28 Metalophulid_I_on_p4_ /  absent_ 'incomplete, unconnected to metaconid ' complete_, 29 Metalophulid_II_on_p4 /  absent_ 'incomplete, unconnected to metaconid ' complete_, 30 Anterior_cingulid_on_p4 /  absent_ States_0_or_2 ' low, lingually limited' States_2_or_4 'well-developed ', 31 'Posterior arm of metaconid (metastylar fold) on p4 ' /  absent_ weak_and_low_ well_developed_and_high_, 32 Size_of_p4 /  'p4 > or = m1 ' 'p4 < m1 ' minute_ absent_, 33 'Third upper premolar (P3)' /  present_ reduced_ absent_, 34 'Third upper deciduous premolar (dP3)' /  present_ reduced_ absent_, 35 Anteroconid_ /  absent_ weak_ large_, 36 Anterior_cingulid /  indistinct__ low_and_weakly_developed_, 37 'Metaconid/protoconid position' /  opposed_ protoconid_posterior_, 38 Mesolophid /  absent_ States_0_or_2 weakly_developed_ States_2_or_4 reaches_the_lingual_side_, 39 'Posterior arm of metaconid (metastylar fold)' /  absent_ weak_and_low well_developed_and_high_, 40 Metalophulid_I /  absent__ 'incomplete, medially interupted ', 41 Metalophulid_II /  absent_ 'incomplete, medially interupted ' complete_, 42 Talonid_width /  as_wide_as_trigonid_ slightly_wider_then_trigonid__ much_wider_then_trigonid_, 43 Mesostylid_ /  absent_ weak_ strong_, 44 Mesoconid /  absent_ weak_, 45 Hypoconulid_ /  absent_ weak_, 46 Ectolophid /  absent_ 'anteriorly interrupted (unconnected to protoconid)' complete, 47 Hypocone /  absent_to_minute States_0_or_2 weak States_2_or_4 strong, 48 Hypocone_position_in_relation_to_protocone /  more_lingual_than_the_protocone_ States_0_or_2 same_level_as_the_protocone_ States_2_or_4 more_labial_, 49 Mesostyle /  absent_ weak_ strong_, 50 Parastyle /  absent_ small_ well_developed_ 'forms an anterior lobe (on M1) ', 51 Anterostyle /  absent_ weak_ well_developed_, 52 Anteroloph /  absent_ States_0_or_2 low_and_isolated_from_the_protocone_ States_2_or_4 high_and_connected_to_the_protocone_, 53 Metaconule /  'strong, inflated ' reduced_ minute_to_indistinct_, 54 Metaconule_position /  on_line_between_metacone_and_protocone_ central_cusp_ submerged_into_the_mure_, 55 'Metaconule- hypocone connection' /  absent_ present_, 56 Anterior_arm_of_hypocone /  absent_ weakly_developed well_developed_, 57 Mesolophule_ /  absent_ States_0_or_2 incipient_from_metaconule_ States_2_or_4 reaches_labial_side_, 58 Protolophule_II_ /  absent_ incipient_ well_developed_, 59 Protoconule /  'strong, inflated ' reduced_ submerged_in_the_protoloph_to_absent_, 60 'Anteroloph-protoloph connection (with a lingual anteroloph)' /  absent_ present_, 61 Metaloph_connection_ /  connected_to_metaconule__ States_0_or_2 connected_on_the_anterior_arm_of_hypocone_ States_2_or_4 turned_posteriorly_to_join_posteroloph_, 62 'Metaconule-protocone connection (lingual metaloph)' /  absent_ States_0_or_2 present_, 63 Endoloph /  _present_ absent_, 64 Mure /  absent_ incipient_ complete_, 65 'Posterior outgrowth of protocone (neo-endolph)' /  absent_ States_0_or_2 weak_ States_2_or_4 'forms a lingual wall (extends from the protocone to the hypocone) ', 66 'Upper molars length/width proportions' /  'length > width ' 'length = width ', 67 Posterior_arm_of_paracone /  absent_ States_0_or_2 weakly_pronounced_ States_2_or_4 'high (connected to mesostyle) ', 68 Anterior_arm_of_metacone /  absent_ weakly_pronounced_ 'high (connected to mesostyle) ', 69 'Anterolophid (anterocingulid)' /  absent_ States_0_or_2 incipient_low_ States_2_or_4 well_developed_, 70 Anterolophulid /  absent_ present_, 71 Anteroconid /  absent_ incipient_in_anterolophid_ well_developed_, 72 Mesostylid /  absent_ States_0_or_2 weak_ States_2_or_4 strong_, 73 Ectostylid /  absent_ present_, 74 Mesoconid /  small_to_absent_ simple_cuspid_ transversally_elongated_, 75 'Posterior arm of protoconid - mesoconid connection' /  absent__ incomplete_ present_, 76 Ectolophid /  absent_ States_0_or_2 anteriorly_incomplete States_2_or_4 'complete, reaches protoconid ', 77 Mesolophid_ /  absent_ incipient_ 'well developed, reaches the lingual side ', 78 Ectomesolophid /  absent_ States_0_or_2 present_, 79 'Protoconid/metaconid position' /  opposed_ States_0_or_2 protoconid_posterior_, 80 'Metaconid - Protoconid height' /  'protoconid < metaconid ' States_0_or_2 'protoconid = metaconid ', 81 Direction_of_the_posterior_arm_of_the_protoconid /  directed_towards_the_metaconid_ 'oblique, extending backwards ', 82 'Paralophid - metaconid connection' /  absent_ 'present ( = metalophulid I) ', 83 Metalophulid_I /  'complete (ancestral paralophid) ' 'complex (antero-labial part of paralophid plus lingual part of protolophid) ' weak_to_absent_ 'remains of the antero-labial part of paralophid (lingual part of the paralophid or neo-formation) ', 84 'Metalophulid II (protolophid = posterior arm of protoconid)' /  well_developed_ States_0_or_2 weak_ States_2_or_4 small_to_absent, 85 Hypolophid /  absent_ States_0_or_2 'low, interrupted labially ' States_2_or_4 well_developed_, 86 Anterior_arm_of_hypoconid /  absent_ connects_weakly_to_mesoconid__ strong_, 87 'Entoconid/hypoconid position' /  opposed_ entoconid_anterior_, 88 Hypoconulid /  'strong, inflated ' States_0_or_2 simple_cuspid_ States_2_or_4 'reduced, submerged into the posterolophid ' States_4_or_6 absent_, 89 'Entoconid - hypoconid connection by posterolophid ' /  present_ States_0_or_2 absent_, 90 'Entoconid - hypoconid twinned on m3absen' /  absent__ present_, 91 Trigonid_height_ /  higher_than_talonid_ States_0_or_2 as_low_as_talonid_, 92 Trigonid_width_ /  narrower_than_talonid_ as_wide_as_talonid_, 93 Size_of_m3_relative_to_m2_m3 /  ' m3 >m2' States_0_or_2 'm3=m2 ' States_2_or_4 'm3 < m2 ', 94 Posterior_arm_of_metaconid /  absent__ 'small ( metastylid) ' 'high metastylid (connected to mesostylid) ', 95 Anterior_arm_of_entoconid_ /  absent_ States_0_or_2 small__ States_2_or_4 'high ( connected to mesostylid) ', 96 'Cuspids/crests ' /  bunodont_ States_0_or_2 crests_present_but_low_ States_2_or_4 lophodont_, 97 Cuspids /  sharpened_ inflated_, 98 'Accesory enamel crestules on molars (wrinkles)' /  without__ States_0_or_2 present_, 99 chronobiogeography /  Late_Paleocene_of_Asia Ypresian_of_Asia Ypresian_of_Europe Ypresian_of_North_America early_Lutetian_of_Europe early_Lutetian_of_Africa late_Lutetian_of_Asia late_Lutetian_of_Europe late_Lutetian_of_North_America Bartonian_of_Asia Bartonian_of_Europe Bartonian_of_Africa Priabonian_of_North_America Priabonian_of_Africa Priabonian_of_Asia Priabonian_of_Europe Rupelian_of_Europe Oligocene_of_Africa Burdigalian_of_Africa Recent_of_Africa ; 
	MATRIX
	Paranomalurus_walkeri  ?0??????12224244???222040020242122????????????42200422124020201041404014000420020?2042060021420400J
	Pondaungimys           301221011222224412031200122014211?????????????42222422124010201141214004010420020?20410600200223029
	Prolapsus              2012001111122122??0310220200121122????????????42211220112010001001004010020010000?20300420212202008
	Shazurus               ????????12224244???3220400202421??????????????41200422124020201041424014000420020?2042060021?20400D
	Hartenbergeromys       30??????1101210300030220121000211?00002112111222112400000011020001214011011000001?14410500212222022
	Glibia                 ????????12224242??0???????????????11022022110142211211122011301121224010020010000?2040062?21?102025
	Nementchamys           ??12210011225244??0322020220241???????????????42222422124021301141424014000420010?2042060021?23402D
	Theridomys             3012000212226242??032212020000202210121001100042111411121020401001000022002020221?1440062021?22400F
	Paranomalurus_soniae   30??????12224244???22202002024012?????????????42221422124020201021004024000420020?2042060021420400J
	Zegdoumys              ??122100??????????0310020210121???????????????421112??1220??2010?1414002010010000?2041062?21?122025
	Eogliravus             ????????12124222??031020021020211?11122021110022111210000020020001204010020010200?20010600214202024
	Cocomys                201400021110000000012002000100111?????????????20111200000000020001000000010000020102000200000000001
	Pappocricetodon        301021103??????????????????????322????????????44131221122122201101004112020210000?30410620212202006
	Remys                  301101011202222012031202220000112200002102101042111401112020200001000000002000021?1440041021200400A
	Anomalurus             3010410202224244???32202012024212?????????????42222422124020201041424004000420020?2042060021222400K
	Protadelomys           301400101212222410031222020000212200102001110042212400110000200101003020002000201?14400200210102027
	Pantrogna              ?0110010111242120003002010001021??00002001111221112400000010020001004012011012101?14210500100200022
	Paramys                2012001012012222??031020121012112221001012011120220200000010020000004010010000000?20000400010100003
	Tribosphenomys         200?0012????????00002002?00210011?01001002011120010200000010020000000000010000000002010400002000000
	Kebirmys               ?0??????022242441203120002202401??1014002120024322242212402020123130401400042?010?2042060021303401D
	Bransatoglis           20??????122242222003102001001221??1114012111002211122?000020020000414000020020200?2020060021?20400F
	Pauromys               20??????1112424012031012001112222?11002011110042111210113011001001404010020010000?20200420214202003
	Knightomys             2012000212124220??031022120001111?????????????42121210110020001001204000020010000?20200420204102003
	Paranomalurus_bishopi  30??????12224244???222040020241122????????????42200422124020201041424014000420020?2042060021420400J
	Idiurus                30??????12224242???32202000024212?????????????42122422120020201040214004000020020?2041060021420400K
	Glibia_namibiensis     ??????????????????????????????????????????????4221132??2202020113120??????????????????????????????B
	Elfomys                3011000112224242220312221100002122????????????42111411122020401001002020002010021?1440060021210200F
	Birbalomys             301400001202424211022202112210211?11102022111240111200000010020001201002010300020102420120210222001
	Sinosminthus           ??????????????????0????????????322????????????42111222124221201201004122010411220130410420212202009

;

END;
BEGIN TREES;
	Title Trees_from_heuristic_search;
	LINK Taxa = Taxa;
	TRANSLATE
		1 Paranomalurus_walkeri,
		2 Pondaungimys,
		3 Prolapsus,
		4 Shazurus,
		5 Hartenbergeromys,
		6 Glibia,
		7 Nementchamys,
		8 Theridomys,
		9 Paranomalurus_soniae,
		10 Zegdoumys,
		11 Eogliravus,
		12 Cocomys,
		13 Pappocricetodon,
		14 Remys,
		15 Anomalurus,
		16 Protadelomys,
		17 Pantrogna,
		18 Paramys,
		19 Tribosphenomys,
		20 Kebirmys,
		21 Bransatoglis,
		22 Pauromys,
		23 Knightomys,
		24 Paranomalurus_bishopi,
		25 Idiurus,
		26 Glibia_namibiensis,
		27 Elfomys,
		28 Birbalomys,
		29 Sinosminthus;
	TREE 'Tree 1 from search (criterion: minimize Tree value using character matrix)' = (((11,21),(23,(22,(3,((6,10),((((2,((20,7),((4,(1,24)),(9,(25,15))))),26),(29,13)),((8,27),(16,14)))))))),(28,(((19,12),18),(5,17))));
	TREE 'Tree 2 from search (criterion: minimize Tree value using character matrix)' = ((28,((11,21),(23,(22,(3,((6,10),((((2,((20,7),((4,(1,24)),(9,(25,15))))),26),(29,13)),((8,27),(16,14))))))))),(((19,12),18),(5,17)));
	TREE 'Tree 3 from search (criterion: minimize Tree value using character matrix)' = (28,(((11,21),(23,(22,(3,((6,10),((((2,((20,7),((4,(1,24)),(9,(25,15))))),26),(29,13)),((8,27),(16,14)))))))),(((19,12),18),(5,17))));
	TREE 'Tree 4 from search (criterion: minimize Tree value using character matrix)' = (((11,21),(23,(22,(3,((6,10),((((2,((20,7),((4,(1,24)),(9,(25,15))))),26),(29,13)),(8,(27,(16,14))))))))),(28,(((19,12),18),(5,17))));
	TREE 'Tree 5 from search (criterion: minimize Tree value using character matrix)' = ((((19,12),18),(28,((11,21),(23,(22,(3,((6,10),((((2,((20,7),((4,(1,24)),(9,(25,15))))),26),(29,13)),((8,27),(16,14)))))))))),(5,17));
	TREE 'Tree 6 from search (criterion: minimize Tree value using character matrix)' = (((19,12),18),((28,((11,21),(23,(22,(3,((6,10),((((2,((20,7),((4,(1,24)),(9,(25,15))))),26),(29,13)),((8,27),(16,14))))))))),(5,17)));
	TREE 'Tree 7 from search (criterion: minimize Tree value using character matrix)' = ((28,((11,21),(23,(22,(3,((6,10),((((2,((20,7),((4,(1,24)),(9,(25,15))))),26),(29,13)),(8,(27,(16,14)))))))))),(((19,12),18),(5,17)));
	TREE 'Tree 8 from search (criterion: minimize Tree value using character matrix)' = (28,(((11,21),(23,(22,(3,((6,10),((((2,((20,7),((4,(1,24)),(9,(25,15))))),26),(29,13)),(8,(27,(16,14))))))))),(((19,12),18),(5,17))));
	TREE 'Tree 9 from search (criterion: minimize Tree value using character matrix)' = ((5,(((19,12),18),(28,((11,21),(23,(22,(3,((6,10),((((2,((20,7),((4,(1,24)),(9,(25,15))))),26),(29,13)),((8,27),(16,14))))))))))),17);
	TREE 'Tree 10 from search (criterion: minimize Tree value using character matrix)' = (5,((((19,12),18),(28,((11,21),(23,(22,(3,((6,10),((((2,((20,7),((4,(1,24)),(9,(25,15))))),26),(29,13)),((8,27),(16,14)))))))))),17));
	TREE 'Tree 11 from search (criterion: minimize Tree value using character matrix)' = ((((19,12),18),(28,((11,21),(23,(22,(3,((6,10),((((2,((20,7),((4,(1,24)),(9,(25,15))))),26),(29,13)),(8,(27,(16,14))))))))))),(5,17));
	TREE 'Tree 12 from search (criterion: minimize Tree value using character matrix)' = ((18,((28,((11,21),(23,(22,(3,((6,10),((((2,((20,7),((4,(1,24)),(9,(25,15))))),26),(29,13)),((8,27),(16,14))))))))),(5,17))),(19,12));
	TREE 'Tree 13 from search (criterion: minimize Tree value using character matrix)' = (18,((19,12),((28,((11,21),(23,(22,(3,((6,10),((((2,((20,7),((4,(1,24)),(9,(25,15))))),26),(29,13)),((8,27),(16,14))))))))),(5,17))));
	TREE 'Tree 14 from search (criterion: minimize Tree value using character matrix)' = (((19,12),18),((28,((11,21),(23,(22,(3,((6,10),((((2,((20,7),((4,(1,24)),(9,(25,15))))),26),(29,13)),(8,(27,(16,14)))))))))),(5,17)));
	TREE 'Tree 15 from search (criterion: minimize Tree value using character matrix)' = ((5,(((19,12),18),(28,((11,21),(23,(22,(3,((6,10),((((2,((20,7),((4,(1,24)),(9,(25,15))))),26),(29,13)),(8,(27,(16,14)))))))))))),17);
	TREE 'Tree 16 from search (criterion: minimize Tree value using character matrix)' = (5,((((19,12),18),(28,((11,21),(23,(22,(3,((6,10),((((2,((20,7),((4,(1,24)),(9,(25,15))))),26),(29,13)),(8,(27,(16,14))))))))))),17));
	TREE 'Tree 17 from search (criterion: minimize Tree value using character matrix)' = ((19,(18,((28,((11,21),(23,(22,(3,((6,10),((((2,((20,7),((4,(1,24)),(9,(25,15))))),26),(29,13)),((8,27),(16,14))))))))),(5,17)))),12);
	TREE 'Tree 18 from search (criterion: minimize Tree value using character matrix)' = (19,((18,((28,((11,21),(23,(22,(3,((6,10),((((2,((20,7),((4,(1,24)),(9,(25,15))))),26),(29,13)),((8,27),(16,14))))))))),(5,17))),12));
	TREE 'Tree 19 from search (criterion: minimize Tree value using character matrix)' = ((18,((28,((11,21),(23,(22,(3,((6,10),((((2,((20,7),((4,(1,24)),(9,(25,15))))),26),(29,13)),(8,(27,(16,14)))))))))),(5,17))),(19,12));
	TREE 'Tree 20 from search (criterion: minimize Tree value using character matrix)' = (18,((19,12),((28,((11,21),(23,(22,(3,((6,10),((((2,((20,7),((4,(1,24)),(9,(25,15))))),26),(29,13)),(8,(27,(16,14)))))))))),(5,17))));
	TREE 'Tree 21 from search (criterion: minimize Tree value using character matrix)' = ((19,(18,((28,((11,21),(23,(22,(3,((6,10),((((2,((20,7),((4,(1,24)),(9,(25,15))))),26),(29,13)),(8,(27,(16,14)))))))))),(5,17)))),12);
	TREE 'Tree 22 from search (criterion: minimize Tree value using character matrix)' = (19,((18,((28,((11,21),(23,(22,(3,((6,10),((((2,((20,7),((4,(1,24)),(9,(25,15))))),26),(29,13)),(8,(27,(16,14)))))))))),(5,17))),12));

END;


BEGIN TREES;
	Title Trees_from_heuristic_search;
	LINK Taxa = Taxa;
	TRANSLATE
		1 Paranomalurus_walkeri,
		2 Pondaungimys,
		3 Prolapsus,
		4 Shazurus,
		5 Hartenbergeromys,
		6 Glibia,
		7 Nementchamys,
		8 Theridomys,
		9 Paranomalurus_soniae,
		10 Zegdoumys,
		11 Eogliravus,
		12 Cocomys,
		13 Pappocricetodon,
		14 Remys,
		15 Anomalurus,
		16 Protadelomys,
		17 Pantrogna,
		18 Paramys,
		19 Tribosphenomys,
		20 Kebirmys,
		21 Bransatoglis,
		22 Pauromys,
		23 Knightomys,
		24 Paranomalurus_bishopi,
		25 Idiurus,
		26 Glibia_namibiensis,
		27 Elfomys,
		28 Birbalomys,
		29 Sinosminthus;
	TREE 'Tree 1 from search (criterion: minimize Tree value using character matrix)' = (((((14,(8,27)),16),(17,5)),(28,((23,(3,(22,(((13,29),(((20,((((15,25),9),((1,24),4)),7)),2),26)),(10,6))))),(11,21)))),((19,12),18));
	TREE 'Tree 2 from search (criterion: minimize Tree value using character matrix)' = (((19,12),((((14,(8,27)),16),(17,5)),(28,((23,(3,(22,(((13,29),(((20,((((15,25),9),((1,24),4)),7)),2),26)),(10,6))))),(11,21))))),18);
	TREE 'Tree 3 from search (criterion: minimize Tree value using character matrix)' = ((19,12),(((((14,(8,27)),16),(17,5)),(28,((23,(3,(22,(((13,29),(((20,((((15,25),9),((1,24),4)),7)),2),26)),(10,6))))),(11,21)))),18));
	TREE 'Tree 4 from search (criterion: minimize Tree value using character matrix)' = (((28,((23,(3,(22,(((13,29),(((20,((((15,25),9),((1,24),4)),7)),2),26)),(10,6))))),(11,21))),((19,12),18)),(((14,(8,27)),16),(17,5)));
	TREE 'Tree 5 from search (criterion: minimize Tree value using character matrix)' = ((28,((23,(3,(22,(((13,29),(((20,((((15,25),9),((1,24),4)),7)),2),26)),(10,6))))),(11,21))),((((14,(8,27)),16),(17,5)),((19,12),18)));
	TREE 'Tree 6 from search (criterion: minimize Tree value using character matrix)' = ((12,(((((14,(8,27)),16),(17,5)),(28,((23,(3,(22,(((13,29),(((20,((((15,25),9),((1,24),4)),7)),2),26)),(10,6))))),(11,21)))),18)),19);
	TREE 'Tree 7 from search (criterion: minimize Tree value using character matrix)' = (12,(19,(((((14,(8,27)),16),(17,5)),(28,((23,(3,(22,(((13,29),(((20,((((15,25),9),((1,24),4)),7)),2),26)),(10,6))))),(11,21)))),18)));
	TREE 'Tree 8 from search (criterion: minimize Tree value using character matrix)' = ((((23,(3,(22,(((13,29),(((20,((((15,25),9),((1,24),4)),7)),2),26)),(10,6))))),(11,21)),((((14,(8,27)),16),(17,5)),((19,12),18))),28);
	TREE 'Tree 9 from search (criterion: minimize Tree value using character matrix)' = (((23,(3,(22,(((13,29),(((20,((((15,25),9),((1,24),4)),7)),2),26)),(10,6))))),(11,21)),(28,((((14,(8,27)),16),(17,5)),((19,12),18))));

END;


BEGIN TREES;
	Title Trees_from_heuristic_search;
	LINK Taxa = Taxa;
	TRANSLATE
		1 Paranomalurus_walkeri,
		2 Pondaungimys,
		3 Prolapsus,
		4 Shazurus,
		5 Hartenbergeromys,
		6 Glibia,
		7 Nementchamys,
		8 Theridomys,
		9 Paranomalurus_soniae,
		10 Zegdoumys,
		11 Eogliravus,
		12 Cocomys,
		13 Pappocricetodon,
		14 Remys,
		15 Anomalurus,
		16 Protadelomys,
		17 Pantrogna,
		18 Paramys,
		19 Tribosphenomys,
		20 Kebirmys,
		21 Bransatoglis,
		22 Pauromys,
		23 Knightomys,
		24 Paranomalurus_bishopi,
		25 Idiurus,
		26 Glibia_namibiensis,
		27 Elfomys,
		28 Birbalomys,
		29 Sinosminthus;
	TREE 'Tree 1 from search (criterion: minimize Tree value using character matrix)' = (((((23,((3,22),(((((2,(7,20)),((9,(15,25)),((24,1),4))),((14,16),(27,8))),(6,10)),(26,(29,13))))),(21,11)),((17,5),28)),(19,12)),18);
	TREE 'Tree 2 from search (criterion: minimize Tree value using character matrix)' = (((19,12),18),(((23,((3,22),(((((2,(7,20)),((9,(15,25)),((24,1),4))),((14,16),(27,8))),(6,10)),(26,(29,13))))),(21,11)),((17,5),28)));
	TREE 'Tree 3 from search (criterion: minimize Tree value using character matrix)' = ((19,12),((((23,((3,22),(((((2,(7,20)),((9,(15,25)),((24,1),4))),((14,16),(27,8))),(6,10)),(26,(29,13))))),(21,11)),((17,5),28)),18));
	TREE 'Tree 4 from search (criterion: minimize Tree value using character matrix)' = (((((23,((3,22),(((((2,(7,20)),((9,(15,25)),((24,1),4))),((27,(14,16)),8)),(6,10)),(26,(29,13))))),(21,11)),((17,5),28)),(19,12)),18);
	TREE 'Tree 5 from search (criterion: minimize Tree value using character matrix)' = ((((23,((3,22),(((((2,(7,20)),((9,(15,25)),((24,1),4))),((14,16),(27,8))),(6,10)),(26,(29,13))))),(21,11)),((19,12),18)),((17,5),28));
	TREE 'Tree 6 from search (criterion: minimize Tree value using character matrix)' = (((23,((3,22),(((((2,(7,20)),((9,(15,25)),((24,1),4))),((14,16),(27,8))),(6,10)),(26,(29,13))))),(21,11)),(((19,12),18),((17,5),28)));
	TREE 'Tree 7 from search (criterion: minimize Tree value using character matrix)' = (((19,12),18),(((23,((3,22),(((((2,(7,20)),((9,(15,25)),((24,1),4))),((27,(14,16)),8)),(6,10)),(26,(29,13))))),(21,11)),((17,5),28)));
	TREE 'Tree 8 from search (criterion: minimize Tree value using character matrix)' = ((12,((((23,((3,22),(((((2,(7,20)),((9,(15,25)),((24,1),4))),((14,16),(27,8))),(6,10)),(26,(29,13))))),(21,11)),((17,5),28)),18)),19);
	TREE 'Tree 9 from search (criterion: minimize Tree value using character matrix)' = (12,(19,((((23,((3,22),(((((2,(7,20)),((9,(15,25)),((24,1),4))),((14,16),(27,8))),(6,10)),(26,(29,13))))),(21,11)),((17,5),28)),18)));
	TREE 'Tree 10 from search (criterion: minimize Tree value using character matrix)' = ((19,12),((((23,((3,22),(((((2,(7,20)),((9,(15,25)),((24,1),4))),((27,(14,16)),8)),(6,10)),(26,(29,13))))),(21,11)),((17,5),28)),18));
	TREE 'Tree 11 from search (criterion: minimize Tree value using character matrix)' = (((17,5),(((23,((3,22),(((((2,(7,20)),((9,(15,25)),((24,1),4))),((14,16),(27,8))),(6,10)),(26,(29,13))))),(21,11)),((19,12),18))),28);
	TREE 'Tree 12 from search (criterion: minimize Tree value using character matrix)' = ((17,5),((((23,((3,22),(((((2,(7,20)),((9,(15,25)),((24,1),4))),((14,16),(27,8))),(6,10)),(26,(29,13))))),(21,11)),((19,12),18)),28));
	TREE 'Tree 13 from search (criterion: minimize Tree value using character matrix)' = ((((23,((3,22),(((((2,(7,20)),((9,(15,25)),((24,1),4))),((27,(14,16)),8)),(6,10)),(26,(29,13))))),(21,11)),((19,12),18)),((17,5),28));
	TREE 'Tree 14 from search (criterion: minimize Tree value using character matrix)' = (((23,((3,22),(((((2,(7,20)),((9,(15,25)),((24,1),4))),((27,(14,16)),8)),(6,10)),(26,(29,13))))),(21,11)),(((19,12),18),((17,5),28)));
	TREE 'Tree 15 from search (criterion: minimize Tree value using character matrix)' = ((12,((((23,((3,22),(((((2,(7,20)),((9,(15,25)),((24,1),4))),((27,(14,16)),8)),(6,10)),(26,(29,13))))),(21,11)),((17,5),28)),18)),19);
	TREE 'Tree 16 from search (criterion: minimize Tree value using character matrix)' = (12,(19,((((23,((3,22),(((((2,(7,20)),((9,(15,25)),((24,1),4))),((27,(14,16)),8)),(6,10)),(26,(29,13))))),(21,11)),((17,5),28)),18)));
	TREE 'Tree 17 from search (criterion: minimize Tree value using character matrix)' = (((17,5),(((23,((3,22),(((((2,(7,20)),((9,(15,25)),((24,1),4))),((27,(14,16)),8)),(6,10)),(26,(29,13))))),(21,11)),((19,12),18))),28);
	TREE 'Tree 18 from search (criterion: minimize Tree value using character matrix)' = ((5,((((23,((3,22),(((((2,(7,20)),((9,(15,25)),((24,1),4))),((14,16),(27,8))),(6,10)),(26,(29,13))))),(21,11)),((19,12),18)),28)),17);
	TREE 'Tree 19 from search (criterion: minimize Tree value using character matrix)' = (5,(17,((((23,((3,22),(((((2,(7,20)),((9,(15,25)),((24,1),4))),((14,16),(27,8))),(6,10)),(26,(29,13))))),(21,11)),((19,12),18)),28)));
	TREE 'Tree 20 from search (criterion: minimize Tree value using character matrix)' = ((17,5),((((23,((3,22),(((((2,(7,20)),((9,(15,25)),((24,1),4))),((27,(14,16)),8)),(6,10)),(26,(29,13))))),(21,11)),((19,12),18)),28));
	TREE 'Tree 21 from search (criterion: minimize Tree value using character matrix)' = ((5,((((23,((3,22),(((((2,(7,20)),((9,(15,25)),((24,1),4))),((27,(14,16)),8)),(6,10)),(26,(29,13))))),(21,11)),((19,12),18)),28)),17);
	TREE 'Tree 22 from search (criterion: minimize Tree value using character matrix)' = (5,(17,((((23,((3,22),(((((2,(7,20)),((9,(15,25)),((24,1),4))),((27,(14,16)),8)),(6,10)),(26,(29,13))))),(21,11)),((19,12),18)),28)));

END;


BEGIN CODONS;
	CODESET * UNTITLED   =  universal:  1 -  99;


END;

BEGIN SETS;
	CHARSET 3state   =   7 10 -  12 14 17 -  18 22 -  23 25 27 -  29 31 33 -  36 39 -  46 49 51 -  54 56 58 -  60 62 64 -  65 67 -  68 71 74 -  75 77 -  79 86 89 91 94 -  95;
	CHARSET 4state   =   9 20 -  21 32 50 83;
	CHARSET 5state   =   1 15 -  16 26 30 38 47 -  48 57 69 72 76 84 -  85 93 96;
	CHARSET 6state   =   8;
	CHARSET 7state   =   5 13 61 88;
	CHARSET 9state   =   4;

END;

BEGIN MESQUITECHARMODELS;
	ProbModelSet * UNTITLED   =  'Mk1 (est.)':  1 -  99;
END;

BEGIN ASSUMPTIONS;
	OPTIONS DEFTYPE =                                      UNORD POLYTCOUNT =                                      MINSTEPS;
		USERTYPE CBG (Stepmatrix) = 
		 20
	0	1	2	3	4	5	6	7	8	9	A	B	C	D	E	F	G	H	J	K
	0	0	0	0	1	2	2	2	2	3	3	4	4	5	4	4	5	6	6	7
	i	0	0	0	0	1	1	1	1	2	2	3	3	4	3	3	4	5	5	6
	i	0	0	0	0	1	1	1	1	2	2	3	3	4	3	3	4	5	5	6
	i	0	0	0	0	1	1	1	1	2	2	3	3	4	3	3	4	5	5	6
	i	i	i	i	0	1	1	0	1	2	1	2	4	3	3	2	3	4	4	5
	i	i	i	i	1	0	1	1	2	2	2	1	4	2	3	3	4	3	4	5
	i	i	i	i	i	i	0	1	1	0	1	1	2	2	1	2	2	3	3	4
	i	i	i	i	i	i	1	0	2	1	0	1	3	2	2	1	2	3	3	4
	i	i	i	i	i	i	1	2	0	1	2	2	1	3	2	3	3	4	4	5
	i	i	i	i	i	i	i	i	i	0	1	1	1	1	0	1	1	2	2	3
	i	i	i	i	i	i	i	i	i	1	0	1	2	0	1	1	2	1	2	3
	i	i	i	i	i	i	i	i	i	1	1	0	2	1	1	0	1	2	2	3
	i	i	i	i	i	i	i	i	i	i	i	i	0	2	1	2	1	2	2	3
	i	i	i	i	i	i	i	i	i	i	i	i	i	0	1	1	1	0	2	3
	i	i	i	i	i	i	i	i	i	i	i	i	i	1	0	1	0	1	1	2
	i	i	i	i	i	i	i	i	i	i	i	i	i	1	1	0	0	1	1	2
	i	i	i	i	i	i	i	i	i	i	i	i	i	i	i	i	0	1	0	1
	i	i	i	i	i	i	i	i	i	i	i	i	i	i	i	i	1	0	0	1
	i	i	i	i	i	i	i	i	i	i	i	i	i	i	i	i	i	i	0	0
	i	i	i	i	i	i	i	i	i	i	i	i	i	i	i	i	i	i	i	0
;

	TYPESET * UNTITLED   =  unord:  2 -  3 6 -  7 10 19 -  20 33 -  34 36 -  37 40 42 -  45 55 60 63 66 70 73 81 -  83 87 -  88 90 92 -  97, ord:  1 4 -  5 8 -  9 11 -  18 21 -  32 35 38 -  39 41 46 -  54 56 -  59 61 -  62 64 -  65 67 -  69 71 -  72 74 -  80 84 -  86 89 91 98, CBG:  99;
TYPESET default   =  unord:  20 83 88 90 92 -  99, ord:  1 -  19 21 -  82 84 -  87 89 91;

	EXSET * UNTITLED  = ;

	WTSET * UNTITLED  =  0.5: 1 1 8 11 -  12 14 17 -  18 21 -  23 25 -  29 31 33 35 39 41 46 -  47 49 51 -  54 56 58 -  59 62 64 68 71 74 -  75 77 -  80 86 89 91 98, 1.0: 2 -  3 6 -  7 10 19 -  20 34 36 -  37 40 42 -  45 55 60 63 66 70 73 81 -  83 87 -  88 90 92 -  94 96 -  97 99, 0.25: 4 -  5 15 -  16 24 30 38 48 57 61 65 67 69 72 76 84 -  85 95, 0.333333: 9 9 32 50, 0.166667: 13 13;

END;

BEGIN PAUP;
wts .5 :                                      3state;
wts .333 :                                      4state;
wts .25 :                                      5state;
wts .2 :                                      6state;
wts .167 :                                      7state;
wts .125 :                                      9state;

END;
BEGIN TREES;
	Title Trees_from_heuristic_search;
	LINK Taxa = Taxa;
	TRANSLATE
		1 Paranomalurus_walkeri,
		2 Pondaungimys,
		3 Prolapsus,
		4 Shazurus,
		5 Hartenbergeromys,
		6 Glibia,
		7 Nementchamys,
		8 Theridomys,
		9 Paranomalurus_soniae,
		10 Zegdoumys,
		11 Eogliravus,
		12 Cocomys,
		13 Pappocricetodon,
		14 Remys,
		15 Anomalurus,
		16 Protadelomys,
		17 Pantrogna,
		18 Paramys,
		19 Tribosphenomys,
		20 Kebirmys,
		21 Bransatoglis,
		22 Pauromys,
		23 Knightomys,
		24 Paranomalurus_bishopi,
		25 Idiurus,
		26 Glibia_namibiensis,
		27 Elfomys,
		28 Birbalomys,
		29 Sinosminthus;
	TREE 'Tree 1 from search (criterion: minimize Tree value using character matrix)' = ((((23,((3,(((((((7,20),((4,(24,1)),((15,25),9))),2),26),(29,13)),((16,14),(8,27))),(10,6))),22)),(21,11)),((17,5),(18,(12,19)))),28);
	TREE 'Tree 2 from search (criterion: minimize Tree value using character matrix)' = ((((17,5),(18,(12,19))),28),((23,((3,(((((((7,20),((4,(24,1)),((15,25),9))),2),26),(29,13)),((16,14),(8,27))),(10,6))),22)),(21,11)));
	TREE 'Tree 3 from search (criterion: minimize Tree value using character matrix)' = (((17,5),(18,(12,19))),(((23,((3,(((((((7,20),((4,(24,1)),((15,25),9))),2),26),(29,13)),((16,14),(8,27))),(10,6))),22)),(21,11)),28));
	TREE 'Tree 4 from search (criterion: minimize Tree value using character matrix)' = ((((23,((3,(((((((7,20),((4,(24,1)),((15,25),9))),2),26),(29,13)),(8,((16,14),27))),(10,6))),22)),(21,11)),((17,5),(18,(12,19)))),28);
	TREE 'Tree 5 from search (criterion: minimize Tree value using character matrix)' = ((((17,5),(18,(12,19))),28),((23,((3,(((((((7,20),((4,(24,1)),((15,25),9))),2),26),(29,13)),(8,((16,14),27))),(10,6))),22)),(21,11)));
	TREE 'Tree 6 from search (criterion: minimize Tree value using character matrix)' = (((18,(12,19)),(((23,((3,(((((((7,20),((4,(24,1)),((15,25),9))),2),26),(29,13)),((16,14),(8,27))),(10,6))),22)),(21,11)),28)),(17,5));
	TREE 'Tree 7 from search (criterion: minimize Tree value using character matrix)' = ((18,(12,19)),((17,5),(((23,((3,(((((((7,20),((4,(24,1)),((15,25),9))),2),26),(29,13)),((16,14),(8,27))),(10,6))),22)),(21,11)),28)));
	TREE 'Tree 8 from search (criterion: minimize Tree value using character matrix)' = (((17,5),(18,(12,19))),(((23,((3,(((((((7,20),((4,(24,1)),((15,25),9))),2),26),(29,13)),(8,((16,14),27))),(10,6))),22)),(21,11)),28));
	TREE 'Tree 9 from search (criterion: minimize Tree value using character matrix)' = ((17,((18,(12,19)),(((23,((3,(((((((7,20),((4,(24,1)),((15,25),9))),2),26),(29,13)),((16,14),(8,27))),(10,6))),22)),(21,11)),28))),5);
	TREE 'Tree 10 from search (criterion: minimize Tree value using character matrix)' = (17,(((18,(12,19)),(((23,((3,(((((((7,20),((4,(24,1)),((15,25),9))),2),26),(29,13)),((16,14),(8,27))),(10,6))),22)),(21,11)),28)),5));
	TREE 'Tree 11 from search (criterion: minimize Tree value using character matrix)' = (((18,(12,19)),(((23,((3,(((((((7,20),((4,(24,1)),((15,25),9))),2),26),(29,13)),(8,((16,14),27))),(10,6))),22)),(21,11)),28)),(17,5));
	TREE 'Tree 12 from search (criterion: minimize Tree value using character matrix)' = (((12,19),((17,5),(((23,((3,(((((((7,20),((4,(24,1)),((15,25),9))),2),26),(29,13)),((16,14),(8,27))),(10,6))),22)),(21,11)),28))),18);
	TREE 'Tree 13 from search (criterion: minimize Tree value using character matrix)' = ((12,19),(18,((17,5),(((23,((3,(((((((7,20),((4,(24,1)),((15,25),9))),2),26),(29,13)),((16,14),(8,27))),(10,6))),22)),(21,11)),28))));
	TREE 'Tree 14 from search (criterion: minimize Tree value using character matrix)' = ((18,(12,19)),((17,5),(((23,((3,(((((((7,20),((4,(24,1)),((15,25),9))),2),26),(29,13)),(8,((16,14),27))),(10,6))),22)),(21,11)),28)));
	TREE 'Tree 15 from search (criterion: minimize Tree value using character matrix)' = ((17,((18,(12,19)),(((23,((3,(((((((7,20),((4,(24,1)),((15,25),9))),2),26),(29,13)),(8,((16,14),27))),(10,6))),22)),(21,11)),28))),5);
	TREE 'Tree 16 from search (criterion: minimize Tree value using character matrix)' = (17,(((18,(12,19)),(((23,((3,(((((((7,20),((4,(24,1)),((15,25),9))),2),26),(29,13)),(8,((16,14),27))),(10,6))),22)),(21,11)),28)),5));
	TREE 'Tree 17 from search (criterion: minimize Tree value using character matrix)' = (((12,19),((17,5),(((23,((3,(((((((7,20),((4,(24,1)),((15,25),9))),2),26),(29,13)),(8,((16,14),27))),(10,6))),22)),(21,11)),28))),18);
	TREE 'Tree 18 from search (criterion: minimize Tree value using character matrix)' = ((19,(18,((17,5),(((23,((3,(((((((7,20),((4,(24,1)),((15,25),9))),2),26),(29,13)),((16,14),(8,27))),(10,6))),22)),(21,11)),28)))),12);
	TREE 'Tree 19 from search (criterion: minimize Tree value using character matrix)' = (19,(12,(18,((17,5),(((23,((3,(((((((7,20),((4,(24,1)),((15,25),9))),2),26),(29,13)),((16,14),(8,27))),(10,6))),22)),(21,11)),28)))));
	TREE 'Tree 20 from search (criterion: minimize Tree value using character matrix)' = ((12,19),(18,((17,5),(((23,((3,(((((((7,20),((4,(24,1)),((15,25),9))),2),26),(29,13)),(8,((16,14),27))),(10,6))),22)),(21,11)),28))));
	TREE 'Tree 21 from search (criterion: minimize Tree value using character matrix)' = ((19,(18,((17,5),(((23,((3,(((((((7,20),((4,(24,1)),((15,25),9))),2),26),(29,13)),(8,((16,14),27))),(10,6))),22)),(21,11)),28)))),12);
	TREE 'Tree 22 from search (criterion: minimize Tree value using character matrix)' = (19,(12,(18,((17,5),(((23,((3,(((((((7,20),((4,(24,1)),((15,25),9))),2),26),(29,13)),(8,((16,14),27))),(10,6))),22)),(21,11)),28)))));

END;


BEGIN TREES;
	Title Trees_from_heuristic_search;
	LINK Taxa = Taxa;
	TRANSLATE
		1 Paranomalurus_walkeri,
		2 Pondaungimys,
		3 Prolapsus,
		4 Shazurus,
		5 Hartenbergeromys,
		6 Glibia,
		7 Nementchamys,
		8 Theridomys,
		9 Paranomalurus_soniae,
		10 Zegdoumys,
		11 Eogliravus,
		12 Cocomys,
		13 Pappocricetodon,
		14 Remys,
		15 Anomalurus,
		16 Protadelomys,
		17 Pantrogna,
		18 Paramys,
		19 Tribosphenomys,
		20 Kebirmys,
		21 Bransatoglis,
		22 Pauromys,
		23 Knightomys,
		24 Paranomalurus_bishopi,
		25 Idiurus,
		26 Glibia_namibiensis,
		27 Elfomys,
		28 Birbalomys,
		29 Sinosminthus;
	TREE 'Tree 1 from search (criterion: minimize Tree value using character matrix)' = (((((12,19),18),((((27,8),14),16),(17,5))),((((((((((((9,(15,25)),((24,1),4)),7),20),2),26),(29,13)),(10,6)),22),3),23),(11,21))),28);
	TREE 'Tree 2 from search (criterion: minimize Tree value using character matrix)' = ((((((((((((((9,(15,25)),((24,1),4)),7),20),2),26),(29,13)),(10,6)),22),3),23),(11,21)),28),(((12,19),18),((((27,8),14),16),(17,5))));
	TREE 'Tree 3 from search (criterion: minimize Tree value using character matrix)' = (((((((((((((9,(15,25)),((24,1),4)),7),20),2),26),(29,13)),(10,6)),22),3),23),(11,21)),((((12,19),18),((((27,8),14),16),(17,5))),28));
	TREE 'Tree 4 from search (criterion: minimize Tree value using character matrix)' = ((((12,19),18),(((((((((((((9,(15,25)),((24,1),4)),7),20),2),26),(29,13)),(10,6)),22),3),23),(11,21)),28)),((((27,8),14),16),(17,5)));
	TREE 'Tree 5 from search (criterion: minimize Tree value using character matrix)' = (((12,19),18),((((((((((((((9,(15,25)),((24,1),4)),7),20),2),26),(29,13)),(10,6)),22),3),23),(11,21)),28),((((27,8),14),16),(17,5))));
	TREE 'Tree 6 from search (criterion: minimize Tree value using character matrix)' = ((18,((((((((((((((9,(15,25)),((24,1),4)),7),20),2),26),(29,13)),(10,6)),22),3),23),(11,21)),28),((((27,8),14),16),(17,5)))),(12,19));
	TREE 'Tree 7 from search (criterion: minimize Tree value using character matrix)' = (18,((12,19),((((((((((((((9,(15,25)),((24,1),4)),7),20),2),26),(29,13)),(10,6)),22),3),23),(11,21)),28),((((27,8),14),16),(17,5)))));
	TREE 'Tree 8 from search (criterion: minimize Tree value using character matrix)' = ((12,(18,((((((((((((((9,(15,25)),((24,1),4)),7),20),2),26),(29,13)),(10,6)),22),3),23),(11,21)),28),((((27,8),14),16),(17,5))))),19);
	TREE 'Tree 9 from search (criterion: minimize Tree value using character matrix)' = (12,((18,((((((((((((((9,(15,25)),((24,1),4)),7),20),2),26),(29,13)),(10,6)),22),3),23),(11,21)),28),((((27,8),14),16),(17,5)))),19));

END;


BEGIN TREES;
	Title Trees_from_heuristic_search;
	LINK Taxa = Taxa;
	TRANSLATE
		1 Paranomalurus_walkeri,
		2 Pondaungimys,
		3 Prolapsus,
		4 Shazurus,
		5 Hartenbergeromys,
		6 Glibia,
		7 Nementchamys,
		8 Theridomys,
		9 Paranomalurus_soniae,
		10 Zegdoumys,
		11 Eogliravus,
		12 Cocomys,
		13 Pappocricetodon,
		14 Remys,
		15 Anomalurus,
		16 Protadelomys,
		17 Pantrogna,
		18 Paramys,
		19 Tribosphenomys,
		20 Kebirmys,
		21 Bransatoglis,
		22 Pauromys,
		23 Knightomys,
		24 Paranomalurus_bishopi,
		25 Idiurus,
		26 Glibia_namibiensis,
		27 Elfomys,
		28 Birbalomys,
		29 Sinosminthus;
	TREE 'Tree 1 from search (criterion: minimize Tree value using character matrix)' = ((18,(((((3,((((((20,(((4,(1,24)),((25,15),9)),7)),2),26),(29,13)),(10,6)),22)),23),(21,11)),28),((16,(14,(8,27))),(17,5)))),(12,19));
	TREE 'Tree 2 from search (criterion: minimize Tree value using character matrix)' = ((12,(18,(((((3,((((((20,(((4,(1,24)),((25,15),9)),7)),2),26),(29,13)),(10,6)),22)),23),(21,11)),28),((16,(14,(8,27))),(17,5))))),19);
	TREE 'Tree 3 from search (criterion: minimize Tree value using character matrix)' = (12,((18,(((((3,((((((20,(((4,(1,24)),((25,15),9)),7)),2),26),(29,13)),(10,6)),22)),23),(21,11)),28),((16,(14,(8,27))),(17,5)))),19));
	TREE 'Tree 4 from search (criterion: minimize Tree value using character matrix)' = (((((((3,((((((20,(((4,(1,24)),((25,15),9)),7)),2),26),(29,13)),(10,6)),22)),23),(21,11)),28),((16,(14,(8,27))),(17,5))),(12,19)),18);
	TREE 'Tree 5 from search (criterion: minimize Tree value using character matrix)' = ((((((3,((((((20,(((4,(1,24)),((25,15),9)),7)),2),26),(29,13)),(10,6)),22)),23),(21,11)),28),((16,(14,(8,27))),(17,5))),(18,(12,19)));
	TREE 'Tree 6 from search (criterion: minimize Tree value using character matrix)' = ((((16,(14,(8,27))),(17,5)),(18,(12,19))),((((3,((((((20,(((4,(1,24)),((25,15),9)),7)),2),26),(29,13)),(10,6)),22)),23),(21,11)),28));
	TREE 'Tree 7 from search (criterion: minimize Tree value using character matrix)' = (((16,(14,(8,27))),(17,5)),(((((3,((((((20,(((4,(1,24)),((25,15),9)),7)),2),26),(29,13)),(10,6)),22)),23),(21,11)),28),(18,(12,19))));
	TREE 'Tree 8 from search (criterion: minimize Tree value using character matrix)' = (((((3,((((((20,(((4,(1,24)),((25,15),9)),7)),2),26),(29,13)),(10,6)),22)),23),(21,11)),(((16,(14,(8,27))),(17,5)),(18,(12,19)))),28);
	TREE 'Tree 9 from search (criterion: minimize Tree value using character matrix)' = ((((3,((((((20,(((4,(1,24)),((25,15),9)),7)),2),26),(29,13)),(10,6)),22)),23),(21,11)),((((16,(14,(8,27))),(17,5)),(18,(12,19))),28));

END;


BEGIN TREES;
	Title Trees_from_heuristic_search;
	LINK Taxa = Taxa;
	TRANSLATE
		1 Paranomalurus_walkeri,
		2 Pondaungimys,
		3 Prolapsus,
		4 Shazurus,
		5 Hartenbergeromys,
		6 Glibia,
		7 Nementchamys,
		8 Theridomys,
		9 Paranomalurus_soniae,
		10 Zegdoumys,
		11 Eogliravus,
		12 Cocomys,
		13 Pappocricetodon,
		14 Remys,
		15 Anomalurus,
		16 Protadelomys,
		17 Pantrogna,
		18 Paramys,
		19 Tribosphenomys,
		20 Kebirmys,
		21 Bransatoglis,
		22 Pauromys,
		23 Knightomys,
		24 Paranomalurus_bishopi,
		25 Idiurus,
		26 Glibia_namibiensis,
		27 Elfomys,
		28 Birbalomys,
		29 Sinosminthus;
	TREE 'Tree 1 from search (criterion: minimize Tree value using character matrix)' = (((((5,17),((14,(27,8)),16)),(28,(((3,(22,((10,6),((13,29),(26,(2,(20,(7,((4,(24,1)),((25,15),9)))))))))),23),(21,11)))),18),(19,12));
	TREE 'Tree 2 from search (criterion: minimize Tree value using character matrix)' = ((19,((((5,17),((14,(27,8)),16)),(28,(((3,(22,((10,6),((13,29),(26,(2,(20,(7,((4,(24,1)),((25,15),9)))))))))),23),(21,11)))),18)),12);
	TREE 'Tree 3 from search (criterion: minimize Tree value using character matrix)' = (19,(((((5,17),((14,(27,8)),16)),(28,(((3,(22,((10,6),((13,29),(26,(2,(20,(7,((4,(24,1)),((25,15),9)))))))))),23),(21,11)))),18),12));
	TREE 'Tree 4 from search (criterion: minimize Tree value using character matrix)' = ((18,(19,12)),(((5,17),((14,(27,8)),16)),(28,(((3,(22,((10,6),((13,29),(26,(2,(20,(7,((4,(24,1)),((25,15),9)))))))))),23),(21,11)))));
	TREE 'Tree 5 from search (criterion: minimize Tree value using character matrix)' = (18,((((5,17),((14,(27,8)),16)),(28,(((3,(22,((10,6),((13,29),(26,(2,(20,(7,((4,(24,1)),((25,15),9)))))))))),23),(21,11)))),(19,12)));
	TREE 'Tree 6 from search (criterion: minimize Tree value using character matrix)' = ((((5,17),((14,(27,8)),16)),(18,(19,12))),(28,(((3,(22,((10,6),((13,29),(26,(2,(20,(7,((4,(24,1)),((25,15),9)))))))))),23),(21,11))));
	TREE 'Tree 7 from search (criterion: minimize Tree value using character matrix)' = (((5,17),((14,(27,8)),16)),((18,(19,12)),(28,(((3,(22,((10,6),((13,29),(26,(2,(20,(7,((4,(24,1)),((25,15),9)))))))))),23),(21,11)))));
	TREE 'Tree 8 from search (criterion: minimize Tree value using character matrix)' = ((28,(((5,17),((14,(27,8)),16)),(18,(19,12)))),(((3,(22,((10,6),((13,29),(26,(2,(20,(7,((4,(24,1)),((25,15),9)))))))))),23),(21,11)));
	TREE 'Tree 9 from search (criterion: minimize Tree value using character matrix)' = (28,((((5,17),((14,(27,8)),16)),(18,(19,12))),(((3,(22,((10,6),((13,29),(26,(2,(20,(7,((4,(24,1)),((25,15),9)))))))))),23),(21,11))));

END;


BEGIN TREES;
	Title Trees_from_heuristic_search;
	LINK Taxa = Taxa;
	TRANSLATE
		1 Paranomalurus_walkeri,
		2 Pondaungimys,
		3 Prolapsus,
		4 Shazurus,
		5 Hartenbergeromys,
		6 Glibia,
		7 Nementchamys,
		8 Theridomys,
		9 Paranomalurus_soniae,
		10 Zegdoumys,
		11 Eogliravus,
		12 Cocomys,
		13 Pappocricetodon,
		14 Remys,
		15 Anomalurus,
		16 Protadelomys,
		17 Pantrogna,
		18 Paramys,
		19 Tribosphenomys,
		20 Kebirmys,
		21 Bransatoglis,
		22 Pauromys,
		23 Knightomys,
		24 Paranomalurus_bishopi,
		25 Idiurus,
		26 Glibia_namibiensis,
		27 Elfomys,
		28 Birbalomys,
		29 Sinosminthus;
	TREE 'Tree 1 from search (criterion: minimize Tree value using character matrix)' = (((28,((21,11),(23,(3,(22,((10,6),((13,29),(26,(2,(20,((((1,24),4),(9,(15,25))),7))))))))))),(18,(12,19))),((5,17),((14,(27,8)),16)));
	TREE 'Tree 2 from search (criterion: minimize Tree value using character matrix)' = (((18,(12,19)),((5,17),((14,(27,8)),16))),(28,((21,11),(23,(3,(22,((10,6),((13,29),(26,(2,(20,((((1,24),4),(9,(15,25))),7))))))))))));
	TREE 'Tree 3 from search (criterion: minimize Tree value using character matrix)' = ((18,(12,19)),((28,((21,11),(23,(3,(22,((10,6),((13,29),(26,(2,(20,((((1,24),4),(9,(15,25))),7))))))))))),((5,17),((14,(27,8)),16))));
	TREE 'Tree 4 from search (criterion: minimize Tree value using character matrix)' = ((28,((18,(12,19)),((5,17),((14,(27,8)),16)))),((21,11),(23,(3,(22,((10,6),((13,29),(26,(2,(20,((((1,24),4),(9,(15,25))),7)))))))))));
	TREE 'Tree 5 from search (criterion: minimize Tree value using character matrix)' = (28,(((18,(12,19)),((5,17),((14,(27,8)),16))),((21,11),(23,(3,(22,((10,6),((13,29),(26,(2,(20,((((1,24),4),(9,(15,25))),7))))))))))));
	TREE 'Tree 6 from search (criterion: minimize Tree value using character matrix)' = (((12,19),((28,((21,11),(23,(3,(22,((10,6),((13,29),(26,(2,(20,((((1,24),4),(9,(15,25))),7))))))))))),((5,17),((14,(27,8)),16)))),18);
	TREE 'Tree 7 from search (criterion: minimize Tree value using character matrix)' = ((12,19),(18,((28,((21,11),(23,(3,(22,((10,6),((13,29),(26,(2,(20,((((1,24),4),(9,(15,25))),7))))))))))),((5,17),((14,(27,8)),16)))));
	TREE 'Tree 8 from search (criterion: minimize Tree value using character matrix)' = ((19,(18,((28,((21,11),(23,(3,(22,((10,6),((13,29),(26,(2,(20,((((1,24),4),(9,(15,25))),7))))))))))),((5,17),((14,(27,8)),16))))),12);
	TREE 'Tree 9 from search (criterion: minimize Tree value using character matrix)' = (19,(12,(18,((28,((21,11),(23,(3,(22,((10,6),((13,29),(26,(2,(20,((((1,24),4),(9,(15,25))),7))))))))))),((5,17),((14,(27,8)),16))))));

END;


BEGIN TREES;
	Title Trees_from_heuristic_search;
	LINK Taxa = Taxa;
	TRANSLATE
		1 Paranomalurus_walkeri,
		2 Pondaungimys,
		3 Prolapsus,
		4 Shazurus,
		5 Hartenbergeromys,
		6 Glibia,
		7 Nementchamys,
		8 Theridomys,
		9 Paranomalurus_soniae,
		10 Zegdoumys,
		11 Eogliravus,
		12 Cocomys,
		13 Pappocricetodon,
		14 Remys,
		15 Anomalurus,
		16 Protadelomys,
		17 Pantrogna,
		18 Paramys,
		19 Tribosphenomys,
		20 Kebirmys,
		21 Bransatoglis,
		22 Pauromys,
		23 Knightomys,
		24 Paranomalurus_bishopi,
		25 Idiurus,
		26 Glibia_namibiensis,
		27 Elfomys,
		28 Birbalomys,
		29 Sinosminthus;
	TREE 'Tree 1 from search (criterion: minimize Tree value using character matrix)' = ((19,(18,((17,5),((((22,(((6,10),(((27,8),(16,14)),((13,29),(26,(2,((20,7),((4,(1,24)),((25,15),9)))))))),3)),23),(21,11)),28)))),12);
	TREE 'Tree 2 from search (criterion: minimize Tree value using character matrix)' = (((18,((17,5),((((22,(((6,10),(((27,8),(16,14)),((13,29),(26,(2,((20,7),((4,(1,24)),((25,15),9)))))))),3)),23),(21,11)),28))),12),19);
	TREE 'Tree 3 from search (criterion: minimize Tree value using character matrix)' = ((18,((17,5),((((22,(((6,10),(((27,8),(16,14)),((13,29),(26,(2,((20,7),((4,(1,24)),((25,15),9)))))))),3)),23),(21,11)),28))),(19,12));
	TREE 'Tree 4 from search (criterion: minimize Tree value using character matrix)' = ((19,(18,((17,5),((((22,(((6,10),((8,(27,(16,14))),((13,29),(26,(2,((20,7),((4,(1,24)),((25,15),9)))))))),3)),23),(21,11)),28)))),12);
	TREE 'Tree 5 from search (criterion: minimize Tree value using character matrix)' = (((18,((17,5),((((22,(((6,10),((8,(27,(16,14))),((13,29),(26,(2,((20,7),((4,(1,24)),((25,15),9)))))))),3)),23),(21,11)),28))),12),19);
	TREE 'Tree 6 from search (criterion: minimize Tree value using character matrix)' = ((((17,5),((((22,(((6,10),(((27,8),(16,14)),((13,29),(26,(2,((20,7),((4,(1,24)),((25,15),9)))))))),3)),23),(21,11)),28)),(19,12)),18);
	TREE 'Tree 7 from search (criterion: minimize Tree value using character matrix)' = (((17,5),((((22,(((6,10),(((27,8),(16,14)),((13,29),(26,(2,((20,7),((4,(1,24)),((25,15),9)))))))),3)),23),(21,11)),28)),(18,(19,12)));
	TREE 'Tree 8 from search (criterion: minimize Tree value using character matrix)' = ((18,((17,5),((((22,(((6,10),((8,(27,(16,14))),((13,29),(26,(2,((20,7),((4,(1,24)),((25,15),9)))))))),3)),23),(21,11)),28))),(19,12));
	TREE 'Tree 9 from search (criterion: minimize Tree value using character matrix)' = ((((17,5),((((22,(((6,10),((8,(27,(16,14))),((13,29),(26,(2,((20,7),((4,(1,24)),((25,15),9)))))))),3)),23),(21,11)),28)),(19,12)),18);
	TREE 'Tree 10 from search (criterion: minimize Tree value using character matrix)' = ((((((22,(((6,10),(((27,8),(16,14)),((13,29),(26,(2,((20,7),((4,(1,24)),((25,15),9)))))))),3)),23),(21,11)),28),(18,(19,12))),(17,5));
	TREE 'Tree 11 from search (criterion: minimize Tree value using character matrix)' = (((((22,(((6,10),(((27,8),(16,14)),((13,29),(26,(2,((20,7),((4,(1,24)),((25,15),9)))))))),3)),23),(21,11)),28),((17,5),(18,(19,12))));
	TREE 'Tree 12 from search (criterion: minimize Tree value using character matrix)' = (((17,5),((((22,(((6,10),((8,(27,(16,14))),((13,29),(26,(2,((20,7),((4,(1,24)),((25,15),9)))))))),3)),23),(21,11)),28)),(18,(19,12)));
	TREE 'Tree 13 from search (criterion: minimize Tree value using character matrix)' = ((17,(((((22,(((6,10),(((27,8),(16,14)),((13,29),(26,(2,((20,7),((4,(1,24)),((25,15),9)))))))),3)),23),(21,11)),28),(18,(19,12)))),5);
	TREE 'Tree 14 from search (criterion: minimize Tree value using character matrix)' = (17,((((((22,(((6,10),(((27,8),(16,14)),((13,29),(26,(2,((20,7),((4,(1,24)),((25,15),9)))))))),3)),23),(21,11)),28),(18,(19,12))),5));
	TREE 'Tree 15 from search (criterion: minimize Tree value using character matrix)' = ((((((22,(((6,10),((8,(27,(16,14))),((13,29),(26,(2,((20,7),((4,(1,24)),((25,15),9)))))))),3)),23),(21,11)),28),(18,(19,12))),(17,5));
	TREE 'Tree 16 from search (criterion: minimize Tree value using character matrix)' = ((28,((17,5),(18,(19,12)))),(((22,(((6,10),(((27,8),(16,14)),((13,29),(26,(2,((20,7),((4,(1,24)),((25,15),9)))))))),3)),23),(21,11)));
	TREE 'Tree 17 from search (criterion: minimize Tree value using character matrix)' = (28,((((22,(((6,10),(((27,8),(16,14)),((13,29),(26,(2,((20,7),((4,(1,24)),((25,15),9)))))))),3)),23),(21,11)),((17,5),(18,(19,12)))));
	TREE 'Tree 18 from search (criterion: minimize Tree value using character matrix)' = (((((22,(((6,10),((8,(27,(16,14))),((13,29),(26,(2,((20,7),((4,(1,24)),((25,15),9)))))))),3)),23),(21,11)),28),((17,5),(18,(19,12))));
	TREE 'Tree 19 from search (criterion: minimize Tree value using character matrix)' = ((17,(((((22,(((6,10),((8,(27,(16,14))),((13,29),(26,(2,((20,7),((4,(1,24)),((25,15),9)))))))),3)),23),(21,11)),28),(18,(19,12)))),5);
	TREE 'Tree 20 from search (criterion: minimize Tree value using character matrix)' = (17,((((((22,(((6,10),((8,(27,(16,14))),((13,29),(26,(2,((20,7),((4,(1,24)),((25,15),9)))))))),3)),23),(21,11)),28),(18,(19,12))),5));
	TREE 'Tree 21 from search (criterion: minimize Tree value using character matrix)' = ((28,((17,5),(18,(19,12)))),(((22,(((6,10),((8,(27,(16,14))),((13,29),(26,(2,((20,7),((4,(1,24)),((25,15),9)))))))),3)),23),(21,11)));
	TREE 'Tree 22 from search (criterion: minimize Tree value using character matrix)' = (28,((((22,(((6,10),((8,(27,(16,14))),((13,29),(26,(2,((20,7),((4,(1,24)),((25,15),9)))))))),3)),23),(21,11)),((17,5),(18,(19,12)))));

END;


BEGIN TREES;
	Title Trees_from_heuristic_search;
	LINK Taxa = Taxa;
	TRANSLATE
		1 Paranomalurus_walkeri,
		2 Pondaungimys,
		3 Prolapsus,
		4 Shazurus,
		5 Hartenbergeromys,
		6 Glibia,
		7 Nementchamys,
		8 Theridomys,
		9 Paranomalurus_soniae,
		10 Zegdoumys,
		11 Eogliravus,
		12 Cocomys,
		13 Pappocricetodon,
		14 Remys,
		15 Anomalurus,
		16 Protadelomys,
		17 Pantrogna,
		18 Paramys,
		19 Tribosphenomys,
		20 Kebirmys,
		21 Bransatoglis,
		22 Pauromys,
		23 Knightomys,
		24 Paranomalurus_bishopi,
		25 Idiurus,
		26 Glibia_namibiensis,
		27 Elfomys,
		28 Birbalomys,
		29 Sinosminthus;
	TREE 'Tree 1 from search (criterion: minimize Tree value using character matrix)' = (((((16,(14,(27,8))),(17,5)),((19,12),18)),28),((((22,(((13,29),((2,(20,((((25,15),9),((1,24),4)),7))),26)),(6,10))),3),23),(11,21)));
	TREE 'Tree 2 from search (criterion: minimize Tree value using character matrix)' = ((28,((((22,(((13,29),((2,(20,((((25,15),9),((1,24),4)),7))),26)),(6,10))),3),23),(11,21))),(((16,(14,(27,8))),(17,5)),((19,12),18)));
	TREE 'Tree 3 from search (criterion: minimize Tree value using character matrix)' = (28,((((16,(14,(27,8))),(17,5)),((19,12),18)),((((22,(((13,29),((2,(20,((((25,15),9),((1,24),4)),7))),26)),(6,10))),3),23),(11,21))));
	TREE 'Tree 4 from search (criterion: minimize Tree value using character matrix)' = ((((16,(14,(27,8))),(17,5)),(28,((((22,(((13,29),((2,(20,((((25,15),9),((1,24),4)),7))),26)),(6,10))),3),23),(11,21)))),((19,12),18));
	TREE 'Tree 5 from search (criterion: minimize Tree value using character matrix)' = (((16,(14,(27,8))),(17,5)),((28,((((22,(((13,29),((2,(20,((((25,15),9),((1,24),4)),7))),26)),(6,10))),3),23),(11,21))),((19,12),18)));
	TREE 'Tree 6 from search (criterion: minimize Tree value using character matrix)' = (((19,12),(((16,(14,(27,8))),(17,5)),(28,((((22,(((13,29),((2,(20,((((25,15),9),((1,24),4)),7))),26)),(6,10))),3),23),(11,21))))),18);
	TREE 'Tree 7 from search (criterion: minimize Tree value using character matrix)' = ((19,12),((((16,(14,(27,8))),(17,5)),(28,((((22,(((13,29),((2,(20,((((25,15),9),((1,24),4)),7))),26)),(6,10))),3),23),(11,21)))),18));
	TREE 'Tree 8 from search (criterion: minimize Tree value using character matrix)' = ((12,((((16,(14,(27,8))),(17,5)),(28,((((22,(((13,29),((2,(20,((((25,15),9),((1,24),4)),7))),26)),(6,10))),3),23),(11,21)))),18)),19);
	TREE 'Tree 9 from search (criterion: minimize Tree value using character matrix)' = (12,(19,((((16,(14,(27,8))),(17,5)),(28,((((22,(((13,29),((2,(20,((((25,15),9),((1,24),4)),7))),26)),(6,10))),3),23),(11,21)))),18)));

END;


BEGIN TREES;
	Title Trees_from_heuristic_search;
	LINK Taxa = Taxa;
	TRANSLATE
		1 Paranomalurus_walkeri,
		2 Pondaungimys,
		3 Prolapsus,
		4 Shazurus,
		5 Hartenbergeromys,
		6 Glibia,
		7 Nementchamys,
		8 Theridomys,
		9 Paranomalurus_soniae,
		10 Zegdoumys,
		11 Eogliravus,
		12 Cocomys,
		13 Pappocricetodon,
		14 Remys,
		15 Anomalurus,
		16 Protadelomys,
		17 Pantrogna,
		18 Paramys,
		19 Tribosphenomys,
		20 Kebirmys,
		21 Bransatoglis,
		22 Pauromys,
		23 Knightomys,
		24 Paranomalurus_bishopi,
		25 Idiurus,
		26 Glibia_namibiensis,
		27 Elfomys,
		28 Birbalomys,
		29 Sinosminthus;
	TREE 'Tree 1 from search (criterion: minimize Tree value using character matrix)' = (28,((17,5),((((3,(23,((10,6),(((29,13),(26,(((20,7),(((24,1),4),(9,(15,25)))),2))),((16,14),(8,27)))))),22),(21,11)),(18,(12,19)))));
	TREE 'Tree 2 from search (criterion: minimize Tree value using character matrix)' = (((17,5),28),((((3,(23,((10,6),(((29,13),(26,(((20,7),(((24,1),4),(9,(15,25)))),2))),((16,14),(8,27)))))),22),(21,11)),(18,(12,19))));
	TREE 'Tree 3 from search (criterion: minimize Tree value using character matrix)' = ((17,5),(28,((((3,(23,((10,6),(((29,13),(26,(((20,7),(((24,1),4),(9,(15,25)))),2))),((16,14),(8,27)))))),22),(21,11)),(18,(12,19)))));
	TREE 'Tree 4 from search (criterion: minimize Tree value using character matrix)' = (28,((17,5),((((23,((10,6),(((29,13),(26,(((20,7),(((24,1),4),(9,(15,25)))),2))),((16,14),(8,27))))),(3,22)),(21,11)),(18,(12,19)))));
	TREE 'Tree 5 from search (criterion: minimize Tree value using character matrix)' = (((((3,(23,((10,6),(((29,13),(26,(((20,7),(((24,1),4),(9,(15,25)))),2))),((16,14),(8,27)))))),22),(21,11)),((17,5),28)),(18,(12,19)));
	TREE 'Tree 6 from search (criterion: minimize Tree value using character matrix)' = ((((3,(23,((10,6),(((29,13),(26,(((20,7),(((24,1),4),(9,(15,25)))),2))),((16,14),(8,27)))))),22),(21,11)),(((17,5),28),(18,(12,19))));
	TREE 'Tree 7 from search (criterion: minimize Tree value using character matrix)' = (((17,5),28),((((23,((10,6),(((29,13),(26,(((20,7),(((24,1),4),(9,(15,25)))),2))),((16,14),(8,27))))),(3,22)),(21,11)),(18,(12,19))));
	TREE 'Tree 8 from search (criterion: minimize Tree value using character matrix)' = ((5,(28,((((3,(23,((10,6),(((29,13),(26,(((20,7),(((24,1),4),(9,(15,25)))),2))),((16,14),(8,27)))))),22),(21,11)),(18,(12,19))))),17);
	TREE 'Tree 9 from search (criterion: minimize Tree value using character matrix)' = (5,(17,(28,((((3,(23,((10,6),(((29,13),(26,(((20,7),(((24,1),4),(9,(15,25)))),2))),((16,14),(8,27)))))),22),(21,11)),(18,(12,19))))));
	TREE 'Tree 10 from search (criterion: minimize Tree value using character matrix)' = ((17,5),(28,((((23,((10,6),(((29,13),(26,(((20,7),(((24,1),4),(9,(15,25)))),2))),((16,14),(8,27))))),(3,22)),(21,11)),(18,(12,19)))));
	TREE 'Tree 11 from search (criterion: minimize Tree value using character matrix)' = ((18,((((3,(23,((10,6),(((29,13),(26,(((20,7),(((24,1),4),(9,(15,25)))),2))),((16,14),(8,27)))))),22),(21,11)),((17,5),28))),(12,19));
	TREE 'Tree 12 from search (criterion: minimize Tree value using character matrix)' = (18,(((((3,(23,((10,6),(((29,13),(26,(((20,7),(((24,1),4),(9,(15,25)))),2))),((16,14),(8,27)))))),22),(21,11)),((17,5),28)),(12,19)));
	TREE 'Tree 13 from search (criterion: minimize Tree value using character matrix)' = (((((23,((10,6),(((29,13),(26,(((20,7),(((24,1),4),(9,(15,25)))),2))),((16,14),(8,27))))),(3,22)),(21,11)),((17,5),28)),(18,(12,19)));
	TREE 'Tree 14 from search (criterion: minimize Tree value using character matrix)' = ((((23,((10,6),(((29,13),(26,(((20,7),(((24,1),4),(9,(15,25)))),2))),((16,14),(8,27))))),(3,22)),(21,11)),(((17,5),28),(18,(12,19))));
	TREE 'Tree 15 from search (criterion: minimize Tree value using character matrix)' = ((5,(28,((((23,((10,6),(((29,13),(26,(((20,7),(((24,1),4),(9,(15,25)))),2))),((16,14),(8,27))))),(3,22)),(21,11)),(18,(12,19))))),17);
	TREE 'Tree 16 from search (criterion: minimize Tree value using character matrix)' = (5,(17,(28,((((23,((10,6),(((29,13),(26,(((20,7),(((24,1),4),(9,(15,25)))),2))),((16,14),(8,27))))),(3,22)),(21,11)),(18,(12,19))))));
	TREE 'Tree 17 from search (criterion: minimize Tree value using character matrix)' = ((12,(18,((((3,(23,((10,6),(((29,13),(26,(((20,7),(((24,1),4),(9,(15,25)))),2))),((16,14),(8,27)))))),22),(21,11)),((17,5),28)))),19);
	TREE 'Tree 18 from search (criterion: minimize Tree value using character matrix)' = (12,((18,((((3,(23,((10,6),(((29,13),(26,(((20,7),(((24,1),4),(9,(15,25)))),2))),((16,14),(8,27)))))),22),(21,11)),((17,5),28))),19));
	TREE 'Tree 19 from search (criterion: minimize Tree value using character matrix)' = ((18,((((23,((10,6),(((29,13),(26,(((20,7),(((24,1),4),(9,(15,25)))),2))),((16,14),(8,27))))),(3,22)),(21,11)),((17,5),28))),(12,19));
	TREE 'Tree 20 from search (criterion: minimize Tree value using character matrix)' = (18,(((((23,((10,6),(((29,13),(26,(((20,7),(((24,1),4),(9,(15,25)))),2))),((16,14),(8,27))))),(3,22)),(21,11)),((17,5),28)),(12,19)));
	TREE 'Tree 21 from search (criterion: minimize Tree value using character matrix)' = ((12,(18,((((23,((10,6),(((29,13),(26,(((20,7),(((24,1),4),(9,(15,25)))),2))),((16,14),(8,27))))),(3,22)),(21,11)),((17,5),28)))),19);
	TREE 'Tree 22 from search (criterion: minimize Tree value using character matrix)' = (12,((18,((((23,((10,6),(((29,13),(26,(((20,7),(((24,1),4),(9,(15,25)))),2))),((16,14),(8,27))))),(3,22)),(21,11)),((17,5),28))),19));

END;


BEGIN TREES;
	Title Trees_from_heuristic_search;
	LINK Taxa = Taxa;
	TRANSLATE
		1 Paranomalurus_walkeri,
		2 Pondaungimys,
		3 Prolapsus,
		4 Shazurus,
		5 Hartenbergeromys,
		6 Glibia,
		7 Nementchamys,
		8 Theridomys,
		9 Paranomalurus_soniae,
		10 Zegdoumys,
		11 Eogliravus,
		12 Cocomys,
		13 Pappocricetodon,
		14 Remys,
		15 Anomalurus,
		16 Protadelomys,
		17 Pantrogna,
		18 Paramys,
		19 Tribosphenomys,
		20 Kebirmys,
		21 Bransatoglis,
		22 Pauromys,
		23 Knightomys,
		24 Paranomalurus_bishopi,
		25 Idiurus,
		26 Glibia_namibiensis,
		27 Elfomys,
		28 Birbalomys,
		29 Sinosminthus;
	TREE 'Tree 1 from search (criterion: minimize Tree value using character matrix)' = ((((18,(19,12)),(28,((21,11),(23,(22,(3,((6,10),(((8,27),(16,14)),((29,13),(26,(2,((7,20),((4,(24,1)),((25,15),9)))))))))))))),5),17);
	TREE 'Tree 2 from search (criterion: minimize Tree value using character matrix)' = ((5,17),((18,(19,12)),(28,((21,11),(23,(22,(3,((6,10),(((8,27),(16,14)),((29,13),(26,(2,((7,20),((4,(24,1)),((25,15),9)))))))))))))));
	TREE 'Tree 3 from search (criterion: minimize Tree value using character matrix)' = (5,(((18,(19,12)),(28,((21,11),(23,(22,(3,((6,10),(((8,27),(16,14)),((29,13),(26,(2,((7,20),((4,(24,1)),((25,15),9)))))))))))))),17));
	TREE 'Tree 4 from search (criterion: minimize Tree value using character matrix)' = ((((18,(19,12)),(28,((21,11),(23,(22,(3,((6,10),(((27,(16,14)),8),((29,13),(26,(2,((7,20),((4,(24,1)),((25,15),9)))))))))))))),5),17);
	TREE 'Tree 5 from search (criterion: minimize Tree value using character matrix)' = (((18,(19,12)),(5,17)),(28,((21,11),(23,(22,(3,((6,10),(((8,27),(16,14)),((29,13),(26,(2,((7,20),((4,(24,1)),((25,15),9))))))))))))));
	TREE 'Tree 6 from search (criterion: minimize Tree value using character matrix)' = ((18,(19,12)),((5,17),(28,((21,11),(23,(22,(3,((6,10),(((8,27),(16,14)),((29,13),(26,(2,((7,20),((4,(24,1)),((25,15),9)))))))))))))));
	TREE 'Tree 7 from search (criterion: minimize Tree value using character matrix)' = ((5,17),((18,(19,12)),(28,((21,11),(23,(22,(3,((6,10),(((27,(16,14)),8),((29,13),(26,(2,((7,20),((4,(24,1)),((25,15),9)))))))))))))));
	TREE 'Tree 8 from search (criterion: minimize Tree value using character matrix)' = (5,(((18,(19,12)),(28,((21,11),(23,(22,(3,((6,10),(((27,(16,14)),8),((29,13),(26,(2,((7,20),((4,(24,1)),((25,15),9)))))))))))))),17));
	TREE 'Tree 9 from search (criterion: minimize Tree value using character matrix)' = ((28,((18,(19,12)),(5,17))),((21,11),(23,(22,(3,((6,10),(((8,27),(16,14)),((29,13),(26,(2,((7,20),((4,(24,1)),((25,15),9)))))))))))));
	TREE 'Tree 10 from search (criterion: minimize Tree value using character matrix)' = (28,(((18,(19,12)),(5,17)),((21,11),(23,(22,(3,((6,10),(((8,27),(16,14)),((29,13),(26,(2,((7,20),((4,(24,1)),((25,15),9))))))))))))));
	TREE 'Tree 11 from search (criterion: minimize Tree value using character matrix)' = (((18,(19,12)),(5,17)),(28,((21,11),(23,(22,(3,((6,10),(((27,(16,14)),8),((29,13),(26,(2,((7,20),((4,(24,1)),((25,15),9))))))))))))));
	TREE 'Tree 12 from search (criterion: minimize Tree value using character matrix)' = (((19,12),((5,17),(28,((21,11),(23,(22,(3,((6,10),(((8,27),(16,14)),((29,13),(26,(2,((7,20),((4,(24,1)),((25,15),9))))))))))))))),18);
	TREE 'Tree 13 from search (criterion: minimize Tree value using character matrix)' = ((19,12),(18,((5,17),(28,((21,11),(23,(22,(3,((6,10),(((8,27),(16,14)),((29,13),(26,(2,((7,20),((4,(24,1)),((25,15),9))))))))))))))));
	TREE 'Tree 14 from search (criterion: minimize Tree value using character matrix)' = ((18,(19,12)),((5,17),(28,((21,11),(23,(22,(3,((6,10),(((27,(16,14)),8),((29,13),(26,(2,((7,20),((4,(24,1)),((25,15),9)))))))))))))));
	TREE 'Tree 15 from search (criterion: minimize Tree value using character matrix)' = ((28,((18,(19,12)),(5,17))),((21,11),(23,(22,(3,((6,10),(((27,(16,14)),8),((29,13),(26,(2,((7,20),((4,(24,1)),((25,15),9)))))))))))));
	TREE 'Tree 16 from search (criterion: minimize Tree value using character matrix)' = (28,(((18,(19,12)),(5,17)),((21,11),(23,(22,(3,((6,10),(((27,(16,14)),8),((29,13),(26,(2,((7,20),((4,(24,1)),((25,15),9))))))))))))));
	TREE 'Tree 17 from search (criterion: minimize Tree value using character matrix)' = (((19,12),((5,17),(28,((21,11),(23,(22,(3,((6,10),(((27,(16,14)),8),((29,13),(26,(2,((7,20),((4,(24,1)),((25,15),9))))))))))))))),18);
	TREE 'Tree 18 from search (criterion: minimize Tree value using character matrix)' = ((12,(18,((5,17),(28,((21,11),(23,(22,(3,((6,10),(((8,27),(16,14)),((29,13),(26,(2,((7,20),((4,(24,1)),((25,15),9)))))))))))))))),19);
	TREE 'Tree 19 from search (criterion: minimize Tree value using character matrix)' = (12,(19,(18,((5,17),(28,((21,11),(23,(22,(3,((6,10),(((8,27),(16,14)),((29,13),(26,(2,((7,20),((4,(24,1)),((25,15),9)))))))))))))))));
	TREE 'Tree 20 from search (criterion: minimize Tree value using character matrix)' = ((19,12),(18,((5,17),(28,((21,11),(23,(22,(3,((6,10),(((27,(16,14)),8),((29,13),(26,(2,((7,20),((4,(24,1)),((25,15),9))))))))))))))));
	TREE 'Tree 21 from search (criterion: minimize Tree value using character matrix)' = ((12,(18,((5,17),(28,((21,11),(23,(22,(3,((6,10),(((27,(16,14)),8),((29,13),(26,(2,((7,20),((4,(24,1)),((25,15),9)))))))))))))))),19);
	TREE 'Tree 22 from search (criterion: minimize Tree value using character matrix)' = (12,(19,(18,((5,17),(28,((21,11),(23,(22,(3,((6,10),(((27,(16,14)),8),((29,13),(26,(2,((7,20),((4,(24,1)),((25,15),9)))))))))))))))));

END;


BEGIN TREES;
	Title Trees_from_heuristic_search;
	LINK Taxa = Taxa;
	TRANSLATE
		1 Paranomalurus_walkeri,
		2 Pondaungimys,
		3 Prolapsus,
		4 Shazurus,
		5 Hartenbergeromys,
		6 Glibia,
		7 Nementchamys,
		8 Theridomys,
		9 Paranomalurus_soniae,
		10 Zegdoumys,
		11 Eogliravus,
		12 Cocomys,
		13 Pappocricetodon,
		14 Remys,
		15 Anomalurus,
		16 Protadelomys,
		17 Pantrogna,
		18 Paramys,
		19 Tribosphenomys,
		20 Kebirmys,
		21 Bransatoglis,
		22 Pauromys,
		23 Knightomys,
		24 Paranomalurus_bishopi,
		25 Idiurus,
		26 Glibia_namibiensis,
		27 Elfomys,
		28 Birbalomys,
		29 Sinosminthus;
	TREE 'Tree 1 from search (criterion: minimize Tree value using character matrix)' = (18,(((28,((21,11),(23,(3,(((10,6),((29,13),(26,((20,(((4,(1,24)),((25,15),9)),7)),2)))),22))))),((16,(14,(27,8))),(17,5))),(12,19)));
	TREE 'Tree 2 from search (criterion: minimize Tree value using character matrix)' = ((((28,((21,11),(23,(3,(((10,6),((29,13),(26,((20,(((4,(1,24)),((25,15),9)),7)),2)))),22))))),((16,(14,(27,8))),(17,5))),18),(12,19));
	TREE 'Tree 3 from search (criterion: minimize Tree value using character matrix)' = (((28,((21,11),(23,(3,(((10,6),((29,13),(26,((20,(((4,(1,24)),((25,15),9)),7)),2)))),22))))),((16,(14,(27,8))),(17,5))),(18,(12,19)));
	TREE 'Tree 4 from search (criterion: minimize Tree value using character matrix)' = ((12,(((28,((21,11),(23,(3,(((10,6),((29,13),(26,((20,(((4,(1,24)),((25,15),9)),7)),2)))),22))))),((16,(14,(27,8))),(17,5))),18)),19);
	TREE 'Tree 5 from search (criterion: minimize Tree value using character matrix)' = (12,((((28,((21,11),(23,(3,(((10,6),((29,13),(26,((20,(((4,(1,24)),((25,15),9)),7)),2)))),22))))),((16,(14,(27,8))),(17,5))),18),19));
	TREE 'Tree 6 from search (criterion: minimize Tree value using character matrix)' = ((((16,(14,(27,8))),(17,5)),(18,(12,19))),(28,((21,11),(23,(3,(((10,6),((29,13),(26,((20,(((4,(1,24)),((25,15),9)),7)),2)))),22))))));
	TREE 'Tree 7 from search (criterion: minimize Tree value using character matrix)' = (((16,(14,(27,8))),(17,5)),((28,((21,11),(23,(3,(((10,6),((29,13),(26,((20,(((4,(1,24)),((25,15),9)),7)),2)))),22))))),(18,(12,19))));
	TREE 'Tree 8 from search (criterion: minimize Tree value using character matrix)' = ((28,(((16,(14,(27,8))),(17,5)),(18,(12,19)))),((21,11),(23,(3,(((10,6),((29,13),(26,((20,(((4,(1,24)),((25,15),9)),7)),2)))),22)))));
	TREE 'Tree 9 from search (criterion: minimize Tree value using character matrix)' = (28,((((16,(14,(27,8))),(17,5)),(18,(12,19))),((21,11),(23,(3,(((10,6),((29,13),(26,((20,(((4,(1,24)),((25,15),9)),7)),2)))),22))))));

END;


BEGIN TREES;
	Title Trees_from_heuristic_search;
	LINK Taxa = Taxa;
	TRANSLATE
		1 Paranomalurus_walkeri,
		2 Pondaungimys,
		3 Prolapsus,
		4 Shazurus,
		5 Hartenbergeromys,
		6 Glibia,
		7 Nementchamys,
		8 Theridomys,
		9 Paranomalurus_soniae,
		10 Zegdoumys,
		11 Eogliravus,
		12 Cocomys,
		13 Pappocricetodon,
		14 Remys,
		15 Anomalurus,
		16 Protadelomys,
		17 Pantrogna,
		18 Paramys,
		19 Tribosphenomys,
		20 Kebirmys,
		21 Bransatoglis,
		22 Pauromys,
		23 Knightomys,
		24 Paranomalurus_bishopi,
		25 Idiurus,
		26 Glibia_namibiensis,
		27 Elfomys,
		28 Birbalomys,
		29 Sinosminthus;
	TREE 'Tree 1 from search (criterion: minimize Tree value using character matrix)' = ((((18,(12,19)),(28,((21,11),(23,(22,(3,((10,6),(((16,14),(8,27)),(((((20,7),((9,(15,25)),(4,(24,1)))),2),26),(29,13)))))))))),5),17);
	TREE 'Tree 2 from search (criterion: minimize Tree value using character matrix)' = ((5,17),((18,(12,19)),(28,((21,11),(23,(22,(3,((10,6),(((16,14),(8,27)),(((((20,7),((9,(15,25)),(4,(24,1)))),2),26),(29,13)))))))))));
	TREE 'Tree 3 from search (criterion: minimize Tree value using character matrix)' = (5,(((18,(12,19)),(28,((21,11),(23,(22,(3,((10,6),(((16,14),(8,27)),(((((20,7),((9,(15,25)),(4,(24,1)))),2),26),(29,13)))))))))),17));
	TREE 'Tree 4 from search (criterion: minimize Tree value using character matrix)' = ((((18,(12,19)),(28,((21,11),(23,(22,(3,((10,6),((8,((16,14),27)),(((((20,7),((9,(15,25)),(4,(24,1)))),2),26),(29,13)))))))))),5),17);
	TREE 'Tree 5 from search (criterion: minimize Tree value using character matrix)' = (((18,(12,19)),(5,17)),(28,((21,11),(23,(22,(3,((10,6),(((16,14),(8,27)),(((((20,7),((9,(15,25)),(4,(24,1)))),2),26),(29,13))))))))));
	TREE 'Tree 6 from search (criterion: minimize Tree value using character matrix)' = ((18,(12,19)),((5,17),(28,((21,11),(23,(22,(3,((10,6),(((16,14),(8,27)),(((((20,7),((9,(15,25)),(4,(24,1)))),2),26),(29,13)))))))))));
	TREE 'Tree 7 from search (criterion: minimize Tree value using character matrix)' = ((5,17),((18,(12,19)),(28,((21,11),(23,(22,(3,((10,6),((8,((16,14),27)),(((((20,7),((9,(15,25)),(4,(24,1)))),2),26),(29,13)))))))))));
	TREE 'Tree 8 from search (criterion: minimize Tree value using character matrix)' = (5,(((18,(12,19)),(28,((21,11),(23,(22,(3,((10,6),((8,((16,14),27)),(((((20,7),((9,(15,25)),(4,(24,1)))),2),26),(29,13)))))))))),17));
	TREE 'Tree 9 from search (criterion: minimize Tree value using character matrix)' = ((28,((18,(12,19)),(5,17))),((21,11),(23,(22,(3,((10,6),(((16,14),(8,27)),(((((20,7),((9,(15,25)),(4,(24,1)))),2),26),(29,13)))))))));
	TREE 'Tree 10 from search (criterion: minimize Tree value using character matrix)' = (28,(((18,(12,19)),(5,17)),((21,11),(23,(22,(3,((10,6),(((16,14),(8,27)),(((((20,7),((9,(15,25)),(4,(24,1)))),2),26),(29,13))))))))));
	TREE 'Tree 11 from search (criterion: minimize Tree value using character matrix)' = (((18,(12,19)),(5,17)),(28,((21,11),(23,(22,(3,((10,6),((8,((16,14),27)),(((((20,7),((9,(15,25)),(4,(24,1)))),2),26),(29,13))))))))));
	TREE 'Tree 12 from search (criterion: minimize Tree value using character matrix)' = (((12,19),((5,17),(28,((21,11),(23,(22,(3,((10,6),(((16,14),(8,27)),(((((20,7),((9,(15,25)),(4,(24,1)))),2),26),(29,13))))))))))),18);
	TREE 'Tree 13 from search (criterion: minimize Tree value using character matrix)' = ((12,19),(18,((5,17),(28,((21,11),(23,(22,(3,((10,6),(((16,14),(8,27)),(((((20,7),((9,(15,25)),(4,(24,1)))),2),26),(29,13))))))))))));
	TREE 'Tree 14 from search (criterion: minimize Tree value using character matrix)' = ((18,(12,19)),((5,17),(28,((21,11),(23,(22,(3,((10,6),((8,((16,14),27)),(((((20,7),((9,(15,25)),(4,(24,1)))),2),26),(29,13)))))))))));
	TREE 'Tree 15 from search (criterion: minimize Tree value using character matrix)' = ((28,((18,(12,19)),(5,17))),((21,11),(23,(22,(3,((10,6),((8,((16,14),27)),(((((20,7),((9,(15,25)),(4,(24,1)))),2),26),(29,13)))))))));
	TREE 'Tree 16 from search (criterion: minimize Tree value using character matrix)' = (28,(((18,(12,19)),(5,17)),((21,11),(23,(22,(3,((10,6),((8,((16,14),27)),(((((20,7),((9,(15,25)),(4,(24,1)))),2),26),(29,13))))))))));
	TREE 'Tree 17 from search (criterion: minimize Tree value using character matrix)' = (((12,19),((5,17),(28,((21,11),(23,(22,(3,((10,6),((8,((16,14),27)),(((((20,7),((9,(15,25)),(4,(24,1)))),2),26),(29,13))))))))))),18);
	TREE 'Tree 18 from search (criterion: minimize Tree value using character matrix)' = ((19,(18,((5,17),(28,((21,11),(23,(22,(3,((10,6),(((16,14),(8,27)),(((((20,7),((9,(15,25)),(4,(24,1)))),2),26),(29,13)))))))))))),12);
	TREE 'Tree 19 from search (criterion: minimize Tree value using character matrix)' = (19,(12,(18,((5,17),(28,((21,11),(23,(22,(3,((10,6),(((16,14),(8,27)),(((((20,7),((9,(15,25)),(4,(24,1)))),2),26),(29,13)))))))))))));
	TREE 'Tree 20 from search (criterion: minimize Tree value using character matrix)' = ((12,19),(18,((5,17),(28,((21,11),(23,(22,(3,((10,6),((8,((16,14),27)),(((((20,7),((9,(15,25)),(4,(24,1)))),2),26),(29,13))))))))))));
	TREE 'Tree 21 from search (criterion: minimize Tree value using character matrix)' = ((19,(18,((5,17),(28,((21,11),(23,(22,(3,((10,6),((8,((16,14),27)),(((((20,7),((9,(15,25)),(4,(24,1)))),2),26),(29,13)))))))))))),12);
	TREE 'Tree 22 from search (criterion: minimize Tree value using character matrix)' = (19,(12,(18,((5,17),(28,((21,11),(23,(22,(3,((10,6),((8,((16,14),27)),(((((20,7),((9,(15,25)),(4,(24,1)))),2),26),(29,13)))))))))))));

END;


BEGIN TREES;
	Title Trees_from_heuristic_search;
	LINK Taxa = Taxa;
	TRANSLATE
		1 Paranomalurus_walkeri,
		2 Pondaungimys,
		3 Prolapsus,
		4 Shazurus,
		5 Hartenbergeromys,
		6 Glibia,
		7 Nementchamys,
		8 Theridomys,
		9 Paranomalurus_soniae,
		10 Zegdoumys,
		11 Eogliravus,
		12 Cocomys,
		13 Pappocricetodon,
		14 Remys,
		15 Anomalurus,
		16 Protadelomys,
		17 Pantrogna,
		18 Paramys,
		19 Tribosphenomys,
		20 Kebirmys,
		21 Bransatoglis,
		22 Pauromys,
		23 Knightomys,
		24 Paranomalurus_bishopi,
		25 Idiurus,
		26 Glibia_namibiensis,
		27 Elfomys,
		28 Birbalomys,
		29 Sinosminthus;
	TREE 'Tree 1 from search (criterion: minimize Tree value using character matrix)' = ((((12,19),18),(((11,21),((3,(22,((((2,(20,(((9,(15,25)),((1,24),4)),7))),26),(29,13)),(6,10)))),23)),28)),((17,5),(((8,27),14),16)));
	TREE 'Tree 2 from search (criterion: minimize Tree value using character matrix)' = (((((11,21),((3,(22,((((2,(20,(((9,(15,25)),((1,24),4)),7))),26),(29,13)),(6,10)))),23)),28),((17,5),(((8,27),14),16))),((12,19),18));
	TREE 'Tree 3 from search (criterion: minimize Tree value using character matrix)' = ((((11,21),((3,(22,((((2,(20,(((9,(15,25)),((1,24),4)),7))),26),(29,13)),(6,10)))),23)),28),(((12,19),18),((17,5),(((8,27),14),16))));
	TREE 'Tree 4 from search (criterion: minimize Tree value using character matrix)' = (((12,19),((((11,21),((3,(22,((((2,(20,(((9,(15,25)),((1,24),4)),7))),26),(29,13)),(6,10)))),23)),28),((17,5),(((8,27),14),16)))),18);
	TREE 'Tree 5 from search (criterion: minimize Tree value using character matrix)' = ((12,19),(((((11,21),((3,(22,((((2,(20,(((9,(15,25)),((1,24),4)),7))),26),(29,13)),(6,10)))),23)),28),((17,5),(((8,27),14),16))),18));
	TREE 'Tree 6 from search (criterion: minimize Tree value using character matrix)' = ((28,(((12,19),18),((17,5),(((8,27),14),16)))),((11,21),((3,(22,((((2,(20,(((9,(15,25)),((1,24),4)),7))),26),(29,13)),(6,10)))),23)));
	TREE 'Tree 7 from search (criterion: minimize Tree value using character matrix)' = (28,(((11,21),((3,(22,((((2,(20,(((9,(15,25)),((1,24),4)),7))),26),(29,13)),(6,10)))),23)),(((12,19),18),((17,5),(((8,27),14),16)))));
	TREE 'Tree 8 from search (criterion: minimize Tree value using character matrix)' = ((19,(((((11,21),((3,(22,((((2,(20,(((9,(15,25)),((1,24),4)),7))),26),(29,13)),(6,10)))),23)),28),((17,5),(((8,27),14),16))),18)),12);
	TREE 'Tree 9 from search (criterion: minimize Tree value using character matrix)' = (19,(12,(((((11,21),((3,(22,((((2,(20,(((9,(15,25)),((1,24),4)),7))),26),(29,13)),(6,10)))),23)),28),((17,5),(((8,27),14),16))),18)));

END;


BEGIN TREES;
	Title Trees_from_heuristic_search;
	LINK Taxa = Taxa;
	TRANSLATE
		1 Paranomalurus_walkeri,
		2 Pondaungimys,
		3 Prolapsus,
		4 Shazurus,
		5 Hartenbergeromys,
		6 Glibia,
		7 Nementchamys,
		8 Theridomys,
		9 Paranomalurus_soniae,
		10 Zegdoumys,
		11 Eogliravus,
		12 Cocomys,
		13 Pappocricetodon,
		14 Remys,
		15 Anomalurus,
		16 Protadelomys,
		17 Pantrogna,
		18 Paramys,
		19 Tribosphenomys,
		20 Kebirmys,
		21 Bransatoglis,
		22 Pauromys,
		23 Knightomys,
		24 Paranomalurus_bishopi,
		25 Idiurus,
		26 Glibia_namibiensis,
		27 Elfomys,
		28 Birbalomys,
		29 Sinosminthus;
	TREE 'Tree 1 from search (criterion: minimize Tree value using character matrix)' = ((((5,17),(18,(19,12))),((11,21),(23,(22,(3,((10,6),(((13,29),((2,(((4,(1,24)),(9,(15,25))),(7,20))),26)),((27,8),(16,14))))))))),28);
	TREE 'Tree 2 from search (criterion: minimize Tree value using character matrix)' = ((((11,21),(23,(22,(3,((10,6),(((13,29),((2,(((4,(1,24)),(9,(15,25))),(7,20))),26)),((27,8),(16,14)))))))),28),((5,17),(18,(19,12))));
	TREE 'Tree 3 from search (criterion: minimize Tree value using character matrix)' = (((11,21),(23,(22,(3,((10,6),(((13,29),((2,(((4,(1,24)),(9,(15,25))),(7,20))),26)),((27,8),(16,14)))))))),(((5,17),(18,(19,12))),28));
	TREE 'Tree 4 from search (criterion: minimize Tree value using character matrix)' = ((((5,17),(18,(19,12))),((11,21),(23,(22,(3,((10,6),(((13,29),((2,(((4,(1,24)),(9,(15,25))),(7,20))),26)),(8,(27,(16,14)))))))))),28);
	TREE 'Tree 5 from search (criterion: minimize Tree value using character matrix)' = (((5,17),(((11,21),(23,(22,(3,((10,6),(((13,29),((2,(((4,(1,24)),(9,(15,25))),(7,20))),26)),((27,8),(16,14)))))))),28)),(18,(19,12)));
	TREE 'Tree 6 from search (criterion: minimize Tree value using character matrix)' = ((5,17),((((11,21),(23,(22,(3,((10,6),(((13,29),((2,(((4,(1,24)),(9,(15,25))),(7,20))),26)),((27,8),(16,14)))))))),28),(18,(19,12))));
	TREE 'Tree 7 from search (criterion: minimize Tree value using character matrix)' = ((((11,21),(23,(22,(3,((10,6),(((13,29),((2,(((4,(1,24)),(9,(15,25))),(7,20))),26)),(8,(27,(16,14))))))))),28),((5,17),(18,(19,12))));
	TREE 'Tree 8 from search (criterion: minimize Tree value using character matrix)' = (((11,21),(23,(22,(3,((10,6),(((13,29),((2,(((4,(1,24)),(9,(15,25))),(7,20))),26)),(8,(27,(16,14))))))))),(((5,17),(18,(19,12))),28));
	TREE 'Tree 9 from search (criterion: minimize Tree value using character matrix)' = ((18,((5,17),(((11,21),(23,(22,(3,((10,6),(((13,29),((2,(((4,(1,24)),(9,(15,25))),(7,20))),26)),((27,8),(16,14)))))))),28))),(19,12));
	TREE 'Tree 10 from search (criterion: minimize Tree value using character matrix)' = (18,(((5,17),(((11,21),(23,(22,(3,((10,6),(((13,29),((2,(((4,(1,24)),(9,(15,25))),(7,20))),26)),((27,8),(16,14)))))))),28)),(19,12)));
	TREE 'Tree 11 from search (criterion: minimize Tree value using character matrix)' = (((5,17),(((11,21),(23,(22,(3,((10,6),(((13,29),((2,(((4,(1,24)),(9,(15,25))),(7,20))),26)),(8,(27,(16,14))))))))),28)),(18,(19,12)));
	TREE 'Tree 12 from search (criterion: minimize Tree value using character matrix)' = ((17,((((11,21),(23,(22,(3,((10,6),(((13,29),((2,(((4,(1,24)),(9,(15,25))),(7,20))),26)),((27,8),(16,14)))))))),28),(18,(19,12)))),5);
	TREE 'Tree 13 from search (criterion: minimize Tree value using character matrix)' = (17,(5,((((11,21),(23,(22,(3,((10,6),(((13,29),((2,(((4,(1,24)),(9,(15,25))),(7,20))),26)),((27,8),(16,14)))))))),28),(18,(19,12)))));
	TREE 'Tree 14 from search (criterion: minimize Tree value using character matrix)' = ((5,17),((((11,21),(23,(22,(3,((10,6),(((13,29),((2,(((4,(1,24)),(9,(15,25))),(7,20))),26)),(8,(27,(16,14))))))))),28),(18,(19,12))));
	TREE 'Tree 15 from search (criterion: minimize Tree value using character matrix)' = ((19,(18,((5,17),(((11,21),(23,(22,(3,((10,6),(((13,29),((2,(((4,(1,24)),(9,(15,25))),(7,20))),26)),((27,8),(16,14)))))))),28)))),12);
	TREE 'Tree 16 from search (criterion: minimize Tree value using character matrix)' = (19,((18,((5,17),(((11,21),(23,(22,(3,((10,6),(((13,29),((2,(((4,(1,24)),(9,(15,25))),(7,20))),26)),((27,8),(16,14)))))))),28))),12));
	TREE 'Tree 17 from search (criterion: minimize Tree value using character matrix)' = ((18,((5,17),(((11,21),(23,(22,(3,((10,6),(((13,29),((2,(((4,(1,24)),(9,(15,25))),(7,20))),26)),(8,(27,(16,14))))))))),28))),(19,12));
	TREE 'Tree 18 from search (criterion: minimize Tree value using character matrix)' = (18,(((5,17),(((11,21),(23,(22,(3,((10,6),(((13,29),((2,(((4,(1,24)),(9,(15,25))),(7,20))),26)),(8,(27,(16,14))))))))),28)),(19,12)));
	TREE 'Tree 19 from search (criterion: minimize Tree value using character matrix)' = ((17,((((11,21),(23,(22,(3,((10,6),(((13,29),((2,(((4,(1,24)),(9,(15,25))),(7,20))),26)),(8,(27,(16,14))))))))),28),(18,(19,12)))),5);
	TREE 'Tree 20 from search (criterion: minimize Tree value using character matrix)' = (17,(5,((((11,21),(23,(22,(3,((10,6),(((13,29),((2,(((4,(1,24)),(9,(15,25))),(7,20))),26)),(8,(27,(16,14))))))))),28),(18,(19,12)))));
	TREE 'Tree 21 from search (criterion: minimize Tree value using character matrix)' = ((19,(18,((5,17),(((11,21),(23,(22,(3,((10,6),(((13,29),((2,(((4,(1,24)),(9,(15,25))),(7,20))),26)),(8,(27,(16,14))))))))),28)))),12);
	TREE 'Tree 22 from search (criterion: minimize Tree value using character matrix)' = (19,((18,((5,17),(((11,21),(23,(22,(3,((10,6),(((13,29),((2,(((4,(1,24)),(9,(15,25))),(7,20))),26)),(8,(27,(16,14))))))))),28))),12));

END;


BEGIN TREES;
	Title Trees_from_heuristic_search;
	LINK Taxa = Taxa;
	TRANSLATE
		1 Paranomalurus_walkeri,
		2 Pondaungimys,
		3 Prolapsus,
		4 Shazurus,
		5 Hartenbergeromys,
		6 Glibia,
		7 Nementchamys,
		8 Theridomys,
		9 Paranomalurus_soniae,
		10 Zegdoumys,
		11 Eogliravus,
		12 Cocomys,
		13 Pappocricetodon,
		14 Remys,
		15 Anomalurus,
		16 Protadelomys,
		17 Pantrogna,
		18 Paramys,
		19 Tribosphenomys,
		20 Kebirmys,
		21 Bransatoglis,
		22 Pauromys,
		23 Knightomys,
		24 Paranomalurus_bishopi,
		25 Idiurus,
		26 Glibia_namibiensis,
		27 Elfomys,
		28 Birbalomys,
		29 Sinosminthus;
	TREE 'Tree 1 from search (criterion: minimize Tree value using character matrix)' = ((((((14,(27,8)),16),(5,17)),((19,12),18)),28),((11,21),(23,((22,((((((((9,(25,15)),((24,1),4)),7),20),2),26),(13,29)),(10,6))),3))));
	TREE 'Tree 2 from search (criterion: minimize Tree value using character matrix)' = ((28,((11,21),(23,((22,((((((((9,(25,15)),((24,1),4)),7),20),2),26),(13,29)),(10,6))),3)))),((((14,(27,8)),16),(5,17)),((19,12),18)));
	TREE 'Tree 3 from search (criterion: minimize Tree value using character matrix)' = (28,(((((14,(27,8)),16),(5,17)),((19,12),18)),((11,21),(23,((22,((((((((9,(25,15)),((24,1),4)),7),20),2),26),(13,29)),(10,6))),3)))));
	TREE 'Tree 4 from search (criterion: minimize Tree value using character matrix)' = (((((14,(27,8)),16),(5,17)),(28,((11,21),(23,((22,((((((((9,(25,15)),((24,1),4)),7),20),2),26),(13,29)),(10,6))),3))))),((19,12),18));
	TREE 'Tree 5 from search (criterion: minimize Tree value using character matrix)' = ((((14,(27,8)),16),(5,17)),((28,((11,21),(23,((22,((((((((9,(25,15)),((24,1),4)),7),20),2),26),(13,29)),(10,6))),3)))),((19,12),18)));
	TREE 'Tree 6 from search (criterion: minimize Tree value using character matrix)' = (((19,12),((((14,(27,8)),16),(5,17)),(28,((11,21),(23,((22,((((((((9,(25,15)),((24,1),4)),7),20),2),26),(13,29)),(10,6))),3)))))),18);
	TREE 'Tree 7 from search (criterion: minimize Tree value using character matrix)' = ((19,12),(((((14,(27,8)),16),(5,17)),(28,((11,21),(23,((22,((((((((9,(25,15)),((24,1),4)),7),20),2),26),(13,29)),(10,6))),3))))),18));
	TREE 'Tree 8 from search (criterion: minimize Tree value using character matrix)' = ((12,(((((14,(27,8)),16),(5,17)),(28,((11,21),(23,((22,((((((((9,(25,15)),((24,1),4)),7),20),2),26),(13,29)),(10,6))),3))))),18)),19);
	TREE 'Tree 9 from search (criterion: minimize Tree value using character matrix)' = (12,(19,(((((14,(27,8)),16),(5,17)),(28,((11,21),(23,((22,((((((((9,(25,15)),((24,1),4)),7),20),2),26),(13,29)),(10,6))),3))))),18)));

END;


BEGIN TREES;
	Title Trees_from_heuristic_search;
	LINK Taxa = Taxa;
	TRANSLATE
		1 Paranomalurus_walkeri,
		2 Pondaungimys,
		3 Prolapsus,
		4 Shazurus,
		5 Hartenbergeromys,
		6 Glibia,
		7 Nementchamys,
		8 Theridomys,
		9 Paranomalurus_soniae,
		10 Zegdoumys,
		11 Eogliravus,
		12 Cocomys,
		13 Pappocricetodon,
		14 Remys,
		15 Anomalurus,
		16 Protadelomys,
		17 Pantrogna,
		18 Paramys,
		19 Tribosphenomys,
		20 Kebirmys,
		21 Bransatoglis,
		22 Pauromys,
		23 Knightomys,
		24 Paranomalurus_bishopi,
		25 Idiurus,
		26 Glibia_namibiensis,
		27 Elfomys,
		28 Birbalomys,
		29 Sinosminthus;
	TREE 'Tree 1 from search (criterion: minimize Tree value using character matrix)' = (((((11,21),(((((10,6),((13,29),(26,(2,(20,(7,(((1,24),4),(9,(15,25))))))))),22),3),23)),28),((19,12),18)),((5,17),(((8,27),14),16)));
	TREE 'Tree 2 from search (criterion: minimize Tree value using character matrix)' = ((((19,12),18),((5,17),(((8,27),14),16))),(((11,21),(((((10,6),((13,29),(26,(2,(20,(7,(((1,24),4),(9,(15,25))))))))),22),3),23)),28));
	TREE 'Tree 3 from search (criterion: minimize Tree value using character matrix)' = (((19,12),18),((((11,21),(((((10,6),((13,29),(26,(2,(20,(7,(((1,24),4),(9,(15,25))))))))),22),3),23)),28),((5,17),(((8,27),14),16))));
	TREE 'Tree 4 from search (criterion: minimize Tree value using character matrix)' = ((((11,21),(((((10,6),((13,29),(26,(2,(20,(7,(((1,24),4),(9,(15,25))))))))),22),3),23)),(((19,12),18),((5,17),(((8,27),14),16)))),28);
	TREE 'Tree 5 from search (criterion: minimize Tree value using character matrix)' = (((11,21),(((((10,6),((13,29),(26,(2,(20,(7,(((1,24),4),(9,(15,25))))))))),22),3),23)),((((19,12),18),((5,17),(((8,27),14),16))),28));
	TREE 'Tree 6 from search (criterion: minimize Tree value using character matrix)' = ((18,((((11,21),(((((10,6),((13,29),(26,(2,(20,(7,(((1,24),4),(9,(15,25))))))))),22),3),23)),28),((5,17),(((8,27),14),16)))),(19,12));
	TREE 'Tree 7 from search (criterion: minimize Tree value using character matrix)' = (18,((19,12),((((11,21),(((((10,6),((13,29),(26,(2,(20,(7,(((1,24),4),(9,(15,25))))))))),22),3),23)),28),((5,17),(((8,27),14),16)))));
	TREE 'Tree 8 from search (criterion: minimize Tree value using character matrix)' = ((19,(18,((((11,21),(((((10,6),((13,29),(26,(2,(20,(7,(((1,24),4),(9,(15,25))))))))),22),3),23)),28),((5,17),(((8,27),14),16))))),12);
	TREE 'Tree 9 from search (criterion: minimize Tree value using character matrix)' = (19,((18,((((11,21),(((((10,6),((13,29),(26,(2,(20,(7,(((1,24),4),(9,(15,25))))))))),22),3),23)),28),((5,17),(((8,27),14),16)))),12));

END;


BEGIN TREES;
	Title Trees_from_heuristic_search;
	LINK Taxa = Taxa;
	TRANSLATE
		1 Paranomalurus_walkeri,
		2 Pondaungimys,
		3 Prolapsus,
		4 Shazurus,
		5 Hartenbergeromys,
		6 Glibia,
		7 Nementchamys,
		8 Theridomys,
		9 Paranomalurus_soniae,
		10 Zegdoumys,
		11 Eogliravus,
		12 Cocomys,
		13 Pappocricetodon,
		14 Remys,
		15 Anomalurus,
		16 Protadelomys,
		17 Pantrogna,
		18 Paramys,
		19 Tribosphenomys,
		20 Kebirmys,
		21 Bransatoglis,
		22 Pauromys,
		23 Knightomys,
		24 Paranomalurus_bishopi,
		25 Idiurus,
		26 Glibia_namibiensis,
		27 Elfomys,
		28 Birbalomys,
		29 Sinosminthus;
	TREE 'Tree 1 from search (criterion: minimize Tree value using character matrix)' = (((((((22,(3,((6,10),(((16,14),(8,27)),((13,29),(26,(2,((20,7),((4,(1,24)),(9,(25,15))))))))))),23),(21,11)),28),(18,(12,19))),5),17);
	TREE 'Tree 2 from search (criterion: minimize Tree value using character matrix)' = ((5,17),(((((22,(3,((6,10),(((16,14),(8,27)),((13,29),(26,(2,((20,7),((4,(1,24)),(9,(25,15))))))))))),23),(21,11)),28),(18,(12,19))));
	TREE 'Tree 3 from search (criterion: minimize Tree value using character matrix)' = (5,((((((22,(3,((6,10),(((16,14),(8,27)),((13,29),(26,(2,((20,7),((4,(1,24)),(9,(25,15))))))))))),23),(21,11)),28),(18,(12,19))),17));
	TREE 'Tree 4 from search (criterion: minimize Tree value using character matrix)' = (((((((22,(3,((6,10),((8,((16,14),27)),((13,29),(26,(2,((20,7),((4,(1,24)),(9,(25,15))))))))))),23),(21,11)),28),(18,(12,19))),5),17);
	TREE 'Tree 5 from search (criterion: minimize Tree value using character matrix)' = ((((((22,(3,((6,10),(((16,14),(8,27)),((13,29),(26,(2,((20,7),((4,(1,24)),(9,(25,15))))))))))),23),(21,11)),28),(5,17)),(18,(12,19)));
	TREE 'Tree 6 from search (criterion: minimize Tree value using character matrix)' = (((((22,(3,((6,10),(((16,14),(8,27)),((13,29),(26,(2,((20,7),((4,(1,24)),(9,(25,15))))))))))),23),(21,11)),28),((5,17),(18,(12,19))));
	TREE 'Tree 7 from search (criterion: minimize Tree value using character matrix)' = ((5,17),(((((22,(3,((6,10),((8,((16,14),27)),((13,29),(26,(2,((20,7),((4,(1,24)),(9,(25,15))))))))))),23),(21,11)),28),(18,(12,19))));
	TREE 'Tree 8 from search (criterion: minimize Tree value using character matrix)' = (5,((((((22,(3,((6,10),((8,((16,14),27)),((13,29),(26,(2,((20,7),((4,(1,24)),(9,(25,15))))))))))),23),(21,11)),28),(18,(12,19))),17));
	TREE 'Tree 9 from search (criterion: minimize Tree value using character matrix)' = ((18,(((((22,(3,((6,10),(((16,14),(8,27)),((13,29),(26,(2,((20,7),((4,(1,24)),(9,(25,15))))))))))),23),(21,11)),28),(5,17))),(12,19));
	TREE 'Tree 10 from search (criterion: minimize Tree value using character matrix)' = (18,((((((22,(3,((6,10),(((16,14),(8,27)),((13,29),(26,(2,((20,7),((4,(1,24)),(9,(25,15))))))))))),23),(21,11)),28),(5,17)),(12,19)));
	TREE 'Tree 11 from search (criterion: minimize Tree value using character matrix)' = ((((((22,(3,((6,10),((8,((16,14),27)),((13,29),(26,(2,((20,7),((4,(1,24)),(9,(25,15))))))))))),23),(21,11)),28),(5,17)),(18,(12,19)));
	TREE 'Tree 12 from search (criterion: minimize Tree value using character matrix)' = ((28,((5,17),(18,(12,19)))),(((22,(3,((6,10),(((16,14),(8,27)),((13,29),(26,(2,((20,7),((4,(1,24)),(9,(25,15))))))))))),23),(21,11)));
	TREE 'Tree 13 from search (criterion: minimize Tree value using character matrix)' = (28,((((22,(3,((6,10),(((16,14),(8,27)),((13,29),(26,(2,((20,7),((4,(1,24)),(9,(25,15))))))))))),23),(21,11)),((5,17),(18,(12,19)))));
	TREE 'Tree 14 from search (criterion: minimize Tree value using character matrix)' = (((((22,(3,((6,10),((8,((16,14),27)),((13,29),(26,(2,((20,7),((4,(1,24)),(9,(25,15))))))))))),23),(21,11)),28),((5,17),(18,(12,19))));
	TREE 'Tree 15 from search (criterion: minimize Tree value using character matrix)' = ((12,(18,(((((22,(3,((6,10),(((16,14),(8,27)),((13,29),(26,(2,((20,7),((4,(1,24)),(9,(25,15))))))))))),23),(21,11)),28),(5,17)))),19);
	TREE 'Tree 16 from search (criterion: minimize Tree value using character matrix)' = (12,((18,(((((22,(3,((6,10),(((16,14),(8,27)),((13,29),(26,(2,((20,7),((4,(1,24)),(9,(25,15))))))))))),23),(21,11)),28),(5,17))),19));
	TREE 'Tree 17 from search (criterion: minimize Tree value using character matrix)' = ((18,(((((22,(3,((6,10),((8,((16,14),27)),((13,29),(26,(2,((20,7),((4,(1,24)),(9,(25,15))))))))))),23),(21,11)),28),(5,17))),(12,19));
	TREE 'Tree 18 from search (criterion: minimize Tree value using character matrix)' = (18,((((((22,(3,((6,10),((8,((16,14),27)),((13,29),(26,(2,((20,7),((4,(1,24)),(9,(25,15))))))))))),23),(21,11)),28),(5,17)),(12,19)));
	TREE 'Tree 19 from search (criterion: minimize Tree value using character matrix)' = ((28,((5,17),(18,(12,19)))),(((22,(3,((6,10),((8,((16,14),27)),((13,29),(26,(2,((20,7),((4,(1,24)),(9,(25,15))))))))))),23),(21,11)));
	TREE 'Tree 20 from search (criterion: minimize Tree value using character matrix)' = (28,((((22,(3,((6,10),((8,((16,14),27)),((13,29),(26,(2,((20,7),((4,(1,24)),(9,(25,15))))))))))),23),(21,11)),((5,17),(18,(12,19)))));
	TREE 'Tree 21 from search (criterion: minimize Tree value using character matrix)' = ((12,(18,(((((22,(3,((6,10),((8,((16,14),27)),((13,29),(26,(2,((20,7),((4,(1,24)),(9,(25,15))))))))))),23),(21,11)),28),(5,17)))),19);
	TREE 'Tree 22 from search (criterion: minimize Tree value using character matrix)' = (12,((18,(((((22,(3,((6,10),((8,((16,14),27)),((13,29),(26,(2,((20,7),((4,(1,24)),(9,(25,15))))))))))),23),(21,11)),28),(5,17))),19));

END;


BEGIN TREES;
	Title Trees_from_heuristic_search;
	LINK Taxa = Taxa;
	TRANSLATE
		1 Paranomalurus_walkeri,
		2 Pondaungimys,
		3 Prolapsus,
		4 Shazurus,
		5 Hartenbergeromys,
		6 Glibia,
		7 Nementchamys,
		8 Theridomys,
		9 Paranomalurus_soniae,
		10 Zegdoumys,
		11 Eogliravus,
		12 Cocomys,
		13 Pappocricetodon,
		14 Remys,
		15 Anomalurus,
		16 Protadelomys,
		17 Pantrogna,
		18 Paramys,
		19 Tribosphenomys,
		20 Kebirmys,
		21 Bransatoglis,
		22 Pauromys,
		23 Knightomys,
		24 Paranomalurus_bishopi,
		25 Idiurus,
		26 Glibia_namibiensis,
		27 Elfomys,
		28 Birbalomys,
		29 Sinosminthus;
	TREE 'Tree 1 from search (criterion: minimize Tree value using character matrix)' = (((((8,27),14),16),(5,17)),((((11,21),(((22,(((((((((25,15),9),((1,24),4)),7),20),2),26),(29,13)),(10,6))),3),23)),28),(18,(12,19))));
	TREE 'Tree 2 from search (criterion: minimize Tree value using character matrix)' = (((((11,21),(((22,(((((((((25,15),9),((1,24),4)),7),20),2),26),(29,13)),(10,6))),3),23)),28),((((8,27),14),16),(5,17))),(18,(12,19)));
	TREE 'Tree 3 from search (criterion: minimize Tree value using character matrix)' = ((((11,21),(((22,(((((((((25,15),9),((1,24),4)),7),20),2),26),(29,13)),(10,6))),3),23)),28),(((((8,27),14),16),(5,17)),(18,(12,19))));
	TREE 'Tree 4 from search (criterion: minimize Tree value using character matrix)' = ((18,((((11,21),(((22,(((((((((25,15),9),((1,24),4)),7),20),2),26),(29,13)),(10,6))),3),23)),28),((((8,27),14),16),(5,17)))),(12,19));
	TREE 'Tree 5 from search (criterion: minimize Tree value using character matrix)' = (18,(((((11,21),(((22,(((((((((25,15),9),((1,24),4)),7),20),2),26),(29,13)),(10,6))),3),23)),28),((((8,27),14),16),(5,17))),(12,19)));
	TREE 'Tree 6 from search (criterion: minimize Tree value using character matrix)' = ((28,(((((8,27),14),16),(5,17)),(18,(12,19)))),((11,21),(((22,(((((((((25,15),9),((1,24),4)),7),20),2),26),(29,13)),(10,6))),3),23)));
	TREE 'Tree 7 from search (criterion: minimize Tree value using character matrix)' = (28,(((11,21),(((22,(((((((((25,15),9),((1,24),4)),7),20),2),26),(29,13)),(10,6))),3),23)),(((((8,27),14),16),(5,17)),(18,(12,19)))));
	TREE 'Tree 8 from search (criterion: minimize Tree value using character matrix)' = ((12,(18,((((11,21),(((22,(((((((((25,15),9),((1,24),4)),7),20),2),26),(29,13)),(10,6))),3),23)),28),((((8,27),14),16),(5,17))))),19);
	TREE 'Tree 9 from search (criterion: minimize Tree value using character matrix)' = (12,((18,((((11,21),(((22,(((((((((25,15),9),((1,24),4)),7),20),2),26),(29,13)),(10,6))),3),23)),28),((((8,27),14),16),(5,17)))),19));

END;


BEGIN TREES;
	Title Trees_from_heuristic_search;
	LINK Taxa = Taxa;
	TRANSLATE
		1 Paranomalurus_walkeri,
		2 Pondaungimys,
		3 Prolapsus,
		4 Shazurus,
		5 Hartenbergeromys,
		6 Glibia,
		7 Nementchamys,
		8 Theridomys,
		9 Paranomalurus_soniae,
		10 Zegdoumys,
		11 Eogliravus,
		12 Cocomys,
		13 Pappocricetodon,
		14 Remys,
		15 Anomalurus,
		16 Protadelomys,
		17 Pantrogna,
		18 Paramys,
		19 Tribosphenomys,
		20 Kebirmys,
		21 Bransatoglis,
		22 Pauromys,
		23 Knightomys,
		24 Paranomalurus_bishopi,
		25 Idiurus,
		26 Glibia_namibiensis,
		27 Elfomys,
		28 Birbalomys,
		29 Sinosminthus;
	TREE 'Tree 1 from search (criterion: minimize Tree value using character matrix)' = (((21,11),(23,(3,(22,((10,6),((26,(2,(20,(((9,(25,15)),((24,1),4)),7)))),(29,13))))))),((((17,5),(((27,8),14),16)),(18,(19,12))),28));
	TREE 'Tree 2 from search (criterion: minimize Tree value using character matrix)' = (((((17,5),(((27,8),14),16)),(18,(19,12))),((21,11),(23,(3,(22,((10,6),((26,(2,(20,(((9,(25,15)),((24,1),4)),7)))),(29,13)))))))),28);
	TREE 'Tree 3 from search (criterion: minimize Tree value using character matrix)' = ((((17,5),(((27,8),14),16)),(18,(19,12))),(((21,11),(23,(3,(22,((10,6),((26,(2,(20,(((9,(25,15)),((24,1),4)),7)))),(29,13))))))),28));
	TREE 'Tree 4 from search (criterion: minimize Tree value using character matrix)' = (((18,(19,12)),(((21,11),(23,(3,(22,((10,6),((26,(2,(20,(((9,(25,15)),((24,1),4)),7)))),(29,13))))))),28)),((17,5),(((27,8),14),16)));
	TREE 'Tree 5 from search (criterion: minimize Tree value using character matrix)' = ((18,(19,12)),(((17,5),(((27,8),14),16)),(((21,11),(23,(3,(22,((10,6),((26,(2,(20,(((9,(25,15)),((24,1),4)),7)))),(29,13))))))),28)));
	TREE 'Tree 6 from search (criterion: minimize Tree value using character matrix)' = (((19,12),(((17,5),(((27,8),14),16)),(((21,11),(23,(3,(22,((10,6),((26,(2,(20,(((9,(25,15)),((24,1),4)),7)))),(29,13))))))),28))),18);
	TREE 'Tree 7 from search (criterion: minimize Tree value using character matrix)' = ((19,12),(18,(((17,5),(((27,8),14),16)),(((21,11),(23,(3,(22,((10,6),((26,(2,(20,(((9,(25,15)),((24,1),4)),7)))),(29,13))))))),28))));
	TREE 'Tree 8 from search (criterion: minimize Tree value using character matrix)' = ((12,(18,(((17,5),(((27,8),14),16)),(((21,11),(23,(3,(22,((10,6),((26,(2,(20,(((9,(25,15)),((24,1),4)),7)))),(29,13))))))),28)))),19);
	TREE 'Tree 9 from search (criterion: minimize Tree value using character matrix)' = (12,(19,(18,(((17,5),(((27,8),14),16)),(((21,11),(23,(3,(22,((10,6),((26,(2,(20,(((9,(25,15)),((24,1),4)),7)))),(29,13))))))),28)))));

END;


BEGIN TREES;
	Title Trees_from_heuristic_search;
	LINK Taxa = Taxa;
	TRANSLATE
		1 Paranomalurus_walkeri,
		2 Pondaungimys,
		3 Prolapsus,
		4 Shazurus,
		5 Hartenbergeromys,
		6 Glibia,
		7 Nementchamys,
		8 Theridomys,
		9 Paranomalurus_soniae,
		10 Zegdoumys,
		11 Eogliravus,
		12 Cocomys,
		13 Pappocricetodon,
		14 Remys,
		15 Anomalurus,
		16 Protadelomys,
		17 Pantrogna,
		18 Paramys,
		19 Tribosphenomys,
		20 Kebirmys,
		21 Bransatoglis,
		22 Pauromys,
		23 Knightomys,
		24 Paranomalurus_bishopi,
		25 Idiurus,
		26 Glibia_namibiensis,
		27 Elfomys,
		28 Birbalomys,
		29 Sinosminthus;
	TREE 'Tree 1 from search (criterion: minimize Tree value using character matrix)' = (((((((23,((22,((10,6),(((2,((7,((9,(25,15)),((24,1),4))),20)),26),(29,13)))),3)),(11,21)),28),(((14,(27,8)),16),(17,5))),18),19),12);
	TREE 'Tree 2 from search (criterion: minimize Tree value using character matrix)' = ((19,12),(((((23,((22,((10,6),(((2,((7,((9,(25,15)),((24,1),4))),20)),26),(29,13)))),3)),(11,21)),28),(((14,(27,8)),16),(17,5))),18));
	TREE 'Tree 3 from search (criterion: minimize Tree value using character matrix)' = (19,((((((23,((22,((10,6),(((2,((7,((9,(25,15)),((24,1),4))),20)),26),(29,13)))),3)),(11,21)),28),(((14,(27,8)),16),(17,5))),18),12));
	TREE 'Tree 4 from search (criterion: minimize Tree value using character matrix)' = ((((((23,((22,((10,6),(((2,((7,((9,(25,15)),((24,1),4))),20)),26),(29,13)))),3)),(11,21)),28),(((14,(27,8)),16),(17,5))),(19,12)),18);
	TREE 'Tree 5 from search (criterion: minimize Tree value using character matrix)' = (((((23,((22,((10,6),(((2,((7,((9,(25,15)),((24,1),4))),20)),26),(29,13)))),3)),(11,21)),28),(((14,(27,8)),16),(17,5))),((19,12),18));
	TREE 'Tree 6 from search (criterion: minimize Tree value using character matrix)' = (((((14,(27,8)),16),(17,5)),((19,12),18)),(((23,((22,((10,6),(((2,((7,((9,(25,15)),((24,1),4))),20)),26),(29,13)))),3)),(11,21)),28));
	TREE 'Tree 7 from search (criterion: minimize Tree value using character matrix)' = ((((14,(27,8)),16),(17,5)),((((23,((22,((10,6),(((2,((7,((9,(25,15)),((24,1),4))),20)),26),(29,13)))),3)),(11,21)),28),((19,12),18)));
	TREE 'Tree 8 from search (criterion: minimize Tree value using character matrix)' = ((((23,((22,((10,6),(((2,((7,((9,(25,15)),((24,1),4))),20)),26),(29,13)))),3)),(11,21)),((((14,(27,8)),16),(17,5)),((19,12),18))),28);
	TREE 'Tree 9 from search (criterion: minimize Tree value using character matrix)' = (((23,((22,((10,6),(((2,((7,((9,(25,15)),((24,1),4))),20)),26),(29,13)))),3)),(11,21)),(((((14,(27,8)),16),(17,5)),((19,12),18)),28));

END;


BEGIN TREES;
	Title Trees_from_heuristic_search;
	LINK Taxa = Taxa;
	TRANSLATE
		1 Paranomalurus_walkeri,
		2 Pondaungimys,
		3 Prolapsus,
		4 Shazurus,
		5 Hartenbergeromys,
		6 Glibia,
		7 Nementchamys,
		8 Theridomys,
		9 Paranomalurus_soniae,
		10 Zegdoumys,
		11 Eogliravus,
		12 Cocomys,
		13 Pappocricetodon,
		14 Remys,
		15 Anomalurus,
		16 Protadelomys,
		17 Pantrogna,
		18 Paramys,
		19 Tribosphenomys,
		20 Kebirmys,
		21 Bransatoglis,
		22 Pauromys,
		23 Knightomys,
		24 Paranomalurus_bishopi,
		25 Idiurus,
		26 Glibia_namibiensis,
		27 Elfomys,
		28 Birbalomys,
		29 Sinosminthus;
	TREE 'Tree 1 from search (criterion: minimize Tree value using character matrix)' = ((((((3,22),(((((((((9,(15,25)),((24,1),4)),(7,20)),2),26),(29,13)),((14,16),(8,27))),(10,6)),23)),(21,11)),((12,19),18)),(17,5)),28);
	TREE 'Tree 2 from search (criterion: minimize Tree value using character matrix)' = (((17,5),28),((((3,22),(((((((((9,(15,25)),((24,1),4)),(7,20)),2),26),(29,13)),((14,16),(8,27))),(10,6)),23)),(21,11)),((12,19),18)));
	TREE 'Tree 3 from search (criterion: minimize Tree value using character matrix)' = ((17,5),(((((3,22),(((((((((9,(15,25)),((24,1),4)),(7,20)),2),26),(29,13)),((14,16),(8,27))),(10,6)),23)),(21,11)),((12,19),18)),28));
	TREE 'Tree 4 from search (criterion: minimize Tree value using character matrix)' = (((((22,(3,(((((((((9,(15,25)),((24,1),4)),(7,20)),2),26),(29,13)),((14,16),(8,27))),(10,6)),23))),(21,11)),((12,19),18)),(17,5)),28);
	TREE 'Tree 5 from search (criterion: minimize Tree value using character matrix)' = (((((3,22),(((((((((9,(15,25)),((24,1),4)),(7,20)),2),26),(29,13)),((14,16),(8,27))),(10,6)),23)),(21,11)),((17,5),28)),((12,19),18));
	TREE 'Tree 6 from search (criterion: minimize Tree value using character matrix)' = ((((3,22),(((((((((9,(15,25)),((24,1),4)),(7,20)),2),26),(29,13)),((14,16),(8,27))),(10,6)),23)),(21,11)),(((17,5),28),((12,19),18)));
	TREE 'Tree 7 from search (criterion: minimize Tree value using character matrix)' = (((17,5),28),(((22,(3,(((((((((9,(15,25)),((24,1),4)),(7,20)),2),26),(29,13)),((14,16),(8,27))),(10,6)),23))),(21,11)),((12,19),18)));
	TREE 'Tree 8 from search (criterion: minimize Tree value using character matrix)' = ((5,(((((3,22),(((((((((9,(15,25)),((24,1),4)),(7,20)),2),26),(29,13)),((14,16),(8,27))),(10,6)),23)),(21,11)),((12,19),18)),28)),17);
	TREE 'Tree 9 from search (criterion: minimize Tree value using character matrix)' = (5,(17,(((((3,22),(((((((((9,(15,25)),((24,1),4)),(7,20)),2),26),(29,13)),((14,16),(8,27))),(10,6)),23)),(21,11)),((12,19),18)),28)));
	TREE 'Tree 10 from search (criterion: minimize Tree value using character matrix)' = ((17,5),((((22,(3,(((((((((9,(15,25)),((24,1),4)),(7,20)),2),26),(29,13)),((14,16),(8,27))),(10,6)),23))),(21,11)),((12,19),18)),28));
	TREE 'Tree 11 from search (criterion: minimize Tree value using character matrix)' = (((12,19),((((3,22),(((((((((9,(15,25)),((24,1),4)),(7,20)),2),26),(29,13)),((14,16),(8,27))),(10,6)),23)),(21,11)),((17,5),28))),18);
	TREE 'Tree 12 from search (criterion: minimize Tree value using character matrix)' = ((12,19),(((((3,22),(((((((((9,(15,25)),((24,1),4)),(7,20)),2),26),(29,13)),((14,16),(8,27))),(10,6)),23)),(21,11)),((17,5),28)),18));
	TREE 'Tree 13 from search (criterion: minimize Tree value using character matrix)' = ((((22,(3,(((((((((9,(15,25)),((24,1),4)),(7,20)),2),26),(29,13)),((14,16),(8,27))),(10,6)),23))),(21,11)),((17,5),28)),((12,19),18));
	TREE 'Tree 14 from search (criterion: minimize Tree value using character matrix)' = (((22,(3,(((((((((9,(15,25)),((24,1),4)),(7,20)),2),26),(29,13)),((14,16),(8,27))),(10,6)),23))),(21,11)),(((17,5),28),((12,19),18)));
	TREE 'Tree 15 from search (criterion: minimize Tree value using character matrix)' = ((5,((((22,(3,(((((((((9,(15,25)),((24,1),4)),(7,20)),2),26),(29,13)),((14,16),(8,27))),(10,6)),23))),(21,11)),((12,19),18)),28)),17);
	TREE 'Tree 16 from search (criterion: minimize Tree value using character matrix)' = (5,(17,((((22,(3,(((((((((9,(15,25)),((24,1),4)),(7,20)),2),26),(29,13)),((14,16),(8,27))),(10,6)),23))),(21,11)),((12,19),18)),28)));
	TREE 'Tree 17 from search (criterion: minimize Tree value using character matrix)' = (((12,19),(((22,(3,(((((((((9,(15,25)),((24,1),4)),(7,20)),2),26),(29,13)),((14,16),(8,27))),(10,6)),23))),(21,11)),((17,5),28))),18);
	TREE 'Tree 18 from search (criterion: minimize Tree value using character matrix)' = ((19,(((((3,22),(((((((((9,(15,25)),((24,1),4)),(7,20)),2),26),(29,13)),((14,16),(8,27))),(10,6)),23)),(21,11)),((17,5),28)),18)),12);
	TREE 'Tree 19 from search (criterion: minimize Tree value using character matrix)' = (19,(12,(((((3,22),(((((((((9,(15,25)),((24,1),4)),(7,20)),2),26),(29,13)),((14,16),(8,27))),(10,6)),23)),(21,11)),((17,5),28)),18)));
	TREE 'Tree 20 from search (criterion: minimize Tree value using character matrix)' = ((12,19),((((22,(3,(((((((((9,(15,25)),((24,1),4)),(7,20)),2),26),(29,13)),((14,16),(8,27))),(10,6)),23))),(21,11)),((17,5),28)),18));
	TREE 'Tree 21 from search (criterion: minimize Tree value using character matrix)' = ((19,((((22,(3,(((((((((9,(15,25)),((24,1),4)),(7,20)),2),26),(29,13)),((14,16),(8,27))),(10,6)),23))),(21,11)),((17,5),28)),18)),12);
	TREE 'Tree 22 from search (criterion: minimize Tree value using character matrix)' = (19,(12,((((22,(3,(((((((((9,(15,25)),((24,1),4)),(7,20)),2),26),(29,13)),((14,16),(8,27))),(10,6)),23))),(21,11)),((17,5),28)),18)));

END;


BEGIN TREES;
	Title Trees_from_heuristic_search;
	LINK Taxa = Taxa;
	TRANSLATE
		1 Paranomalurus_walkeri,
		2 Pondaungimys,
		3 Prolapsus,
		4 Shazurus,
		5 Hartenbergeromys,
		6 Glibia,
		7 Nementchamys,
		8 Theridomys,
		9 Paranomalurus_soniae,
		10 Zegdoumys,
		11 Eogliravus,
		12 Cocomys,
		13 Pappocricetodon,
		14 Remys,
		15 Anomalurus,
		16 Protadelomys,
		17 Pantrogna,
		18 Paramys,
		19 Tribosphenomys,
		20 Kebirmys,
		21 Bransatoglis,
		22 Pauromys,
		23 Knightomys,
		24 Paranomalurus_bishopi,
		25 Idiurus,
		26 Glibia_namibiensis,
		27 Elfomys,
		28 Birbalomys,
		29 Sinosminthus;
	TREE 'Tree 1 from search (criterion: minimize Tree value using character matrix)' = (((18,((28,(17,5)),((11,21),(23,((22,3),(((13,29),26),((10,6),((((20,7),2),(((15,25),9),((1,24),4))),((14,16),(27,8)))))))))),12),19);
	TREE 'Tree 2 from search (criterion: minimize Tree value using character matrix)' = ((12,19),(18,((28,(17,5)),((11,21),(23,((22,3),(((13,29),26),((10,6),((((20,7),2),(((15,25),9),((1,24),4))),((14,16),(27,8)))))))))));
	TREE 'Tree 3 from search (criterion: minimize Tree value using character matrix)' = (12,((18,((28,(17,5)),((11,21),(23,((22,3),(((13,29),26),((10,6),((((20,7),2),(((15,25),9),((1,24),4))),((14,16),(27,8)))))))))),19));
	TREE 'Tree 4 from search (criterion: minimize Tree value using character matrix)' = (((18,((28,(17,5)),((11,21),(23,((22,3),(((13,29),26),((10,6),((((20,7),2),(((15,25),9),((1,24),4))),((27,(14,16)),8))))))))),12),19);
	TREE 'Tree 5 from search (criterion: minimize Tree value using character matrix)' = ((18,(12,19)),((28,(17,5)),((11,21),(23,((22,3),(((13,29),26),((10,6),((((20,7),2),(((15,25),9),((1,24),4))),((14,16),(27,8))))))))));
	TREE 'Tree 6 from search (criterion: minimize Tree value using character matrix)' = (18,((12,19),((28,(17,5)),((11,21),(23,((22,3),(((13,29),26),((10,6),((((20,7),2),(((15,25),9),((1,24),4))),((14,16),(27,8)))))))))));
	TREE 'Tree 7 from search (criterion: minimize Tree value using character matrix)' = ((12,19),(18,((28,(17,5)),((11,21),(23,((22,3),(((13,29),26),((10,6),((((20,7),2),(((15,25),9),((1,24),4))),((27,(14,16)),8))))))))));
	TREE 'Tree 8 from search (criterion: minimize Tree value using character matrix)' = (12,((18,((28,(17,5)),((11,21),(23,((22,3),(((13,29),26),((10,6),((((20,7),2),(((15,25),9),((1,24),4))),((27,(14,16)),8))))))))),19));
	TREE 'Tree 9 from search (criterion: minimize Tree value using character matrix)' = (((28,(17,5)),(18,(12,19))),((11,21),(23,((22,3),(((13,29),26),((10,6),((((20,7),2),(((15,25),9),((1,24),4))),((14,16),(27,8)))))))));
	TREE 'Tree 10 from search (criterion: minimize Tree value using character matrix)' = ((28,(17,5)),((18,(12,19)),((11,21),(23,((22,3),(((13,29),26),((10,6),((((20,7),2),(((15,25),9),((1,24),4))),((14,16),(27,8))))))))));
	TREE 'Tree 11 from search (criterion: minimize Tree value using character matrix)' = ((18,(12,19)),((28,(17,5)),((11,21),(23,((22,3),(((13,29),26),((10,6),((((20,7),2),(((15,25),9),((1,24),4))),((27,(14,16)),8)))))))));
	TREE 'Tree 12 from search (criterion: minimize Tree value using character matrix)' = (18,((12,19),((28,(17,5)),((11,21),(23,((22,3),(((13,29),26),((10,6),((((20,7),2),(((15,25),9),((1,24),4))),((27,(14,16)),8))))))))));
	TREE 'Tree 13 from search (criterion: minimize Tree value using character matrix)' = (((28,(17,5)),(18,(12,19))),((11,21),(23,((22,3),(((13,29),26),((10,6),((((20,7),2),(((15,25),9),((1,24),4))),((27,(14,16)),8))))))));
	TREE 'Tree 14 from search (criterion: minimize Tree value using character matrix)' = (((17,5),((18,(12,19)),((11,21),(23,((22,3),(((13,29),26),((10,6),((((20,7),2),(((15,25),9),((1,24),4))),((14,16),(27,8)))))))))),28);
	TREE 'Tree 15 from search (criterion: minimize Tree value using character matrix)' = ((17,5),(28,((18,(12,19)),((11,21),(23,((22,3),(((13,29),26),((10,6),((((20,7),2),(((15,25),9),((1,24),4))),((14,16),(27,8)))))))))));
	TREE 'Tree 16 from search (criterion: minimize Tree value using character matrix)' = ((28,(17,5)),((18,(12,19)),((11,21),(23,((22,3),(((13,29),26),((10,6),((((20,7),2),(((15,25),9),((1,24),4))),((27,(14,16)),8)))))))));
	TREE 'Tree 17 from search (criterion: minimize Tree value using character matrix)' = (((17,5),((18,(12,19)),((11,21),(23,((22,3),(((13,29),26),((10,6),((((20,7),2),(((15,25),9),((1,24),4))),((27,(14,16)),8))))))))),28);
	TREE 'Tree 18 from search (criterion: minimize Tree value using character matrix)' = ((5,(28,((18,(12,19)),((11,21),(23,((22,3),(((13,29),26),((10,6),((((20,7),2),(((15,25),9),((1,24),4))),((14,16),(27,8))))))))))),17);
	TREE 'Tree 19 from search (criterion: minimize Tree value using character matrix)' = (5,(17,(28,((18,(12,19)),((11,21),(23,((22,3),(((13,29),26),((10,6),((((20,7),2),(((15,25),9),((1,24),4))),((14,16),(27,8))))))))))));
	TREE 'Tree 20 from search (criterion: minimize Tree value using character matrix)' = ((17,5),(28,((18,(12,19)),((11,21),(23,((22,3),(((13,29),26),((10,6),((((20,7),2),(((15,25),9),((1,24),4))),((27,(14,16)),8))))))))));
	TREE 'Tree 21 from search (criterion: minimize Tree value using character matrix)' = ((5,(28,((18,(12,19)),((11,21),(23,((22,3),(((13,29),26),((10,6),((((20,7),2),(((15,25),9),((1,24),4))),((27,(14,16)),8)))))))))),17);
	TREE 'Tree 22 from search (criterion: minimize Tree value using character matrix)' = (5,(17,(28,((18,(12,19)),((11,21),(23,((22,3),(((13,29),26),((10,6),((((20,7),2),(((15,25),9),((1,24),4))),((27,(14,16)),8)))))))))));

END;


BEGIN TREES;
	Title Trees_from_heuristic_search;
	LINK Taxa = Taxa;
	TRANSLATE
		1 Paranomalurus_walkeri,
		2 Pondaungimys,
		3 Prolapsus,
		4 Shazurus,
		5 Hartenbergeromys,
		6 Glibia,
		7 Nementchamys,
		8 Theridomys,
		9 Paranomalurus_soniae,
		10 Zegdoumys,
		11 Eogliravus,
		12 Cocomys,
		13 Pappocricetodon,
		14 Remys,
		15 Anomalurus,
		16 Protadelomys,
		17 Pantrogna,
		18 Paramys,
		19 Tribosphenomys,
		20 Kebirmys,
		21 Bransatoglis,
		22 Pauromys,
		23 Knightomys,
		24 Paranomalurus_bishopi,
		25 Idiurus,
		26 Glibia_namibiensis,
		27 Elfomys,
		28 Birbalomys,
		29 Sinosminthus;
	TREE 'Tree 1 from search (criterion: minimize Tree value using character matrix)' = (((11,21),(((((((16,14),(8,27)),((13,29),(26,(2,((((25,15),9),((24,1),4)),(20,7)))))),(10,6)),3),22),23)),(28,((18,(19,12)),(5,17))));
	TREE 'Tree 2 from search (criterion: minimize Tree value using character matrix)' = ((28,((11,21),(((((((16,14),(8,27)),((13,29),(26,(2,((((25,15),9),((24,1),4)),(20,7)))))),(10,6)),3),22),23))),((18,(19,12)),(5,17)));
	TREE 'Tree 3 from search (criterion: minimize Tree value using character matrix)' = (28,(((11,21),(((((((16,14),(8,27)),((13,29),(26,(2,((((25,15),9),((24,1),4)),(20,7)))))),(10,6)),3),22),23)),((18,(19,12)),(5,17))));
	TREE 'Tree 4 from search (criterion: minimize Tree value using character matrix)' = (((11,21),((((((8,((16,14),27)),((13,29),(26,(2,((((25,15),9),((24,1),4)),(20,7)))))),(10,6)),3),22),23)),(28,((18,(19,12)),(5,17))));
	TREE 'Tree 5 from search (criterion: minimize Tree value using character matrix)' = (((18,(19,12)),(28,((11,21),(((((((16,14),(8,27)),((13,29),(26,(2,((((25,15),9),((24,1),4)),(20,7)))))),(10,6)),3),22),23)))),(5,17));
	TREE 'Tree 6 from search (criterion: minimize Tree value using character matrix)' = ((18,(19,12)),((28,((11,21),(((((((16,14),(8,27)),((13,29),(26,(2,((((25,15),9),((24,1),4)),(20,7)))))),(10,6)),3),22),23))),(5,17)));
	TREE 'Tree 7 from search (criterion: minimize Tree value using character matrix)' = ((28,((11,21),((((((8,((16,14),27)),((13,29),(26,(2,((((25,15),9),((24,1),4)),(20,7)))))),(10,6)),3),22),23))),((18,(19,12)),(5,17)));
	TREE 'Tree 8 from search (criterion: minimize Tree value using character matrix)' = (28,(((11,21),((((((8,((16,14),27)),((13,29),(26,(2,((((25,15),9),((24,1),4)),(20,7)))))),(10,6)),3),22),23)),((18,(19,12)),(5,17))));
	TREE 'Tree 9 from search (criterion: minimize Tree value using character matrix)' = ((5,((18,(19,12)),(28,((11,21),(((((((16,14),(8,27)),((13,29),(26,(2,((((25,15),9),((24,1),4)),(20,7)))))),(10,6)),3),22),23))))),17);
	TREE 'Tree 10 from search (criterion: minimize Tree value using character matrix)' = (5,(((18,(19,12)),(28,((11,21),(((((((16,14),(8,27)),((13,29),(26,(2,((((25,15),9),((24,1),4)),(20,7)))))),(10,6)),3),22),23)))),17));
	TREE 'Tree 11 from search (criterion: minimize Tree value using character matrix)' = (((18,(19,12)),(28,((11,21),((((((8,((16,14),27)),((13,29),(26,(2,((((25,15),9),((24,1),4)),(20,7)))))),(10,6)),3),22),23)))),(5,17));
	TREE 'Tree 12 from search (criterion: minimize Tree value using character matrix)' = (((19,12),((28,((11,21),(((((((16,14),(8,27)),((13,29),(26,(2,((((25,15),9),((24,1),4)),(20,7)))))),(10,6)),3),22),23))),(5,17))),18);
	TREE 'Tree 13 from search (criterion: minimize Tree value using character matrix)' = ((19,12),(18,((28,((11,21),(((((((16,14),(8,27)),((13,29),(26,(2,((((25,15),9),((24,1),4)),(20,7)))))),(10,6)),3),22),23))),(5,17))));
	TREE 'Tree 14 from search (criterion: minimize Tree value using character matrix)' = ((18,(19,12)),((28,((11,21),((((((8,((16,14),27)),((13,29),(26,(2,((((25,15),9),((24,1),4)),(20,7)))))),(10,6)),3),22),23))),(5,17)));
	TREE 'Tree 15 from search (criterion: minimize Tree value using character matrix)' = ((5,((18,(19,12)),(28,((11,21),((((((8,((16,14),27)),((13,29),(26,(2,((((25,15),9),((24,1),4)),(20,7)))))),(10,6)),3),22),23))))),17);
	TREE 'Tree 16 from search (criterion: minimize Tree value using character matrix)' = (5,(((18,(19,12)),(28,((11,21),((((((8,((16,14),27)),((13,29),(26,(2,((((25,15),9),((24,1),4)),(20,7)))))),(10,6)),3),22),23)))),17));
	TREE 'Tree 17 from search (criterion: minimize Tree value using character matrix)' = (((19,12),((28,((11,21),((((((8,((16,14),27)),((13,29),(26,(2,((((25,15),9),((24,1),4)),(20,7)))))),(10,6)),3),22),23))),(5,17))),18);
	TREE 'Tree 18 from search (criterion: minimize Tree value using character matrix)' = ((12,(18,((28,((11,21),(((((((16,14),(8,27)),((13,29),(26,(2,((((25,15),9),((24,1),4)),(20,7)))))),(10,6)),3),22),23))),(5,17)))),19);
	TREE 'Tree 19 from search (criterion: minimize Tree value using character matrix)' = (12,(19,(18,((28,((11,21),(((((((16,14),(8,27)),((13,29),(26,(2,((((25,15),9),((24,1),4)),(20,7)))))),(10,6)),3),22),23))),(5,17)))));
	TREE 'Tree 20 from search (criterion: minimize Tree value using character matrix)' = ((19,12),(18,((28,((11,21),((((((8,((16,14),27)),((13,29),(26,(2,((((25,15),9),((24,1),4)),(20,7)))))),(10,6)),3),22),23))),(5,17))));
	TREE 'Tree 21 from search (criterion: minimize Tree value using character matrix)' = ((12,(18,((28,((11,21),((((((8,((16,14),27)),((13,29),(26,(2,((((25,15),9),((24,1),4)),(20,7)))))),(10,6)),3),22),23))),(5,17)))),19);
	TREE 'Tree 22 from search (criterion: minimize Tree value using character matrix)' = (12,(19,(18,((28,((11,21),((((((8,((16,14),27)),((13,29),(26,(2,((((25,15),9),((24,1),4)),(20,7)))))),(10,6)),3),22),23))),(5,17)))));

END;


BEGIN TREES;
	Title Trees_from_heuristic_search;
	LINK Taxa = Taxa;
	TRANSLATE
		1 Paranomalurus_walkeri,
		2 Pondaungimys,
		3 Prolapsus,
		4 Shazurus,
		5 Hartenbergeromys,
		6 Glibia,
		7 Nementchamys,
		8 Theridomys,
		9 Paranomalurus_soniae,
		10 Zegdoumys,
		11 Eogliravus,
		12 Cocomys,
		13 Pappocricetodon,
		14 Remys,
		15 Anomalurus,
		16 Protadelomys,
		17 Pantrogna,
		18 Paramys,
		19 Tribosphenomys,
		20 Kebirmys,
		21 Bransatoglis,
		22 Pauromys,
		23 Knightomys,
		24 Paranomalurus_bishopi,
		25 Idiurus,
		26 Glibia_namibiensis,
		27 Elfomys,
		28 Birbalomys,
		29 Sinosminthus;
	TREE 'Tree 1 from search (criterion: minimize Tree value using character matrix)' = (((((16,((8,27),14)),(17,5)),(18,(19,12))),((21,11),(((22,(((((((((15,25),9),((1,24),4)),7),20),2),26),(13,29)),(6,10))),3),23))),28);
	TREE 'Tree 2 from search (criterion: minimize Tree value using character matrix)' = ((((21,11),(((22,(((((((((15,25),9),((1,24),4)),7),20),2),26),(13,29)),(6,10))),3),23)),28),(((16,((8,27),14)),(17,5)),(18,(19,12))));
	TREE 'Tree 3 from search (criterion: minimize Tree value using character matrix)' = (((21,11),(((22,(((((((((15,25),9),((1,24),4)),7),20),2),26),(13,29)),(6,10))),3),23)),((((16,((8,27),14)),(17,5)),(18,(19,12))),28));
	TREE 'Tree 4 from search (criterion: minimize Tree value using character matrix)' = ((((16,((8,27),14)),(17,5)),(((21,11),(((22,(((((((((15,25),9),((1,24),4)),7),20),2),26),(13,29)),(6,10))),3),23)),28)),(18,(19,12)));
	TREE 'Tree 5 from search (criterion: minimize Tree value using character matrix)' = (((16,((8,27),14)),(17,5)),((((21,11),(((22,(((((((((15,25),9),((1,24),4)),7),20),2),26),(13,29)),(6,10))),3),23)),28),(18,(19,12))));
	TREE 'Tree 6 from search (criterion: minimize Tree value using character matrix)' = ((18,(((16,((8,27),14)),(17,5)),(((21,11),(((22,(((((((((15,25),9),((1,24),4)),7),20),2),26),(13,29)),(6,10))),3),23)),28))),(19,12));
	TREE 'Tree 7 from search (criterion: minimize Tree value using character matrix)' = (18,((((16,((8,27),14)),(17,5)),(((21,11),(((22,(((((((((15,25),9),((1,24),4)),7),20),2),26),(13,29)),(6,10))),3),23)),28)),(19,12)));
	TREE 'Tree 8 from search (criterion: minimize Tree value using character matrix)' = ((19,(18,(((16,((8,27),14)),(17,5)),(((21,11),(((22,(((((((((15,25),9),((1,24),4)),7),20),2),26),(13,29)),(6,10))),3),23)),28)))),12);
	TREE 'Tree 9 from search (criterion: minimize Tree value using character matrix)' = (19,((18,(((16,((8,27),14)),(17,5)),(((21,11),(((22,(((((((((15,25),9),((1,24),4)),7),20),2),26),(13,29)),(6,10))),3),23)),28))),12));

END;


BEGIN TREES;
	Title Trees_from_heuristic_search;
	LINK Taxa = Taxa;
	TRANSLATE
		1 Paranomalurus_walkeri,
		2 Pondaungimys,
		3 Prolapsus,
		4 Shazurus,
		5 Hartenbergeromys,
		6 Glibia,
		7 Nementchamys,
		8 Theridomys,
		9 Paranomalurus_soniae,
		10 Zegdoumys,
		11 Eogliravus,
		12 Cocomys,
		13 Pappocricetodon,
		14 Remys,
		15 Anomalurus,
		16 Protadelomys,
		17 Pantrogna,
		18 Paramys,
		19 Tribosphenomys,
		20 Kebirmys,
		21 Bransatoglis,
		22 Pauromys,
		23 Knightomys,
		24 Paranomalurus_bishopi,
		25 Idiurus,
		26 Glibia_namibiensis,
		27 Elfomys,
		28 Birbalomys,
		29 Sinosminthus;
	TREE 'Tree 1 from search (criterion: minimize Tree value using character matrix)' = (((18,(19,12)),(28,((23,((((10,6),((13,29),(26,(2,(20,(((9,(15,25)),((24,1),4)),7)))))),22),3)),(11,21)))),((5,17),(16,(14,(27,8)))));
	TREE 'Tree 2 from search (criterion: minimize Tree value using character matrix)' = (((28,((23,((((10,6),((13,29),(26,(2,(20,(((9,(15,25)),((24,1),4)),7)))))),22),3)),(11,21))),((5,17),(16,(14,(27,8))))),(18,(19,12)));
	TREE 'Tree 3 from search (criterion: minimize Tree value using character matrix)' = ((28,((23,((((10,6),((13,29),(26,(2,(20,(((9,(15,25)),((24,1),4)),7)))))),22),3)),(11,21))),((18,(19,12)),((5,17),(16,(14,(27,8))))));
	TREE 'Tree 4 from search (criterion: minimize Tree value using character matrix)' = ((18,((28,((23,((((10,6),((13,29),(26,(2,(20,(((9,(15,25)),((24,1),4)),7)))))),22),3)),(11,21))),((5,17),(16,(14,(27,8)))))),(19,12));
	TREE 'Tree 5 from search (criterion: minimize Tree value using character matrix)' = (18,(((28,((23,((((10,6),((13,29),(26,(2,(20,(((9,(15,25)),((24,1),4)),7)))))),22),3)),(11,21))),((5,17),(16,(14,(27,8))))),(19,12)));
	TREE 'Tree 6 from search (criterion: minimize Tree value using character matrix)' = ((((23,((((10,6),((13,29),(26,(2,(20,(((9,(15,25)),((24,1),4)),7)))))),22),3)),(11,21)),((18,(19,12)),((5,17),(16,(14,(27,8)))))),28);
	TREE 'Tree 7 from search (criterion: minimize Tree value using character matrix)' = (((23,((((10,6),((13,29),(26,(2,(20,(((9,(15,25)),((24,1),4)),7)))))),22),3)),(11,21)),(28,((18,(19,12)),((5,17),(16,(14,(27,8)))))));
	TREE 'Tree 8 from search (criterion: minimize Tree value using character matrix)' = ((19,(18,((28,((23,((((10,6),((13,29),(26,(2,(20,(((9,(15,25)),((24,1),4)),7)))))),22),3)),(11,21))),((5,17),(16,(14,(27,8))))))),12);
	TREE 'Tree 9 from search (criterion: minimize Tree value using character matrix)' = (19,((18,((28,((23,((((10,6),((13,29),(26,(2,(20,(((9,(15,25)),((24,1),4)),7)))))),22),3)),(11,21))),((5,17),(16,(14,(27,8)))))),12));

END;


BEGIN TREES;
	Title Trees_from_heuristic_search;
	LINK Taxa = Taxa;
	TRANSLATE
		1 Paranomalurus_walkeri,
		2 Pondaungimys,
		3 Prolapsus,
		4 Shazurus,
		5 Hartenbergeromys,
		6 Glibia,
		7 Nementchamys,
		8 Theridomys,
		9 Paranomalurus_soniae,
		10 Zegdoumys,
		11 Eogliravus,
		12 Cocomys,
		13 Pappocricetodon,
		14 Remys,
		15 Anomalurus,
		16 Protadelomys,
		17 Pantrogna,
		18 Paramys,
		19 Tribosphenomys,
		20 Kebirmys,
		21 Bransatoglis,
		22 Pauromys,
		23 Knightomys,
		24 Paranomalurus_bishopi,
		25 Idiurus,
		26 Glibia_namibiensis,
		27 Elfomys,
		28 Birbalomys,
		29 Sinosminthus;
	TREE 'Tree 1 from search (criterion: minimize Tree value using character matrix)' = (((21,11),((3,22),(23,((6,10),(((27,8),(14,16)),((13,29),(26,(2,((((15,25),9),((24,1),4)),(20,7)))))))))),(((5,17),28),(18,(19,12))));
	TREE 'Tree 2 from search (criterion: minimize Tree value using character matrix)' = ((((5,17),28),((21,11),((3,22),(23,((6,10),(((27,8),(14,16)),((13,29),(26,(2,((((15,25),9),((24,1),4)),(20,7))))))))))),(18,(19,12)));
	TREE 'Tree 3 from search (criterion: minimize Tree value using character matrix)' = (((5,17),28),(((21,11),((3,22),(23,((6,10),(((27,8),(14,16)),((13,29),(26,(2,((((15,25),9),((24,1),4)),(20,7)))))))))),(18,(19,12))));
	TREE 'Tree 4 from search (criterion: minimize Tree value using character matrix)' = (((21,11),(22,(3,(23,((6,10),(((27,8),(14,16)),((13,29),(26,(2,((((15,25),9),((24,1),4)),(20,7))))))))))),(((5,17),28),(18,(19,12))));
	TREE 'Tree 5 from search (criterion: minimize Tree value using character matrix)' = ((18,(((5,17),28),((21,11),((3,22),(23,((6,10),(((27,8),(14,16)),((13,29),(26,(2,((((15,25),9),((24,1),4)),(20,7)))))))))))),(19,12));
	TREE 'Tree 6 from search (criterion: minimize Tree value using character matrix)' = (18,((((5,17),28),((21,11),((3,22),(23,((6,10),(((27,8),(14,16)),((13,29),(26,(2,((((15,25),9),((24,1),4)),(20,7))))))))))),(19,12)));
	TREE 'Tree 7 from search (criterion: minimize Tree value using character matrix)' = ((((5,17),28),((21,11),(22,(3,(23,((6,10),(((27,8),(14,16)),((13,29),(26,(2,((((15,25),9),((24,1),4)),(20,7)))))))))))),(18,(19,12)));
	TREE 'Tree 8 from search (criterion: minimize Tree value using character matrix)' = ((28,(((21,11),((3,22),(23,((6,10),(((27,8),(14,16)),((13,29),(26,(2,((((15,25),9),((24,1),4)),(20,7)))))))))),(18,(19,12)))),(5,17));
	TREE 'Tree 9 from search (criterion: minimize Tree value using character matrix)' = (28,((5,17),(((21,11),((3,22),(23,((6,10),(((27,8),(14,16)),((13,29),(26,(2,((((15,25),9),((24,1),4)),(20,7)))))))))),(18,(19,12)))));
	TREE 'Tree 10 from search (criterion: minimize Tree value using character matrix)' = (((5,17),28),(((21,11),(22,(3,(23,((6,10),(((27,8),(14,16)),((13,29),(26,(2,((((15,25),9),((24,1),4)),(20,7))))))))))),(18,(19,12))));
	TREE 'Tree 11 from search (criterion: minimize Tree value using character matrix)' = ((19,(18,(((5,17),28),((21,11),((3,22),(23,((6,10),(((27,8),(14,16)),((13,29),(26,(2,((((15,25),9),((24,1),4)),(20,7))))))))))))),12);
	TREE 'Tree 12 from search (criterion: minimize Tree value using character matrix)' = (19,((18,(((5,17),28),((21,11),((3,22),(23,((6,10),(((27,8),(14,16)),((13,29),(26,(2,((((15,25),9),((24,1),4)),(20,7)))))))))))),12));
	TREE 'Tree 13 from search (criterion: minimize Tree value using character matrix)' = ((18,(((5,17),28),((21,11),(22,(3,(23,((6,10),(((27,8),(14,16)),((13,29),(26,(2,((((15,25),9),((24,1),4)),(20,7))))))))))))),(19,12));
	TREE 'Tree 14 from search (criterion: minimize Tree value using character matrix)' = (18,((((5,17),28),((21,11),(22,(3,(23,((6,10),(((27,8),(14,16)),((13,29),(26,(2,((((15,25),9),((24,1),4)),(20,7)))))))))))),(19,12)));
	TREE 'Tree 15 from search (criterion: minimize Tree value using character matrix)' = ((5,(28,(((21,11),((3,22),(23,((6,10),(((27,8),(14,16)),((13,29),(26,(2,((((15,25),9),((24,1),4)),(20,7)))))))))),(18,(19,12))))),17);
	TREE 'Tree 16 from search (criterion: minimize Tree value using character matrix)' = (5,((28,(((21,11),((3,22),(23,((6,10),(((27,8),(14,16)),((13,29),(26,(2,((((15,25),9),((24,1),4)),(20,7)))))))))),(18,(19,12)))),17));
	TREE 'Tree 17 from search (criterion: minimize Tree value using character matrix)' = ((28,(((21,11),(22,(3,(23,((6,10),(((27,8),(14,16)),((13,29),(26,(2,((((15,25),9),((24,1),4)),(20,7))))))))))),(18,(19,12)))),(5,17));
	TREE 'Tree 18 from search (criterion: minimize Tree value using character matrix)' = (28,((5,17),(((21,11),(22,(3,(23,((6,10),(((27,8),(14,16)),((13,29),(26,(2,((((15,25),9),((24,1),4)),(20,7))))))))))),(18,(19,12)))));
	TREE 'Tree 19 from search (criterion: minimize Tree value using character matrix)' = ((19,(18,(((5,17),28),((21,11),(22,(3,(23,((6,10),(((27,8),(14,16)),((13,29),(26,(2,((((15,25),9),((24,1),4)),(20,7)))))))))))))),12);
	TREE 'Tree 20 from search (criterion: minimize Tree value using character matrix)' = (19,((18,(((5,17),28),((21,11),(22,(3,(23,((6,10),(((27,8),(14,16)),((13,29),(26,(2,((((15,25),9),((24,1),4)),(20,7))))))))))))),12));
	TREE 'Tree 21 from search (criterion: minimize Tree value using character matrix)' = ((5,(28,(((21,11),(22,(3,(23,((6,10),(((27,8),(14,16)),((13,29),(26,(2,((((15,25),9),((24,1),4)),(20,7))))))))))),(18,(19,12))))),17);
	TREE 'Tree 22 from search (criterion: minimize Tree value using character matrix)' = (5,((28,(((21,11),(22,(3,(23,((6,10),(((27,8),(14,16)),((13,29),(26,(2,((((15,25),9),((24,1),4)),(20,7))))))))))),(18,(19,12)))),17));

END;


BEGIN TREES;
	Title Trees_from_heuristic_search;
	LINK Taxa = Taxa;
	TRANSLATE
		1 Paranomalurus_walkeri,
		2 Pondaungimys,
		3 Prolapsus,
		4 Shazurus,
		5 Hartenbergeromys,
		6 Glibia,
		7 Nementchamys,
		8 Theridomys,
		9 Paranomalurus_soniae,
		10 Zegdoumys,
		11 Eogliravus,
		12 Cocomys,
		13 Pappocricetodon,
		14 Remys,
		15 Anomalurus,
		16 Protadelomys,
		17 Pantrogna,
		18 Paramys,
		19 Tribosphenomys,
		20 Kebirmys,
		21 Bransatoglis,
		22 Pauromys,
		23 Knightomys,
		24 Paranomalurus_bishopi,
		25 Idiurus,
		26 Glibia_namibiensis,
		27 Elfomys,
		28 Birbalomys,
		29 Sinosminthus;
	TREE 'Tree 1 from search (criterion: minimize Tree value using character matrix)' = ((28,((18,(12,19)),(5,17))),((21,11),(23,(22,(((((14,16),(27,8)),((13,29),(26,(2,((7,20),((9,(25,15)),((1,24),4))))))),(10,6)),3)))));
	TREE 'Tree 2 from search (criterion: minimize Tree value using character matrix)' = ((((18,(12,19)),(5,17)),((21,11),(23,(22,(((((14,16),(27,8)),((13,29),(26,(2,((7,20),((9,(25,15)),((1,24),4))))))),(10,6)),3))))),28);
	TREE 'Tree 3 from search (criterion: minimize Tree value using character matrix)' = (((18,(12,19)),(5,17)),(28,((21,11),(23,(22,(((((14,16),(27,8)),((13,29),(26,(2,((7,20),((9,(25,15)),((1,24),4))))))),(10,6)),3))))));
	TREE 'Tree 4 from search (criterion: minimize Tree value using character matrix)' = ((28,((18,(12,19)),(5,17))),((21,11),(23,(22,(((((27,(14,16)),8),((13,29),(26,(2,((7,20),((9,(25,15)),((1,24),4))))))),(10,6)),3)))));
	TREE 'Tree 5 from search (criterion: minimize Tree value using character matrix)' = ((((18,(12,19)),(5,17)),((21,11),(23,(22,(((((27,(14,16)),8),((13,29),(26,(2,((7,20),((9,(25,15)),((1,24),4))))))),(10,6)),3))))),28);
	TREE 'Tree 6 from search (criterion: minimize Tree value using character matrix)' = (((5,17),(28,((21,11),(23,(22,(((((14,16),(27,8)),((13,29),(26,(2,((7,20),((9,(25,15)),((1,24),4))))))),(10,6)),3)))))),(18,(12,19)));
	TREE 'Tree 7 from search (criterion: minimize Tree value using character matrix)' = ((5,17),((18,(12,19)),(28,((21,11),(23,(22,(((((14,16),(27,8)),((13,29),(26,(2,((7,20),((9,(25,15)),((1,24),4))))))),(10,6)),3)))))));
	TREE 'Tree 8 from search (criterion: minimize Tree value using character matrix)' = (((18,(12,19)),(5,17)),(28,((21,11),(23,(22,(((((27,(14,16)),8),((13,29),(26,(2,((7,20),((9,(25,15)),((1,24),4))))))),(10,6)),3))))));
	TREE 'Tree 9 from search (criterion: minimize Tree value using character matrix)' = ((18,((5,17),(28,((21,11),(23,(22,(((((14,16),(27,8)),((13,29),(26,(2,((7,20),((9,(25,15)),((1,24),4))))))),(10,6)),3))))))),(12,19));
	TREE 'Tree 10 from search (criterion: minimize Tree value using character matrix)' = (18,(((5,17),(28,((21,11),(23,(22,(((((14,16),(27,8)),((13,29),(26,(2,((7,20),((9,(25,15)),((1,24),4))))))),(10,6)),3)))))),(12,19)));
	TREE 'Tree 11 from search (criterion: minimize Tree value using character matrix)' = (((5,17),(28,((21,11),(23,(22,(((((27,(14,16)),8),((13,29),(26,(2,((7,20),((9,(25,15)),((1,24),4))))))),(10,6)),3)))))),(18,(12,19)));
	TREE 'Tree 12 from search (criterion: minimize Tree value using character matrix)' = ((17,((18,(12,19)),(28,((21,11),(23,(22,(((((14,16),(27,8)),((13,29),(26,(2,((7,20),((9,(25,15)),((1,24),4))))))),(10,6)),3))))))),5);
	TREE 'Tree 13 from search (criterion: minimize Tree value using character matrix)' = (17,(5,((18,(12,19)),(28,((21,11),(23,(22,(((((14,16),(27,8)),((13,29),(26,(2,((7,20),((9,(25,15)),((1,24),4))))))),(10,6)),3))))))));
	TREE 'Tree 14 from search (criterion: minimize Tree value using character matrix)' = ((5,17),((18,(12,19)),(28,((21,11),(23,(22,(((((27,(14,16)),8),((13,29),(26,(2,((7,20),((9,(25,15)),((1,24),4))))))),(10,6)),3)))))));
	TREE 'Tree 15 from search (criterion: minimize Tree value using character matrix)' = ((12,(18,((5,17),(28,((21,11),(23,(22,(((((14,16),(27,8)),((13,29),(26,(2,((7,20),((9,(25,15)),((1,24),4))))))),(10,6)),3)))))))),19);
	TREE 'Tree 16 from search (criterion: minimize Tree value using character matrix)' = (12,((18,((5,17),(28,((21,11),(23,(22,(((((14,16),(27,8)),((13,29),(26,(2,((7,20),((9,(25,15)),((1,24),4))))))),(10,6)),3))))))),19));
	TREE 'Tree 17 from search (criterion: minimize Tree value using character matrix)' = ((18,((5,17),(28,((21,11),(23,(22,(((((27,(14,16)),8),((13,29),(26,(2,((7,20),((9,(25,15)),((1,24),4))))))),(10,6)),3))))))),(12,19));
	TREE 'Tree 18 from search (criterion: minimize Tree value using character matrix)' = (18,(((5,17),(28,((21,11),(23,(22,(((((27,(14,16)),8),((13,29),(26,(2,((7,20),((9,(25,15)),((1,24),4))))))),(10,6)),3)))))),(12,19)));
	TREE 'Tree 19 from search (criterion: minimize Tree value using character matrix)' = ((17,((18,(12,19)),(28,((21,11),(23,(22,(((((27,(14,16)),8),((13,29),(26,(2,((7,20),((9,(25,15)),((1,24),4))))))),(10,6)),3))))))),5);
	TREE 'Tree 20 from search (criterion: minimize Tree value using character matrix)' = (17,(5,((18,(12,19)),(28,((21,11),(23,(22,(((((27,(14,16)),8),((13,29),(26,(2,((7,20),((9,(25,15)),((1,24),4))))))),(10,6)),3))))))));
	TREE 'Tree 21 from search (criterion: minimize Tree value using character matrix)' = ((12,(18,((5,17),(28,((21,11),(23,(22,(((((27,(14,16)),8),((13,29),(26,(2,((7,20),((9,(25,15)),((1,24),4))))))),(10,6)),3)))))))),19);
	TREE 'Tree 22 from search (criterion: minimize Tree value using character matrix)' = (12,((18,((5,17),(28,((21,11),(23,(22,(((((27,(14,16)),8),((13,29),(26,(2,((7,20),((9,(25,15)),((1,24),4))))))),(10,6)),3))))))),19));

END;


BEGIN TREES;
	Title Trees_from_heuristic_search;
	LINK Taxa = Taxa;
	TRANSLATE
		1 Paranomalurus_walkeri,
		2 Pondaungimys,
		3 Prolapsus,
		4 Shazurus,
		5 Hartenbergeromys,
		6 Glibia,
		7 Nementchamys,
		8 Theridomys,
		9 Paranomalurus_soniae,
		10 Zegdoumys,
		11 Eogliravus,
		12 Cocomys,
		13 Pappocricetodon,
		14 Remys,
		15 Anomalurus,
		16 Protadelomys,
		17 Pantrogna,
		18 Paramys,
		19 Tribosphenomys,
		20 Kebirmys,
		21 Bransatoglis,
		22 Pauromys,
		23 Knightomys,
		24 Paranomalurus_bishopi,
		25 Idiurus,
		26 Glibia_namibiensis,
		27 Elfomys,
		28 Birbalomys,
		29 Sinosminthus;
	TREE 'Tree 1 from search (criterion: minimize Tree value using character matrix)' = (((21,11),((22,(3,((10,6),(((8,27),(16,14)),((13,29),(26,(2,((20,7),((4,(24,1)),((25,15),9)))))))))),23)),(((18,(12,19)),(5,17)),28));
	TREE 'Tree 2 from search (criterion: minimize Tree value using character matrix)' = ((((18,(12,19)),(5,17)),((21,11),((22,(3,((10,6),(((8,27),(16,14)),((13,29),(26,(2,((20,7),((4,(24,1)),((25,15),9)))))))))),23))),28);
	TREE 'Tree 3 from search (criterion: minimize Tree value using character matrix)' = (((18,(12,19)),(5,17)),(((21,11),((22,(3,((10,6),(((8,27),(16,14)),((13,29),(26,(2,((20,7),((4,(24,1)),((25,15),9)))))))))),23)),28));
	TREE 'Tree 4 from search (criterion: minimize Tree value using character matrix)' = (((21,11),((22,(3,((10,6),(((27,(16,14)),8),((13,29),(26,(2,((20,7),((4,(24,1)),((25,15),9)))))))))),23)),(((18,(12,19)),(5,17)),28));
	TREE 'Tree 5 from search (criterion: minimize Tree value using character matrix)' = ((((18,(12,19)),(5,17)),((21,11),((22,(3,((10,6),(((27,(16,14)),8),((13,29),(26,(2,((20,7),((4,(24,1)),((25,15),9)))))))))),23))),28);
	TREE 'Tree 6 from search (criterion: minimize Tree value using character matrix)' = (((5,17),(((21,11),((22,(3,((10,6),(((8,27),(16,14)),((13,29),(26,(2,((20,7),((4,(24,1)),((25,15),9)))))))))),23)),28)),(18,(12,19)));
	TREE 'Tree 7 from search (criterion: minimize Tree value using character matrix)' = ((5,17),((18,(12,19)),(((21,11),((22,(3,((10,6),(((8,27),(16,14)),((13,29),(26,(2,((20,7),((4,(24,1)),((25,15),9)))))))))),23)),28)));
	TREE 'Tree 8 from search (criterion: minimize Tree value using character matrix)' = (((18,(12,19)),(5,17)),(((21,11),((22,(3,((10,6),(((27,(16,14)),8),((13,29),(26,(2,((20,7),((4,(24,1)),((25,15),9)))))))))),23)),28));
	TREE 'Tree 9 from search (criterion: minimize Tree value using character matrix)' = ((18,((5,17),(((21,11),((22,(3,((10,6),(((8,27),(16,14)),((13,29),(26,(2,((20,7),((4,(24,1)),((25,15),9)))))))))),23)),28))),(12,19));
	TREE 'Tree 10 from search (criterion: minimize Tree value using character matrix)' = (18,(((5,17),(((21,11),((22,(3,((10,6),(((8,27),(16,14)),((13,29),(26,(2,((20,7),((4,(24,1)),((25,15),9)))))))))),23)),28)),(12,19)));
	TREE 'Tree 11 from search (criterion: minimize Tree value using character matrix)' = (((5,17),(((21,11),((22,(3,((10,6),(((27,(16,14)),8),((13,29),(26,(2,((20,7),((4,(24,1)),((25,15),9)))))))))),23)),28)),(18,(12,19)));
	TREE 'Tree 12 from search (criterion: minimize Tree value using character matrix)' = ((17,((18,(12,19)),(((21,11),((22,(3,((10,6),(((8,27),(16,14)),((13,29),(26,(2,((20,7),((4,(24,1)),((25,15),9)))))))))),23)),28))),5);
	TREE 'Tree 13 from search (criterion: minimize Tree value using character matrix)' = (17,(5,((18,(12,19)),(((21,11),((22,(3,((10,6),(((8,27),(16,14)),((13,29),(26,(2,((20,7),((4,(24,1)),((25,15),9)))))))))),23)),28))));
	TREE 'Tree 14 from search (criterion: minimize Tree value using character matrix)' = ((5,17),((18,(12,19)),(((21,11),((22,(3,((10,6),(((27,(16,14)),8),((13,29),(26,(2,((20,7),((4,(24,1)),((25,15),9)))))))))),23)),28)));
	TREE 'Tree 15 from search (criterion: minimize Tree value using character matrix)' = ((12,(18,((5,17),(((21,11),((22,(3,((10,6),(((8,27),(16,14)),((13,29),(26,(2,((20,7),((4,(24,1)),((25,15),9)))))))))),23)),28)))),19);
	TREE 'Tree 16 from search (criterion: minimize Tree value using character matrix)' = (12,((18,((5,17),(((21,11),((22,(3,((10,6),(((8,27),(16,14)),((13,29),(26,(2,((20,7),((4,(24,1)),((25,15),9)))))))))),23)),28))),19));
	TREE 'Tree 17 from search (criterion: minimize Tree value using character matrix)' = ((18,((5,17),(((21,11),((22,(3,((10,6),(((27,(16,14)),8),((13,29),(26,(2,((20,7),((4,(24,1)),((25,15),9)))))))))),23)),28))),(12,19));
	TREE 'Tree 18 from search (criterion: minimize Tree value using character matrix)' = (18,(((5,17),(((21,11),((22,(3,((10,6),(((27,(16,14)),8),((13,29),(26,(2,((20,7),((4,(24,1)),((25,15),9)))))))))),23)),28)),(12,19)));
	TREE 'Tree 19 from search (criterion: minimize Tree value using character matrix)' = ((17,((18,(12,19)),(((21,11),((22,(3,((10,6),(((27,(16,14)),8),((13,29),(26,(2,((20,7),((4,(24,1)),((25,15),9)))))))))),23)),28))),5);
	TREE 'Tree 20 from search (criterion: minimize Tree value using character matrix)' = (17,(5,((18,(12,19)),(((21,11),((22,(3,((10,6),(((27,(16,14)),8),((13,29),(26,(2,((20,7),((4,(24,1)),((25,15),9)))))))))),23)),28))));
	TREE 'Tree 21 from search (criterion: minimize Tree value using character matrix)' = ((12,(18,((5,17),(((21,11),((22,(3,((10,6),(((27,(16,14)),8),((13,29),(26,(2,((20,7),((4,(24,1)),((25,15),9)))))))))),23)),28)))),19);
	TREE 'Tree 22 from search (criterion: minimize Tree value using character matrix)' = (12,((18,((5,17),(((21,11),((22,(3,((10,6),(((27,(16,14)),8),((13,29),(26,(2,((20,7),((4,(24,1)),((25,15),9)))))))))),23)),28))),19));

END;


BEGIN TREES;
	Title Trees_from_heuristic_search;
	LINK Taxa = Taxa;
	TRANSLATE
		1 Paranomalurus_walkeri,
		2 Pondaungimys,
		3 Prolapsus,
		4 Shazurus,
		5 Hartenbergeromys,
		6 Glibia,
		7 Nementchamys,
		8 Theridomys,
		9 Paranomalurus_soniae,
		10 Zegdoumys,
		11 Eogliravus,
		12 Cocomys,
		13 Pappocricetodon,
		14 Remys,
		15 Anomalurus,
		16 Protadelomys,
		17 Pantrogna,
		18 Paramys,
		19 Tribosphenomys,
		20 Kebirmys,
		21 Bransatoglis,
		22 Pauromys,
		23 Knightomys,
		24 Paranomalurus_bishopi,
		25 Idiurus,
		26 Glibia_namibiensis,
		27 Elfomys,
		28 Birbalomys,
		29 Sinosminthus;
	TREE 'Tree 1 from search (criterion: minimize Tree value using character matrix)' = (((23,(((((26,(2,(20,((((25,15),9),((24,1),4)),7)))),(29,13)),(10,6)),22),3)),(21,11)),((((12,19),18),((16,((27,8),14)),(17,5))),28));
	TREE 'Tree 2 from search (criterion: minimize Tree value using character matrix)' = (((((12,19),18),((16,((27,8),14)),(17,5))),((23,(((((26,(2,(20,((((25,15),9),((24,1),4)),7)))),(29,13)),(10,6)),22),3)),(21,11))),28);
	TREE 'Tree 3 from search (criterion: minimize Tree value using character matrix)' = ((((12,19),18),((16,((27,8),14)),(17,5))),(((23,(((((26,(2,(20,((((25,15),9),((24,1),4)),7)))),(29,13)),(10,6)),22),3)),(21,11)),28));
	TREE 'Tree 4 from search (criterion: minimize Tree value using character matrix)' = ((((16,((27,8),14)),(17,5)),(((23,(((((26,(2,(20,((((25,15),9),((24,1),4)),7)))),(29,13)),(10,6)),22),3)),(21,11)),28)),((12,19),18));
	TREE 'Tree 5 from search (criterion: minimize Tree value using character matrix)' = (((16,((27,8),14)),(17,5)),(((12,19),18),(((23,(((((26,(2,(20,((((25,15),9),((24,1),4)),7)))),(29,13)),(10,6)),22),3)),(21,11)),28)));
	TREE 'Tree 6 from search (criterion: minimize Tree value using character matrix)' = (((12,19),(((16,((27,8),14)),(17,5)),(((23,(((((26,(2,(20,((((25,15),9),((24,1),4)),7)))),(29,13)),(10,6)),22),3)),(21,11)),28))),18);
	TREE 'Tree 7 from search (criterion: minimize Tree value using character matrix)' = ((12,19),((((16,((27,8),14)),(17,5)),(((23,(((((26,(2,(20,((((25,15),9),((24,1),4)),7)))),(29,13)),(10,6)),22),3)),(21,11)),28)),18));
	TREE 'Tree 8 from search (criterion: minimize Tree value using character matrix)' = ((19,((((16,((27,8),14)),(17,5)),(((23,(((((26,(2,(20,((((25,15),9),((24,1),4)),7)))),(29,13)),(10,6)),22),3)),(21,11)),28)),18)),12);
	TREE 'Tree 9 from search (criterion: minimize Tree value using character matrix)' = (19,(12,((((16,((27,8),14)),(17,5)),(((23,(((((26,(2,(20,((((25,15),9),((24,1),4)),7)))),(29,13)),(10,6)),22),3)),(21,11)),28)),18)));

END;


BEGIN TREES;
	Title Trees_from_heuristic_search;
	LINK Taxa = Taxa;
	TRANSLATE
		1 Paranomalurus_walkeri,
		2 Pondaungimys,
		3 Prolapsus,
		4 Shazurus,
		5 Hartenbergeromys,
		6 Glibia,
		7 Nementchamys,
		8 Theridomys,
		9 Paranomalurus_soniae,
		10 Zegdoumys,
		11 Eogliravus,
		12 Cocomys,
		13 Pappocricetodon,
		14 Remys,
		15 Anomalurus,
		16 Protadelomys,
		17 Pantrogna,
		18 Paramys,
		19 Tribosphenomys,
		20 Kebirmys,
		21 Bransatoglis,
		22 Pauromys,
		23 Knightomys,
		24 Paranomalurus_bishopi,
		25 Idiurus,
		26 Glibia_namibiensis,
		27 Elfomys,
		28 Birbalomys,
		29 Sinosminthus;
	TREE 'Tree 1 from search (criterion: minimize Tree value using character matrix)' = (((18,(((((22,(((6,10),(((27,(14,16)),8),((13,29),(26,(2,((20,7),(((25,15),9),(4,(24,1))))))))),3)),23),(21,11)),28),(5,17))),12),19);
	TREE 'Tree 2 from search (criterion: minimize Tree value using character matrix)' = ((12,19),(18,(((((22,(((6,10),(((27,(14,16)),8),((13,29),(26,(2,((20,7),(((25,15),9),(4,(24,1))))))))),3)),23),(21,11)),28),(5,17))));
	TREE 'Tree 3 from search (criterion: minimize Tree value using character matrix)' = (12,((18,(((((22,(((6,10),(((27,(14,16)),8),((13,29),(26,(2,((20,7),(((25,15),9),(4,(24,1))))))))),3)),23),(21,11)),28),(5,17))),19));
	TREE 'Tree 4 from search (criterion: minimize Tree value using character matrix)' = (((18,(((((22,(((6,10),(((14,16),(27,8)),((13,29),(26,(2,((20,7),(((25,15),9),(4,(24,1))))))))),3)),23),(21,11)),28),(5,17))),12),19);
	TREE 'Tree 5 from search (criterion: minimize Tree value using character matrix)' = ((18,(12,19)),(((((22,(((6,10),(((27,(14,16)),8),((13,29),(26,(2,((20,7),(((25,15),9),(4,(24,1))))))))),3)),23),(21,11)),28),(5,17)));
	TREE 'Tree 6 from search (criterion: minimize Tree value using character matrix)' = (18,((12,19),(((((22,(((6,10),(((27,(14,16)),8),((13,29),(26,(2,((20,7),(((25,15),9),(4,(24,1))))))))),3)),23),(21,11)),28),(5,17))));
	TREE 'Tree 7 from search (criterion: minimize Tree value using character matrix)' = ((12,19),(18,(((((22,(((6,10),(((14,16),(27,8)),((13,29),(26,(2,((20,7),(((25,15),9),(4,(24,1))))))))),3)),23),(21,11)),28),(5,17))));
	TREE 'Tree 8 from search (criterion: minimize Tree value using character matrix)' = (12,((18,(((((22,(((6,10),(((14,16),(27,8)),((13,29),(26,(2,((20,7),(((25,15),9),(4,(24,1))))))))),3)),23),(21,11)),28),(5,17))),19));
	TREE 'Tree 9 from search (criterion: minimize Tree value using character matrix)' = ((((((22,(((6,10),(((27,(14,16)),8),((13,29),(26,(2,((20,7),(((25,15),9),(4,(24,1))))))))),3)),23),(21,11)),28),(18,(12,19))),(5,17));
	TREE 'Tree 10 from search (criterion: minimize Tree value using character matrix)' = (((((22,(((6,10),(((27,(14,16)),8),((13,29),(26,(2,((20,7),(((25,15),9),(4,(24,1))))))))),3)),23),(21,11)),28),((18,(12,19)),(5,17)));
	TREE 'Tree 11 from search (criterion: minimize Tree value using character matrix)' = ((18,(12,19)),(((((22,(((6,10),(((14,16),(27,8)),((13,29),(26,(2,((20,7),(((25,15),9),(4,(24,1))))))))),3)),23),(21,11)),28),(5,17)));
	TREE 'Tree 12 from search (criterion: minimize Tree value using character matrix)' = (18,((12,19),(((((22,(((6,10),(((14,16),(27,8)),((13,29),(26,(2,((20,7),(((25,15),9),(4,(24,1))))))))),3)),23),(21,11)),28),(5,17))));
	TREE 'Tree 13 from search (criterion: minimize Tree value using character matrix)' = ((5,(((((22,(((6,10),(((27,(14,16)),8),((13,29),(26,(2,((20,7),(((25,15),9),(4,(24,1))))))))),3)),23),(21,11)),28),(18,(12,19)))),17);
	TREE 'Tree 14 from search (criterion: minimize Tree value using character matrix)' = (5,((((((22,(((6,10),(((27,(14,16)),8),((13,29),(26,(2,((20,7),(((25,15),9),(4,(24,1))))))))),3)),23),(21,11)),28),(18,(12,19))),17));
	TREE 'Tree 15 from search (criterion: minimize Tree value using character matrix)' = ((((((22,(((6,10),(((14,16),(27,8)),((13,29),(26,(2,((20,7),(((25,15),9),(4,(24,1))))))))),3)),23),(21,11)),28),(18,(12,19))),(5,17));
	TREE 'Tree 16 from search (criterion: minimize Tree value using character matrix)' = ((28,((18,(12,19)),(5,17))),(((22,(((6,10),(((27,(14,16)),8),((13,29),(26,(2,((20,7),(((25,15),9),(4,(24,1))))))))),3)),23),(21,11)));
	TREE 'Tree 17 from search (criterion: minimize Tree value using character matrix)' = (28,((((22,(((6,10),(((27,(14,16)),8),((13,29),(26,(2,((20,7),(((25,15),9),(4,(24,1))))))))),3)),23),(21,11)),((18,(12,19)),(5,17))));
	TREE 'Tree 18 from search (criterion: minimize Tree value using character matrix)' = (((((22,(((6,10),(((14,16),(27,8)),((13,29),(26,(2,((20,7),(((25,15),9),(4,(24,1))))))))),3)),23),(21,11)),28),((18,(12,19)),(5,17)));
	TREE 'Tree 19 from search (criterion: minimize Tree value using character matrix)' = ((5,(((((22,(((6,10),(((14,16),(27,8)),((13,29),(26,(2,((20,7),(((25,15),9),(4,(24,1))))))))),3)),23),(21,11)),28),(18,(12,19)))),17);
	TREE 'Tree 20 from search (criterion: minimize Tree value using character matrix)' = (5,((((((22,(((6,10),(((14,16),(27,8)),((13,29),(26,(2,((20,7),(((25,15),9),(4,(24,1))))))))),3)),23),(21,11)),28),(18,(12,19))),17));
	TREE 'Tree 21 from search (criterion: minimize Tree value using character matrix)' = ((28,((18,(12,19)),(5,17))),(((22,(((6,10),(((14,16),(27,8)),((13,29),(26,(2,((20,7),(((25,15),9),(4,(24,1))))))))),3)),23),(21,11)));
	TREE 'Tree 22 from search (criterion: minimize Tree value using character matrix)' = (28,((((22,(((6,10),(((14,16),(27,8)),((13,29),(26,(2,((20,7),(((25,15),9),(4,(24,1))))))))),3)),23),(21,11)),((18,(12,19)),(5,17))));

END;


BEGIN TREES;
	Title Trees_from_heuristic_search;
	LINK Taxa = Taxa;
	TRANSLATE
		1 Paranomalurus_walkeri,
		2 Pondaungimys,
		3 Prolapsus,
		4 Shazurus,
		5 Hartenbergeromys,
		6 Glibia,
		7 Nementchamys,
		8 Theridomys,
		9 Paranomalurus_soniae,
		10 Zegdoumys,
		11 Eogliravus,
		12 Cocomys,
		13 Pappocricetodon,
		14 Remys,
		15 Anomalurus,
		16 Protadelomys,
		17 Pantrogna,
		18 Paramys,
		19 Tribosphenomys,
		20 Kebirmys,
		21 Bransatoglis,
		22 Pauromys,
		23 Knightomys,
		24 Paranomalurus_bishopi,
		25 Idiurus,
		26 Glibia_namibiensis,
		27 Elfomys,
		28 Birbalomys,
		29 Sinosminthus;
	TREE 'Tree 1 from search (criterion: minimize Tree value using character matrix)' = (((21,11),(23,(22,(3,((((26,(2,((7,20),(((15,25),9),(4,(24,1)))))),(29,13)),((8,27),(16,14))),(10,6)))))),(((5,17),(18,(12,19))),28));
	TREE 'Tree 2 from search (criterion: minimize Tree value using character matrix)' = ((((5,17),(18,(12,19))),((21,11),(23,(22,(3,((((26,(2,((7,20),(((15,25),9),(4,(24,1)))))),(29,13)),((8,27),(16,14))),(10,6))))))),28);
	TREE 'Tree 3 from search (criterion: minimize Tree value using character matrix)' = (((5,17),(18,(12,19))),(((21,11),(23,(22,(3,((((26,(2,((7,20),(((15,25),9),(4,(24,1)))))),(29,13)),((8,27),(16,14))),(10,6)))))),28));
	TREE 'Tree 4 from search (criterion: minimize Tree value using character matrix)' = (((21,11),(23,(22,(3,((((26,(2,((7,20),(((15,25),9),(4,(24,1)))))),(29,13)),(8,(27,(16,14)))),(10,6)))))),(((5,17),(18,(12,19))),28));
	TREE 'Tree 5 from search (criterion: minimize Tree value using character matrix)' = ((((5,17),(18,(12,19))),((21,11),(23,(22,(3,((((26,(2,((7,20),(((15,25),9),(4,(24,1)))))),(29,13)),(8,(27,(16,14)))),(10,6))))))),28);
	TREE 'Tree 6 from search (criterion: minimize Tree value using character matrix)' = (((18,(12,19)),(((21,11),(23,(22,(3,((((26,(2,((7,20),(((15,25),9),(4,(24,1)))))),(29,13)),((8,27),(16,14))),(10,6)))))),28)),(5,17));
	TREE 'Tree 7 from search (criterion: minimize Tree value using character matrix)' = ((18,(12,19)),((5,17),(((21,11),(23,(22,(3,((((26,(2,((7,20),(((15,25),9),(4,(24,1)))))),(29,13)),((8,27),(16,14))),(10,6)))))),28)));
	TREE 'Tree 8 from search (criterion: minimize Tree value using character matrix)' = (((5,17),(18,(12,19))),(((21,11),(23,(22,(3,((((26,(2,((7,20),(((15,25),9),(4,(24,1)))))),(29,13)),(8,(27,(16,14)))),(10,6)))))),28));
	TREE 'Tree 9 from search (criterion: minimize Tree value using character matrix)' = ((5,((18,(12,19)),(((21,11),(23,(22,(3,((((26,(2,((7,20),(((15,25),9),(4,(24,1)))))),(29,13)),((8,27),(16,14))),(10,6)))))),28))),17);
	TREE 'Tree 10 from search (criterion: minimize Tree value using character matrix)' = (5,(((18,(12,19)),(((21,11),(23,(22,(3,((((26,(2,((7,20),(((15,25),9),(4,(24,1)))))),(29,13)),((8,27),(16,14))),(10,6)))))),28)),17));
	TREE 'Tree 11 from search (criterion: minimize Tree value using character matrix)' = (((18,(12,19)),(((21,11),(23,(22,(3,((((26,(2,((7,20),(((15,25),9),(4,(24,1)))))),(29,13)),(8,(27,(16,14)))),(10,6)))))),28)),(5,17));
	TREE 'Tree 12 from search (criterion: minimize Tree value using character matrix)' = (((12,19),((5,17),(((21,11),(23,(22,(3,((((26,(2,((7,20),(((15,25),9),(4,(24,1)))))),(29,13)),((8,27),(16,14))),(10,6)))))),28))),18);
	TREE 'Tree 13 from search (criterion: minimize Tree value using character matrix)' = ((12,19),(18,((5,17),(((21,11),(23,(22,(3,((((26,(2,((7,20),(((15,25),9),(4,(24,1)))))),(29,13)),((8,27),(16,14))),(10,6)))))),28))));
	TREE 'Tree 14 from search (criterion: minimize Tree value using character matrix)' = ((18,(12,19)),((5,17),(((21,11),(23,(22,(3,((((26,(2,((7,20),(((15,25),9),(4,(24,1)))))),(29,13)),(8,(27,(16,14)))),(10,6)))))),28)));
	TREE 'Tree 15 from search (criterion: minimize Tree value using character matrix)' = ((5,((18,(12,19)),(((21,11),(23,(22,(3,((((26,(2,((7,20),(((15,25),9),(4,(24,1)))))),(29,13)),(8,(27,(16,14)))),(10,6)))))),28))),17);
	TREE 'Tree 16 from search (criterion: minimize Tree value using character matrix)' = (5,(((18,(12,19)),(((21,11),(23,(22,(3,((((26,(2,((7,20),(((15,25),9),(4,(24,1)))))),(29,13)),(8,(27,(16,14)))),(10,6)))))),28)),17));
	TREE 'Tree 17 from search (criterion: minimize Tree value using character matrix)' = (((12,19),((5,17),(((21,11),(23,(22,(3,((((26,(2,((7,20),(((15,25),9),(4,(24,1)))))),(29,13)),(8,(27,(16,14)))),(10,6)))))),28))),18);
	TREE 'Tree 18 from search (criterion: minimize Tree value using character matrix)' = ((19,(18,((5,17),(((21,11),(23,(22,(3,((((26,(2,((7,20),(((15,25),9),(4,(24,1)))))),(29,13)),((8,27),(16,14))),(10,6)))))),28)))),12);
	TREE 'Tree 19 from search (criterion: minimize Tree value using character matrix)' = (19,(12,(18,((5,17),(((21,11),(23,(22,(3,((((26,(2,((7,20),(((15,25),9),(4,(24,1)))))),(29,13)),((8,27),(16,14))),(10,6)))))),28)))));
	TREE 'Tree 20 from search (criterion: minimize Tree value using character matrix)' = ((12,19),(18,((5,17),(((21,11),(23,(22,(3,((((26,(2,((7,20),(((15,25),9),(4,(24,1)))))),(29,13)),(8,(27,(16,14)))),(10,6)))))),28))));
	TREE 'Tree 21 from search (criterion: minimize Tree value using character matrix)' = ((19,(18,((5,17),(((21,11),(23,(22,(3,((((26,(2,((7,20),(((15,25),9),(4,(24,1)))))),(29,13)),(8,(27,(16,14)))),(10,6)))))),28)))),12);
	TREE 'Tree 22 from search (criterion: minimize Tree value using character matrix)' = (19,(12,(18,((5,17),(((21,11),(23,(22,(3,((((26,(2,((7,20),(((15,25),9),(4,(24,1)))))),(29,13)),(8,(27,(16,14)))),(10,6)))))),28)))));

END;


BEGIN TREES;
	Title Trees_from_heuristic_search;
	LINK Taxa = Taxa;
	TRANSLATE
		1 Paranomalurus_walkeri,
		2 Pondaungimys,
		3 Prolapsus,
		4 Shazurus,
		5 Hartenbergeromys,
		6 Glibia,
		7 Nementchamys,
		8 Theridomys,
		9 Paranomalurus_soniae,
		10 Zegdoumys,
		11 Eogliravus,
		12 Cocomys,
		13 Pappocricetodon,
		14 Remys,
		15 Anomalurus,
		16 Protadelomys,
		17 Pantrogna,
		18 Paramys,
		19 Tribosphenomys,
		20 Kebirmys,
		21 Bransatoglis,
		22 Pauromys,
		23 Knightomys,
		24 Paranomalurus_bishopi,
		25 Idiurus,
		26 Glibia_namibiensis,
		27 Elfomys,
		28 Birbalomys,
		29 Sinosminthus;
	TREE 'Tree 1 from search (criterion: minimize Tree value using character matrix)' = (((((23,((22,((10,6),((((((((15,25),9),((24,1),4)),7),20),2),26),(13,29)))),3)),(21,11)),28),(18,(19,12))),((17,5),(((27,8),14),16)));
	TREE 'Tree 2 from search (criterion: minimize Tree value using character matrix)' = (((18,(19,12)),((17,5),(((27,8),14),16))),(((23,((22,((10,6),((((((((15,25),9),((24,1),4)),7),20),2),26),(13,29)))),3)),(21,11)),28));
	TREE 'Tree 3 from search (criterion: minimize Tree value using character matrix)' = ((18,(19,12)),((((23,((22,((10,6),((((((((15,25),9),((24,1),4)),7),20),2),26),(13,29)))),3)),(21,11)),28),((17,5),(((27,8),14),16))));
	TREE 'Tree 4 from search (criterion: minimize Tree value using character matrix)' = ((((23,((22,((10,6),((((((((15,25),9),((24,1),4)),7),20),2),26),(13,29)))),3)),(21,11)),((18,(19,12)),((17,5),(((27,8),14),16)))),28);
	TREE 'Tree 5 from search (criterion: minimize Tree value using character matrix)' = (((23,((22,((10,6),((((((((15,25),9),((24,1),4)),7),20),2),26),(13,29)))),3)),(21,11)),(((18,(19,12)),((17,5),(((27,8),14),16))),28));
	TREE 'Tree 6 from search (criterion: minimize Tree value using character matrix)' = (((19,12),((((23,((22,((10,6),((((((((15,25),9),((24,1),4)),7),20),2),26),(13,29)))),3)),(21,11)),28),((17,5),(((27,8),14),16)))),18);
	TREE 'Tree 7 from search (criterion: minimize Tree value using character matrix)' = ((19,12),(18,((((23,((22,((10,6),((((((((15,25),9),((24,1),4)),7),20),2),26),(13,29)))),3)),(21,11)),28),((17,5),(((27,8),14),16)))));
	TREE 'Tree 8 from search (criterion: minimize Tree value using character matrix)' = ((12,(18,((((23,((22,((10,6),((((((((15,25),9),((24,1),4)),7),20),2),26),(13,29)))),3)),(21,11)),28),((17,5),(((27,8),14),16))))),19);
	TREE 'Tree 9 from search (criterion: minimize Tree value using character matrix)' = (12,(19,(18,((((23,((22,((10,6),((((((((15,25),9),((24,1),4)),7),20),2),26),(13,29)))),3)),(21,11)),28),((17,5),(((27,8),14),16))))));

END;


BEGIN TREES;
	Title Trees_from_heuristic_search;
	LINK Taxa = Taxa;
	TRANSLATE
		1 Paranomalurus_walkeri,
		2 Pondaungimys,
		3 Prolapsus,
		4 Shazurus,
		5 Hartenbergeromys,
		6 Glibia,
		7 Nementchamys,
		8 Theridomys,
		9 Paranomalurus_soniae,
		10 Zegdoumys,
		11 Eogliravus,
		12 Cocomys,
		13 Pappocricetodon,
		14 Remys,
		15 Anomalurus,
		16 Protadelomys,
		17 Pantrogna,
		18 Paramys,
		19 Tribosphenomys,
		20 Kebirmys,
		21 Bransatoglis,
		22 Pauromys,
		23 Knightomys,
		24 Paranomalurus_bishopi,
		25 Idiurus,
		26 Glibia_namibiensis,
		27 Elfomys,
		28 Birbalomys,
		29 Sinosminthus;
	TREE 'Tree 1 from search (criterion: minimize Tree value using character matrix)' = (((12,19),((28,((23,((((10,6),((29,13),(26,(2,(20,(7,((4,(24,1)),((15,25),9)))))))),22),3)),(11,21))),((((8,27),14),16),(5,17)))),18);
	TREE 'Tree 2 from search (criterion: minimize Tree value using character matrix)' = ((((28,((23,((((10,6),((29,13),(26,(2,(20,(7,((4,(24,1)),((15,25),9)))))))),22),3)),(11,21))),((((8,27),14),16),(5,17))),18),(12,19));
	TREE 'Tree 3 from search (criterion: minimize Tree value using character matrix)' = (((28,((23,((((10,6),((29,13),(26,(2,(20,(7,((4,(24,1)),((15,25),9)))))))),22),3)),(11,21))),((((8,27),14),16),(5,17))),((12,19),18));
	TREE 'Tree 4 from search (criterion: minimize Tree value using character matrix)' = ((12,(((28,((23,((((10,6),((29,13),(26,(2,(20,(7,((4,(24,1)),((15,25),9)))))))),22),3)),(11,21))),((((8,27),14),16),(5,17))),18)),19);
	TREE 'Tree 5 from search (criterion: minimize Tree value using character matrix)' = (12,((((28,((23,((((10,6),((29,13),(26,(2,(20,(7,((4,(24,1)),((15,25),9)))))))),22),3)),(11,21))),((((8,27),14),16),(5,17))),18),19));
	TREE 'Tree 6 from search (criterion: minimize Tree value using character matrix)' = ((((((8,27),14),16),(5,17)),((12,19),18)),(28,((23,((((10,6),((29,13),(26,(2,(20,(7,((4,(24,1)),((15,25),9)))))))),22),3)),(11,21))));
	TREE 'Tree 7 from search (criterion: minimize Tree value using character matrix)' = (((((8,27),14),16),(5,17)),((28,((23,((((10,6),((29,13),(26,(2,(20,(7,((4,(24,1)),((15,25),9)))))))),22),3)),(11,21))),((12,19),18)));
	TREE 'Tree 8 from search (criterion: minimize Tree value using character matrix)' = ((28,(((((8,27),14),16),(5,17)),((12,19),18))),((23,((((10,6),((29,13),(26,(2,(20,(7,((4,(24,1)),((15,25),9)))))))),22),3)),(11,21)));
	TREE 'Tree 9 from search (criterion: minimize Tree value using character matrix)' = (28,((((((8,27),14),16),(5,17)),((12,19),18)),((23,((((10,6),((29,13),(26,(2,(20,(7,((4,(24,1)),((15,25),9)))))))),22),3)),(11,21))));

END;


BEGIN TREES;
	Title Trees_from_heuristic_search;
	LINK Taxa = Taxa;
	TRANSLATE
		1 Paranomalurus_walkeri,
		2 Pondaungimys,
		3 Prolapsus,
		4 Shazurus,
		5 Hartenbergeromys,
		6 Glibia,
		7 Nementchamys,
		8 Theridomys,
		9 Paranomalurus_soniae,
		10 Zegdoumys,
		11 Eogliravus,
		12 Cocomys,
		13 Pappocricetodon,
		14 Remys,
		15 Anomalurus,
		16 Protadelomys,
		17 Pantrogna,
		18 Paramys,
		19 Tribosphenomys,
		20 Kebirmys,
		21 Bransatoglis,
		22 Pauromys,
		23 Knightomys,
		24 Paranomalurus_bishopi,
		25 Idiurus,
		26 Glibia_namibiensis,
		27 Elfomys,
		28 Birbalomys,
		29 Sinosminthus;
	TREE 'Tree 1 from search (criterion: minimize Tree value using character matrix)' = ((((3,22),(((((16,14),(27,8)),((26,(2,((((24,1),4),(9,(15,25))),(7,20)))),(13,29))),(6,10)),23)),(21,11)),((18,(19,12)),((17,5),28)));
	TREE 'Tree 2 from search (criterion: minimize Tree value using character matrix)' = (((18,(19,12)),(((3,22),(((((16,14),(27,8)),((26,(2,((((24,1),4),(9,(15,25))),(7,20)))),(13,29))),(6,10)),23)),(21,11))),((17,5),28));
	TREE 'Tree 3 from search (criterion: minimize Tree value using character matrix)' = ((18,(19,12)),((((3,22),(((((16,14),(27,8)),((26,(2,((((24,1),4),(9,(15,25))),(7,20)))),(13,29))),(6,10)),23)),(21,11)),((17,5),28)));
	TREE 'Tree 4 from search (criterion: minimize Tree value using character matrix)' = (((22,(3,(((((16,14),(27,8)),((26,(2,((((24,1),4),(9,(15,25))),(7,20)))),(13,29))),(6,10)),23))),(21,11)),((18,(19,12)),((17,5),28)));
	TREE 'Tree 5 from search (criterion: minimize Tree value using character matrix)' = (((17,5),((18,(19,12)),(((3,22),(((((16,14),(27,8)),((26,(2,((((24,1),4),(9,(15,25))),(7,20)))),(13,29))),(6,10)),23)),(21,11)))),28);
	TREE 'Tree 6 from search (criterion: minimize Tree value using character matrix)' = ((17,5),(((18,(19,12)),(((3,22),(((((16,14),(27,8)),((26,(2,((((24,1),4),(9,(15,25))),(7,20)))),(13,29))),(6,10)),23)),(21,11))),28));
	TREE 'Tree 7 from search (criterion: minimize Tree value using character matrix)' = (((18,(19,12)),((22,(3,(((((16,14),(27,8)),((26,(2,((((24,1),4),(9,(15,25))),(7,20)))),(13,29))),(6,10)),23))),(21,11))),((17,5),28));
	TREE 'Tree 8 from search (criterion: minimize Tree value using character matrix)' = (((19,12),((((3,22),(((((16,14),(27,8)),((26,(2,((((24,1),4),(9,(15,25))),(7,20)))),(13,29))),(6,10)),23)),(21,11)),((17,5),28))),18);
	TREE 'Tree 9 from search (criterion: minimize Tree value using character matrix)' = ((19,12),(18,((((3,22),(((((16,14),(27,8)),((26,(2,((((24,1),4),(9,(15,25))),(7,20)))),(13,29))),(6,10)),23)),(21,11)),((17,5),28))));
	TREE 'Tree 10 from search (criterion: minimize Tree value using character matrix)' = ((18,(19,12)),(((22,(3,(((((16,14),(27,8)),((26,(2,((((24,1),4),(9,(15,25))),(7,20)))),(13,29))),(6,10)),23))),(21,11)),((17,5),28)));
	TREE 'Tree 11 from search (criterion: minimize Tree value using character matrix)' = (((17,5),((18,(19,12)),((22,(3,(((((16,14),(27,8)),((26,(2,((((24,1),4),(9,(15,25))),(7,20)))),(13,29))),(6,10)),23))),(21,11)))),28);
	TREE 'Tree 12 from search (criterion: minimize Tree value using character matrix)' = ((5,(((18,(19,12)),(((3,22),(((((16,14),(27,8)),((26,(2,((((24,1),4),(9,(15,25))),(7,20)))),(13,29))),(6,10)),23)),(21,11))),28)),17);
	TREE 'Tree 13 from search (criterion: minimize Tree value using character matrix)' = (5,(17,(((18,(19,12)),(((3,22),(((((16,14),(27,8)),((26,(2,((((24,1),4),(9,(15,25))),(7,20)))),(13,29))),(6,10)),23)),(21,11))),28)));
	TREE 'Tree 14 from search (criterion: minimize Tree value using character matrix)' = ((17,5),(((18,(19,12)),((22,(3,(((((16,14),(27,8)),((26,(2,((((24,1),4),(9,(15,25))),(7,20)))),(13,29))),(6,10)),23))),(21,11))),28));
	TREE 'Tree 15 from search (criterion: minimize Tree value using character matrix)' = (((19,12),(((22,(3,(((((16,14),(27,8)),((26,(2,((((24,1),4),(9,(15,25))),(7,20)))),(13,29))),(6,10)),23))),(21,11)),((17,5),28))),18);
	TREE 'Tree 16 from search (criterion: minimize Tree value using character matrix)' = ((12,(18,((((3,22),(((((16,14),(27,8)),((26,(2,((((24,1),4),(9,(15,25))),(7,20)))),(13,29))),(6,10)),23)),(21,11)),((17,5),28)))),19);
	TREE 'Tree 17 from search (criterion: minimize Tree value using character matrix)' = (12,(19,(18,((((3,22),(((((16,14),(27,8)),((26,(2,((((24,1),4),(9,(15,25))),(7,20)))),(13,29))),(6,10)),23)),(21,11)),((17,5),28)))));
	TREE 'Tree 18 from search (criterion: minimize Tree value using character matrix)' = ((19,12),(18,(((22,(3,(((((16,14),(27,8)),((26,(2,((((24,1),4),(9,(15,25))),(7,20)))),(13,29))),(6,10)),23))),(21,11)),((17,5),28))));
	TREE 'Tree 19 from search (criterion: minimize Tree value using character matrix)' = ((5,(((18,(19,12)),((22,(3,(((((16,14),(27,8)),((26,(2,((((24,1),4),(9,(15,25))),(7,20)))),(13,29))),(6,10)),23))),(21,11))),28)),17);
	TREE 'Tree 20 from search (criterion: minimize Tree value using character matrix)' = (5,(17,(((18,(19,12)),((22,(3,(((((16,14),(27,8)),((26,(2,((((24,1),4),(9,(15,25))),(7,20)))),(13,29))),(6,10)),23))),(21,11))),28)));
	TREE 'Tree 21 from search (criterion: minimize Tree value using character matrix)' = ((12,(18,(((22,(3,(((((16,14),(27,8)),((26,(2,((((24,1),4),(9,(15,25))),(7,20)))),(13,29))),(6,10)),23))),(21,11)),((17,5),28)))),19);
	TREE 'Tree 22 from search (criterion: minimize Tree value using character matrix)' = (12,(19,(18,(((22,(3,(((((16,14),(27,8)),((26,(2,((((24,1),4),(9,(15,25))),(7,20)))),(13,29))),(6,10)),23))),(21,11)),((17,5),28)))));

END;


BEGIN TREES;
	Title Trees_from_heuristic_search;
	LINK Taxa = Taxa;
	TRANSLATE
		1 Paranomalurus_walkeri,
		2 Pondaungimys,
		3 Prolapsus,
		4 Shazurus,
		5 Hartenbergeromys,
		6 Glibia,
		7 Nementchamys,
		8 Theridomys,
		9 Paranomalurus_soniae,
		10 Zegdoumys,
		11 Eogliravus,
		12 Cocomys,
		13 Pappocricetodon,
		14 Remys,
		15 Anomalurus,
		16 Protadelomys,
		17 Pantrogna,
		18 Paramys,
		19 Tribosphenomys,
		20 Kebirmys,
		21 Bransatoglis,
		22 Pauromys,
		23 Knightomys,
		24 Paranomalurus_bishopi,
		25 Idiurus,
		26 Glibia_namibiensis,
		27 Elfomys,
		28 Birbalomys,
		29 Sinosminthus;
	TREE 'Tree 1 from search (criterion: minimize Tree value using character matrix)' = (((21,11),(23,((22,(((13,29),((((7,((4,(1,24)),((15,25),9))),20),2),26)),(6,10))),3))),(28,(((17,5),(16,((27,8),14))),((19,12),18))));
	TREE 'Tree 2 from search (criterion: minimize Tree value using character matrix)' = ((28,((21,11),(23,((22,(((13,29),((((7,((4,(1,24)),((15,25),9))),20),2),26)),(6,10))),3)))),(((17,5),(16,((27,8),14))),((19,12),18)));
	TREE 'Tree 3 from search (criterion: minimize Tree value using character matrix)' = (28,(((21,11),(23,((22,(((13,29),((((7,((4,(1,24)),((15,25),9))),20),2),26)),(6,10))),3))),(((17,5),(16,((27,8),14))),((19,12),18))));
	TREE 'Tree 4 from search (criterion: minimize Tree value using character matrix)' = ((((17,5),(16,((27,8),14))),(28,((21,11),(23,((22,(((13,29),((((7,((4,(1,24)),((15,25),9))),20),2),26)),(6,10))),3))))),((19,12),18));
	TREE 'Tree 5 from search (criterion: minimize Tree value using character matrix)' = (((17,5),(16,((27,8),14))),((28,((21,11),(23,((22,(((13,29),((((7,((4,(1,24)),((15,25),9))),20),2),26)),(6,10))),3)))),((19,12),18)));
	TREE 'Tree 6 from search (criterion: minimize Tree value using character matrix)' = (((19,12),(((17,5),(16,((27,8),14))),(28,((21,11),(23,((22,(((13,29),((((7,((4,(1,24)),((15,25),9))),20),2),26)),(6,10))),3)))))),18);
	TREE 'Tree 7 from search (criterion: minimize Tree value using character matrix)' = ((19,12),((((17,5),(16,((27,8),14))),(28,((21,11),(23,((22,(((13,29),((((7,((4,(1,24)),((15,25),9))),20),2),26)),(6,10))),3))))),18));
	TREE 'Tree 8 from search (criterion: minimize Tree value using character matrix)' = ((12,((((17,5),(16,((27,8),14))),(28,((21,11),(23,((22,(((13,29),((((7,((4,(1,24)),((15,25),9))),20),2),26)),(6,10))),3))))),18)),19);
	TREE 'Tree 9 from search (criterion: minimize Tree value using character matrix)' = (12,(19,((((17,5),(16,((27,8),14))),(28,((21,11),(23,((22,(((13,29),((((7,((4,(1,24)),((15,25),9))),20),2),26)),(6,10))),3))))),18)));

END;


BEGIN TREES;
	Title Trees_from_heuristic_search;
	LINK Taxa = Taxa;
	TRANSLATE
		1 Paranomalurus_walkeri,
		2 Pondaungimys,
		3 Prolapsus,
		4 Shazurus,
		5 Hartenbergeromys,
		6 Glibia,
		7 Nementchamys,
		8 Theridomys,
		9 Paranomalurus_soniae,
		10 Zegdoumys,
		11 Eogliravus,
		12 Cocomys,
		13 Pappocricetodon,
		14 Remys,
		15 Anomalurus,
		16 Protadelomys,
		17 Pantrogna,
		18 Paramys,
		19 Tribosphenomys,
		20 Kebirmys,
		21 Bransatoglis,
		22 Pauromys,
		23 Knightomys,
		24 Paranomalurus_bishopi,
		25 Idiurus,
		26 Glibia_namibiensis,
		27 Elfomys,
		28 Birbalomys,
		29 Sinosminthus;
	TREE 'Tree 1 from search (criterion: minimize Tree value using character matrix)' = (((21,11),(23,((3,((((13,29),(((((4,(1,24)),(9,(25,15))),(7,20)),2),26)),((27,(14,16)),8)),(10,6))),22))),(28,((5,17),(18,(12,19)))));
	TREE 'Tree 2 from search (criterion: minimize Tree value using character matrix)' = ((28,((21,11),(23,((3,((((13,29),(((((4,(1,24)),(9,(25,15))),(7,20)),2),26)),((27,(14,16)),8)),(10,6))),22)))),((5,17),(18,(12,19))));
	TREE 'Tree 3 from search (criterion: minimize Tree value using character matrix)' = (28,(((21,11),(23,((3,((((13,29),(((((4,(1,24)),(9,(25,15))),(7,20)),2),26)),((27,(14,16)),8)),(10,6))),22))),((5,17),(18,(12,19)))));
	TREE 'Tree 4 from search (criterion: minimize Tree value using character matrix)' = (((21,11),(23,((3,((((13,29),(((((4,(1,24)),(9,(25,15))),(7,20)),2),26)),((14,16),(27,8))),(10,6))),22))),(28,((5,17),(18,(12,19)))));
	TREE 'Tree 5 from search (criterion: minimize Tree value using character matrix)' = (((5,17),(28,((21,11),(23,((3,((((13,29),(((((4,(1,24)),(9,(25,15))),(7,20)),2),26)),((27,(14,16)),8)),(10,6))),22))))),(18,(12,19)));
	TREE 'Tree 6 from search (criterion: minimize Tree value using character matrix)' = ((5,17),((28,((21,11),(23,((3,((((13,29),(((((4,(1,24)),(9,(25,15))),(7,20)),2),26)),((27,(14,16)),8)),(10,6))),22)))),(18,(12,19))));
	TREE 'Tree 7 from search (criterion: minimize Tree value using character matrix)' = ((28,((21,11),(23,((3,((((13,29),(((((4,(1,24)),(9,(25,15))),(7,20)),2),26)),((14,16),(27,8))),(10,6))),22)))),((5,17),(18,(12,19))));
	TREE 'Tree 8 from search (criterion: minimize Tree value using character matrix)' = (28,(((21,11),(23,((3,((((13,29),(((((4,(1,24)),(9,(25,15))),(7,20)),2),26)),((14,16),(27,8))),(10,6))),22))),((5,17),(18,(12,19)))));
	TREE 'Tree 9 from search (criterion: minimize Tree value using character matrix)' = ((18,((5,17),(28,((21,11),(23,((3,((((13,29),(((((4,(1,24)),(9,(25,15))),(7,20)),2),26)),((27,(14,16)),8)),(10,6))),22)))))),(12,19));
	TREE 'Tree 10 from search (criterion: minimize Tree value using character matrix)' = (18,(((5,17),(28,((21,11),(23,((3,((((13,29),(((((4,(1,24)),(9,(25,15))),(7,20)),2),26)),((27,(14,16)),8)),(10,6))),22))))),(12,19)));
	TREE 'Tree 11 from search (criterion: minimize Tree value using character matrix)' = (((5,17),(28,((21,11),(23,((3,((((13,29),(((((4,(1,24)),(9,(25,15))),(7,20)),2),26)),((14,16),(27,8))),(10,6))),22))))),(18,(12,19)));
	TREE 'Tree 12 from search (criterion: minimize Tree value using character matrix)' = ((17,((28,((21,11),(23,((3,((((13,29),(((((4,(1,24)),(9,(25,15))),(7,20)),2),26)),((27,(14,16)),8)),(10,6))),22)))),(18,(12,19)))),5);
	TREE 'Tree 13 from search (criterion: minimize Tree value using character matrix)' = (17,(5,((28,((21,11),(23,((3,((((13,29),(((((4,(1,24)),(9,(25,15))),(7,20)),2),26)),((27,(14,16)),8)),(10,6))),22)))),(18,(12,19)))));
	TREE 'Tree 14 from search (criterion: minimize Tree value using character matrix)' = ((5,17),((28,((21,11),(23,((3,((((13,29),(((((4,(1,24)),(9,(25,15))),(7,20)),2),26)),((14,16),(27,8))),(10,6))),22)))),(18,(12,19))));
	TREE 'Tree 15 from search (criterion: minimize Tree value using character matrix)' = ((12,(18,((5,17),(28,((21,11),(23,((3,((((13,29),(((((4,(1,24)),(9,(25,15))),(7,20)),2),26)),((27,(14,16)),8)),(10,6))),22))))))),19);
	TREE 'Tree 16 from search (criterion: minimize Tree value using character matrix)' = (12,((18,((5,17),(28,((21,11),(23,((3,((((13,29),(((((4,(1,24)),(9,(25,15))),(7,20)),2),26)),((27,(14,16)),8)),(10,6))),22)))))),19));
	TREE 'Tree 17 from search (criterion: minimize Tree value using character matrix)' = ((18,((5,17),(28,((21,11),(23,((3,((((13,29),(((((4,(1,24)),(9,(25,15))),(7,20)),2),26)),((14,16),(27,8))),(10,6))),22)))))),(12,19));
	TREE 'Tree 18 from search (criterion: minimize Tree value using character matrix)' = (18,(((5,17),(28,((21,11),(23,((3,((((13,29),(((((4,(1,24)),(9,(25,15))),(7,20)),2),26)),((14,16),(27,8))),(10,6))),22))))),(12,19)));
	TREE 'Tree 19 from search (criterion: minimize Tree value using character matrix)' = ((17,((28,((21,11),(23,((3,((((13,29),(((((4,(1,24)),(9,(25,15))),(7,20)),2),26)),((14,16),(27,8))),(10,6))),22)))),(18,(12,19)))),5);
	TREE 'Tree 20 from search (criterion: minimize Tree value using character matrix)' = (17,(5,((28,((21,11),(23,((3,((((13,29),(((((4,(1,24)),(9,(25,15))),(7,20)),2),26)),((14,16),(27,8))),(10,6))),22)))),(18,(12,19)))));
	TREE 'Tree 21 from search (criterion: minimize Tree value using character matrix)' = ((12,(18,((5,17),(28,((21,11),(23,((3,((((13,29),(((((4,(1,24)),(9,(25,15))),(7,20)),2),26)),((14,16),(27,8))),(10,6))),22))))))),19);
	TREE 'Tree 22 from search (criterion: minimize Tree value using character matrix)' = (12,((18,((5,17),(28,((21,11),(23,((3,((((13,29),(((((4,(1,24)),(9,(25,15))),(7,20)),2),26)),((14,16),(27,8))),(10,6))),22)))))),19));

END;


BEGIN TREES;
	Title Trees_from_heuristic_search;
	LINK Taxa = Taxa;
	TRANSLATE
		1 Paranomalurus_walkeri,
		2 Pondaungimys,
		3 Prolapsus,
		4 Shazurus,
		5 Hartenbergeromys,
		6 Glibia,
		7 Nementchamys,
		8 Theridomys,
		9 Paranomalurus_soniae,
		10 Zegdoumys,
		11 Eogliravus,
		12 Cocomys,
		13 Pappocricetodon,
		14 Remys,
		15 Anomalurus,
		16 Protadelomys,
		17 Pantrogna,
		18 Paramys,
		19 Tribosphenomys,
		20 Kebirmys,
		21 Bransatoglis,
		22 Pauromys,
		23 Knightomys,
		24 Paranomalurus_bishopi,
		25 Idiurus,
		26 Glibia_namibiensis,
		27 Elfomys,
		28 Birbalomys,
		29 Sinosminthus;
	TREE 'Tree 1 from search (criterion: minimize Tree value using character matrix)' = ((28,((17,5),((19,12),18))),(((22,(3,((10,6),(((8,27),(16,14)),((29,13),(26,(2,((((15,25),9),((24,1),4)),(7,20))))))))),23),(21,11)));
	TREE 'Tree 2 from search (criterion: minimize Tree value using character matrix)' = ((((17,5),((19,12),18)),(((22,(3,((10,6),(((8,27),(16,14)),((29,13),(26,(2,((((15,25),9),((24,1),4)),(7,20))))))))),23),(21,11))),28);
	TREE 'Tree 3 from search (criterion: minimize Tree value using character matrix)' = (((17,5),((19,12),18)),(28,(((22,(3,((10,6),(((8,27),(16,14)),((29,13),(26,(2,((((15,25),9),((24,1),4)),(7,20))))))))),23),(21,11))));
	TREE 'Tree 4 from search (criterion: minimize Tree value using character matrix)' = ((28,((17,5),((19,12),18))),(((22,(3,((10,6),(((27,(16,14)),8),((29,13),(26,(2,((((15,25),9),((24,1),4)),(7,20))))))))),23),(21,11)));
	TREE 'Tree 5 from search (criterion: minimize Tree value using character matrix)' = ((((17,5),((19,12),18)),(((22,(3,((10,6),(((27,(16,14)),8),((29,13),(26,(2,((((15,25),9),((24,1),4)),(7,20))))))))),23),(21,11))),28);
	TREE 'Tree 6 from search (criterion: minimize Tree value using character matrix)' = ((((19,12),18),(28,(((22,(3,((10,6),(((8,27),(16,14)),((29,13),(26,(2,((((15,25),9),((24,1),4)),(7,20))))))))),23),(21,11)))),(17,5));
	TREE 'Tree 7 from search (criterion: minimize Tree value using character matrix)' = (((19,12),18),((17,5),(28,(((22,(3,((10,6),(((8,27),(16,14)),((29,13),(26,(2,((((15,25),9),((24,1),4)),(7,20))))))))),23),(21,11)))));
	TREE 'Tree 8 from search (criterion: minimize Tree value using character matrix)' = (((17,5),((19,12),18)),(28,(((22,(3,((10,6),(((27,(16,14)),8),((29,13),(26,(2,((((15,25),9),((24,1),4)),(7,20))))))))),23),(21,11))));
	TREE 'Tree 9 from search (criterion: minimize Tree value using character matrix)' = ((17,(((19,12),18),(28,(((22,(3,((10,6),(((8,27),(16,14)),((29,13),(26,(2,((((15,25),9),((24,1),4)),(7,20))))))))),23),(21,11))))),5);
	TREE 'Tree 10 from search (criterion: minimize Tree value using character matrix)' = (17,((((19,12),18),(28,(((22,(3,((10,6),(((8,27),(16,14)),((29,13),(26,(2,((((15,25),9),((24,1),4)),(7,20))))))))),23),(21,11)))),5));
	TREE 'Tree 11 from search (criterion: minimize Tree value using character matrix)' = ((((19,12),18),(28,(((22,(3,((10,6),(((27,(16,14)),8),((29,13),(26,(2,((((15,25),9),((24,1),4)),(7,20))))))))),23),(21,11)))),(17,5));
	TREE 'Tree 12 from search (criterion: minimize Tree value using character matrix)' = ((18,((17,5),(28,(((22,(3,((10,6),(((8,27),(16,14)),((29,13),(26,(2,((((15,25),9),((24,1),4)),(7,20))))))))),23),(21,11))))),(19,12));
	TREE 'Tree 13 from search (criterion: minimize Tree value using character matrix)' = (18,((19,12),((17,5),(28,(((22,(3,((10,6),(((8,27),(16,14)),((29,13),(26,(2,((((15,25),9),((24,1),4)),(7,20))))))))),23),(21,11))))));
	TREE 'Tree 14 from search (criterion: minimize Tree value using character matrix)' = (((19,12),18),((17,5),(28,(((22,(3,((10,6),(((27,(16,14)),8),((29,13),(26,(2,((((15,25),9),((24,1),4)),(7,20))))))))),23),(21,11)))));
	TREE 'Tree 15 from search (criterion: minimize Tree value using character matrix)' = ((17,(((19,12),18),(28,(((22,(3,((10,6),(((27,(16,14)),8),((29,13),(26,(2,((((15,25),9),((24,1),4)),(7,20))))))))),23),(21,11))))),5);
	TREE 'Tree 16 from search (criterion: minimize Tree value using character matrix)' = (17,((((19,12),18),(28,(((22,(3,((10,6),(((27,(16,14)),8),((29,13),(26,(2,((((15,25),9),((24,1),4)),(7,20))))))))),23),(21,11)))),5));
	TREE 'Tree 17 from search (criterion: minimize Tree value using character matrix)' = ((19,(18,((17,5),(28,(((22,(3,((10,6),(((8,27),(16,14)),((29,13),(26,(2,((((15,25),9),((24,1),4)),(7,20))))))))),23),(21,11)))))),12);
	TREE 'Tree 18 from search (criterion: minimize Tree value using character matrix)' = (19,((18,((17,5),(28,(((22,(3,((10,6),(((8,27),(16,14)),((29,13),(26,(2,((((15,25),9),((24,1),4)),(7,20))))))))),23),(21,11))))),12));
	TREE 'Tree 19 from search (criterion: minimize Tree value using character matrix)' = ((18,((17,5),(28,(((22,(3,((10,6),(((27,(16,14)),8),((29,13),(26,(2,((((15,25),9),((24,1),4)),(7,20))))))))),23),(21,11))))),(19,12));
	TREE 'Tree 20 from search (criterion: minimize Tree value using character matrix)' = (18,((19,12),((17,5),(28,(((22,(3,((10,6),(((27,(16,14)),8),((29,13),(26,(2,((((15,25),9),((24,1),4)),(7,20))))))))),23),(21,11))))));
	TREE 'Tree 21 from search (criterion: minimize Tree value using character matrix)' = ((19,(18,((17,5),(28,(((22,(3,((10,6),(((27,(16,14)),8),((29,13),(26,(2,((((15,25),9),((24,1),4)),(7,20))))))))),23),(21,11)))))),12);
	TREE 'Tree 22 from search (criterion: minimize Tree value using character matrix)' = (19,((18,((17,5),(28,(((22,(3,((10,6),(((27,(16,14)),8),((29,13),(26,(2,((((15,25),9),((24,1),4)),(7,20))))))))),23),(21,11))))),12));

END;


BEGIN TREES;
	Title Trees_from_heuristic_search;
	LINK Taxa = Taxa;
	TRANSLATE
		1 Paranomalurus_walkeri,
		2 Pondaungimys,
		3 Prolapsus,
		4 Shazurus,
		5 Hartenbergeromys,
		6 Glibia,
		7 Nementchamys,
		8 Theridomys,
		9 Paranomalurus_soniae,
		10 Zegdoumys,
		11 Eogliravus,
		12 Cocomys,
		13 Pappocricetodon,
		14 Remys,
		15 Anomalurus,
		16 Protadelomys,
		17 Pantrogna,
		18 Paramys,
		19 Tribosphenomys,
		20 Kebirmys,
		21 Bransatoglis,
		22 Pauromys,
		23 Knightomys,
		24 Paranomalurus_bishopi,
		25 Idiurus,
		26 Glibia_namibiensis,
		27 Elfomys,
		28 Birbalomys,
		29 Sinosminthus;
	TREE 'Tree 1 from search (criterion: minimize Tree value using character matrix)' = ((((((22,(((26,(2,(20,(7,((9,(15,25)),((1,24),4)))))),(13,29)),(10,6))),3),23),(11,21)),((((14,(27,8)),16),(5,17)),(18,(12,19)))),28);
	TREE 'Tree 2 from search (criterion: minimize Tree value using character matrix)' = ((((((14,(27,8)),16),(5,17)),(18,(12,19))),28),((((22,(((26,(2,(20,(7,((9,(15,25)),((1,24),4)))))),(13,29)),(10,6))),3),23),(11,21)));
	TREE 'Tree 3 from search (criterion: minimize Tree value using character matrix)' = (((((14,(27,8)),16),(5,17)),(18,(12,19))),(((((22,(((26,(2,(20,(7,((9,(15,25)),((1,24),4)))))),(13,29)),(10,6))),3),23),(11,21)),28));
	TREE 'Tree 4 from search (criterion: minimize Tree value using character matrix)' = (((18,(12,19)),(((((22,(((26,(2,(20,(7,((9,(15,25)),((1,24),4)))))),(13,29)),(10,6))),3),23),(11,21)),28)),(((14,(27,8)),16),(5,17)));
	TREE 'Tree 5 from search (criterion: minimize Tree value using character matrix)' = ((18,(12,19)),((((14,(27,8)),16),(5,17)),(((((22,(((26,(2,(20,(7,((9,(15,25)),((1,24),4)))))),(13,29)),(10,6))),3),23),(11,21)),28)));
	TREE 'Tree 6 from search (criterion: minimize Tree value using character matrix)' = (((12,19),((((14,(27,8)),16),(5,17)),(((((22,(((26,(2,(20,(7,((9,(15,25)),((1,24),4)))))),(13,29)),(10,6))),3),23),(11,21)),28))),18);
	TREE 'Tree 7 from search (criterion: minimize Tree value using character matrix)' = ((12,19),(18,((((14,(27,8)),16),(5,17)),(((((22,(((26,(2,(20,(7,((9,(15,25)),((1,24),4)))))),(13,29)),(10,6))),3),23),(11,21)),28))));
	TREE 'Tree 8 from search (criterion: minimize Tree value using character matrix)' = ((19,(18,((((14,(27,8)),16),(5,17)),(((((22,(((26,(2,(20,(7,((9,(15,25)),((1,24),4)))))),(13,29)),(10,6))),3),23),(11,21)),28)))),12);
	TREE 'Tree 9 from search (criterion: minimize Tree value using character matrix)' = (19,(12,(18,((((14,(27,8)),16),(5,17)),(((((22,(((26,(2,(20,(7,((9,(15,25)),((1,24),4)))))),(13,29)),(10,6))),3),23),(11,21)),28)))));

END;


BEGIN TREES;
	Title Trees_from_heuristic_search;
	LINK Taxa = Taxa;
	TRANSLATE
		1 Paranomalurus_walkeri,
		2 Pondaungimys,
		3 Prolapsus,
		4 Shazurus,
		5 Hartenbergeromys,
		6 Glibia,
		7 Nementchamys,
		8 Theridomys,
		9 Paranomalurus_soniae,
		10 Zegdoumys,
		11 Eogliravus,
		12 Cocomys,
		13 Pappocricetodon,
		14 Remys,
		15 Anomalurus,
		16 Protadelomys,
		17 Pantrogna,
		18 Paramys,
		19 Tribosphenomys,
		20 Kebirmys,
		21 Bransatoglis,
		22 Pauromys,
		23 Knightomys,
		24 Paranomalurus_bishopi,
		25 Idiurus,
		26 Glibia_namibiensis,
		27 Elfomys,
		28 Birbalomys,
		29 Sinosminthus;
	TREE 'Tree 1 from search (criterion: minimize Tree value using character matrix)' = (((16,(14,(8,27))),(17,5)),((28,((((((10,6),((13,29),(26,(2,(20,(7,((9,(25,15)),((24,1),4)))))))),22),3),23),(21,11))),((19,12),18)));
	TREE 'Tree 2 from search (criterion: minimize Tree value using character matrix)' = (((28,((((((10,6),((13,29),(26,(2,(20,(7,((9,(25,15)),((24,1),4)))))))),22),3),23),(21,11))),((16,(14,(8,27))),(17,5))),((19,12),18));
	TREE 'Tree 3 from search (criterion: minimize Tree value using character matrix)' = ((28,((((((10,6),((13,29),(26,(2,(20,(7,((9,(25,15)),((24,1),4)))))))),22),3),23),(21,11))),(((16,(14,(8,27))),(17,5)),((19,12),18)));
	TREE 'Tree 4 from search (criterion: minimize Tree value using character matrix)' = (((19,12),((28,((((((10,6),((13,29),(26,(2,(20,(7,((9,(25,15)),((24,1),4)))))))),22),3),23),(21,11))),((16,(14,(8,27))),(17,5)))),18);
	TREE 'Tree 5 from search (criterion: minimize Tree value using character matrix)' = ((19,12),(((28,((((((10,6),((13,29),(26,(2,(20,(7,((9,(25,15)),((24,1),4)))))))),22),3),23),(21,11))),((16,(14,(8,27))),(17,5))),18));
	TREE 'Tree 6 from search (criterion: minimize Tree value using character matrix)' = ((((((((10,6),((13,29),(26,(2,(20,(7,((9,(25,15)),((24,1),4)))))))),22),3),23),(21,11)),(((16,(14,(8,27))),(17,5)),((19,12),18))),28);
	TREE 'Tree 7 from search (criterion: minimize Tree value using character matrix)' = (((((((10,6),((13,29),(26,(2,(20,(7,((9,(25,15)),((24,1),4)))))))),22),3),23),(21,11)),(28,(((16,(14,(8,27))),(17,5)),((19,12),18))));
	TREE 'Tree 8 from search (criterion: minimize Tree value using character matrix)' = ((12,(((28,((((((10,6),((13,29),(26,(2,(20,(7,((9,(25,15)),((24,1),4)))))))),22),3),23),(21,11))),((16,(14,(8,27))),(17,5))),18)),19);
	TREE 'Tree 9 from search (criterion: minimize Tree value using character matrix)' = (12,(19,(((28,((((((10,6),((13,29),(26,(2,(20,(7,((9,(25,15)),((24,1),4)))))))),22),3),23),(21,11))),((16,(14,(8,27))),(17,5))),18)));

END;


BEGIN TREES;
	Title Trees_from_heuristic_search;
	LINK Taxa = Taxa;
	TRANSLATE
		1 Paranomalurus_walkeri,
		2 Pondaungimys,
		3 Prolapsus,
		4 Shazurus,
		5 Hartenbergeromys,
		6 Glibia,
		7 Nementchamys,
		8 Theridomys,
		9 Paranomalurus_soniae,
		10 Zegdoumys,
		11 Eogliravus,
		12 Cocomys,
		13 Pappocricetodon,
		14 Remys,
		15 Anomalurus,
		16 Protadelomys,
		17 Pantrogna,
		18 Paramys,
		19 Tribosphenomys,
		20 Kebirmys,
		21 Bransatoglis,
		22 Pauromys,
		23 Knightomys,
		24 Paranomalurus_bishopi,
		25 Idiurus,
		26 Glibia_namibiensis,
		27 Elfomys,
		28 Birbalomys,
		29 Sinosminthus;
	TREE 'Tree 1 from search (criterion: minimize Tree value using character matrix)' = (((5,17),(16,((8,27),14))),((28,((23,((22,((6,10),((29,13),(26,(2,(20,(7,((4,(1,24)),((25,15),9))))))))),3)),(21,11))),(18,(12,19))));
	TREE 'Tree 2 from search (criterion: minimize Tree value using character matrix)' = (((28,((23,((22,((6,10),((29,13),(26,(2,(20,(7,((4,(1,24)),((25,15),9))))))))),3)),(21,11))),((5,17),(16,((8,27),14)))),(18,(12,19)));
	TREE 'Tree 3 from search (criterion: minimize Tree value using character matrix)' = ((28,((23,((22,((6,10),((29,13),(26,(2,(20,(7,((4,(1,24)),((25,15),9))))))))),3)),(21,11))),(((5,17),(16,((8,27),14))),(18,(12,19))));
	TREE 'Tree 4 from search (criterion: minimize Tree value using character matrix)' = ((18,((28,((23,((22,((6,10),((29,13),(26,(2,(20,(7,((4,(1,24)),((25,15),9))))))))),3)),(21,11))),((5,17),(16,((8,27),14))))),(12,19));
	TREE 'Tree 5 from search (criterion: minimize Tree value using character matrix)' = (18,(((28,((23,((22,((6,10),((29,13),(26,(2,(20,(7,((4,(1,24)),((25,15),9))))))))),3)),(21,11))),((5,17),(16,((8,27),14)))),(12,19)));
	TREE 'Tree 6 from search (criterion: minimize Tree value using character matrix)' = ((((23,((22,((6,10),((29,13),(26,(2,(20,(7,((4,(1,24)),((25,15),9))))))))),3)),(21,11)),(((5,17),(16,((8,27),14))),(18,(12,19)))),28);
	TREE 'Tree 7 from search (criterion: minimize Tree value using character matrix)' = (((23,((22,((6,10),((29,13),(26,(2,(20,(7,((4,(1,24)),((25,15),9))))))))),3)),(21,11)),(28,(((5,17),(16,((8,27),14))),(18,(12,19)))));
	TREE 'Tree 8 from search (criterion: minimize Tree value using character matrix)' = ((12,(18,((28,((23,((22,((6,10),((29,13),(26,(2,(20,(7,((4,(1,24)),((25,15),9))))))))),3)),(21,11))),((5,17),(16,((8,27),14)))))),19);
	TREE 'Tree 9 from search (criterion: minimize Tree value using character matrix)' = (12,((18,((28,((23,((22,((6,10),((29,13),(26,(2,(20,(7,((4,(1,24)),((25,15),9))))))))),3)),(21,11))),((5,17),(16,((8,27),14))))),19));

END;


BEGIN TREES;
	Title Trees_from_heuristic_search;
	LINK Taxa = Taxa;
	TRANSLATE
		1 Paranomalurus_walkeri,
		2 Pondaungimys,
		3 Prolapsus,
		4 Shazurus,
		5 Hartenbergeromys,
		6 Glibia,
		7 Nementchamys,
		8 Theridomys,
		9 Paranomalurus_soniae,
		10 Zegdoumys,
		11 Eogliravus,
		12 Cocomys,
		13 Pappocricetodon,
		14 Remys,
		15 Anomalurus,
		16 Protadelomys,
		17 Pantrogna,
		18 Paramys,
		19 Tribosphenomys,
		20 Kebirmys,
		21 Bransatoglis,
		22 Pauromys,
		23 Knightomys,
		24 Paranomalurus_bishopi,
		25 Idiurus,
		26 Glibia_namibiensis,
		27 Elfomys,
		28 Birbalomys,
		29 Sinosminthus;
	TREE 'Tree 1 from search (criterion: minimize Tree value using character matrix)' = (((21,11),(23,(22,(((((13,29),((((((15,25),9),(4,(24,1))),(20,7)),2),26)),((8,27),(16,14))),(6,10)),3)))),(28,((5,17),(18,(12,19)))));
	TREE 'Tree 2 from search (criterion: minimize Tree value using character matrix)' = ((28,((21,11),(23,(22,(((((13,29),((((((15,25),9),(4,(24,1))),(20,7)),2),26)),((8,27),(16,14))),(6,10)),3))))),((5,17),(18,(12,19))));
	TREE 'Tree 3 from search (criterion: minimize Tree value using character matrix)' = (28,(((21,11),(23,(22,(((((13,29),((((((15,25),9),(4,(24,1))),(20,7)),2),26)),((8,27),(16,14))),(6,10)),3)))),((5,17),(18,(12,19)))));
	TREE 'Tree 4 from search (criterion: minimize Tree value using character matrix)' = (((21,11),(23,(22,(((((13,29),((((((15,25),9),(4,(24,1))),(20,7)),2),26)),(8,(27,(16,14)))),(6,10)),3)))),(28,((5,17),(18,(12,19)))));
	TREE 'Tree 5 from search (criterion: minimize Tree value using character matrix)' = (((5,17),(28,((21,11),(23,(22,(((((13,29),((((((15,25),9),(4,(24,1))),(20,7)),2),26)),((8,27),(16,14))),(6,10)),3)))))),(18,(12,19)));
	TREE 'Tree 6 from search (criterion: minimize Tree value using character matrix)' = ((5,17),((28,((21,11),(23,(22,(((((13,29),((((((15,25),9),(4,(24,1))),(20,7)),2),26)),((8,27),(16,14))),(6,10)),3))))),(18,(12,19))));
	TREE 'Tree 7 from search (criterion: minimize Tree value using character matrix)' = ((28,((21,11),(23,(22,(((((13,29),((((((15,25),9),(4,(24,1))),(20,7)),2),26)),(8,(27,(16,14)))),(6,10)),3))))),((5,17),(18,(12,19))));
	TREE 'Tree 8 from search (criterion: minimize Tree value using character matrix)' = (28,(((21,11),(23,(22,(((((13,29),((((((15,25),9),(4,(24,1))),(20,7)),2),26)),(8,(27,(16,14)))),(6,10)),3)))),((5,17),(18,(12,19)))));
	TREE 'Tree 9 from search (criterion: minimize Tree value using character matrix)' = ((18,((5,17),(28,((21,11),(23,(22,(((((13,29),((((((15,25),9),(4,(24,1))),(20,7)),2),26)),((8,27),(16,14))),(6,10)),3))))))),(12,19));
	TREE 'Tree 10 from search (criterion: minimize Tree value using character matrix)' = (18,(((5,17),(28,((21,11),(23,(22,(((((13,29),((((((15,25),9),(4,(24,1))),(20,7)),2),26)),((8,27),(16,14))),(6,10)),3)))))),(12,19)));
	TREE 'Tree 11 from search (criterion: minimize Tree value using character matrix)' = (((5,17),(28,((21,11),(23,(22,(((((13,29),((((((15,25),9),(4,(24,1))),(20,7)),2),26)),(8,(27,(16,14)))),(6,10)),3)))))),(18,(12,19)));
	TREE 'Tree 12 from search (criterion: minimize Tree value using character matrix)' = ((17,((28,((21,11),(23,(22,(((((13,29),((((((15,25),9),(4,(24,1))),(20,7)),2),26)),((8,27),(16,14))),(6,10)),3))))),(18,(12,19)))),5);
	TREE 'Tree 13 from search (criterion: minimize Tree value using character matrix)' = (17,(5,((28,((21,11),(23,(22,(((((13,29),((((((15,25),9),(4,(24,1))),(20,7)),2),26)),((8,27),(16,14))),(6,10)),3))))),(18,(12,19)))));
	TREE 'Tree 14 from search (criterion: minimize Tree value using character matrix)' = ((5,17),((28,((21,11),(23,(22,(((((13,29),((((((15,25),9),(4,(24,1))),(20,7)),2),26)),(8,(27,(16,14)))),(6,10)),3))))),(18,(12,19))));
	TREE 'Tree 15 from search (criterion: minimize Tree value using character matrix)' = ((12,(18,((5,17),(28,((21,11),(23,(22,(((((13,29),((((((15,25),9),(4,(24,1))),(20,7)),2),26)),((8,27),(16,14))),(6,10)),3)))))))),19);
	TREE 'Tree 16 from search (criterion: minimize Tree value using character matrix)' = (12,((18,((5,17),(28,((21,11),(23,(22,(((((13,29),((((((15,25),9),(4,(24,1))),(20,7)),2),26)),((8,27),(16,14))),(6,10)),3))))))),19));
	TREE 'Tree 17 from search (criterion: minimize Tree value using character matrix)' = ((18,((5,17),(28,((21,11),(23,(22,(((((13,29),((((((15,25),9),(4,(24,1))),(20,7)),2),26)),(8,(27,(16,14)))),(6,10)),3))))))),(12,19));
	TREE 'Tree 18 from search (criterion: minimize Tree value using character matrix)' = (18,(((5,17),(28,((21,11),(23,(22,(((((13,29),((((((15,25),9),(4,(24,1))),(20,7)),2),26)),(8,(27,(16,14)))),(6,10)),3)))))),(12,19)));
	TREE 'Tree 19 from search (criterion: minimize Tree value using character matrix)' = ((17,((28,((21,11),(23,(22,(((((13,29),((((((15,25),9),(4,(24,1))),(20,7)),2),26)),(8,(27,(16,14)))),(6,10)),3))))),(18,(12,19)))),5);
	TREE 'Tree 20 from search (criterion: minimize Tree value using character matrix)' = (17,(5,((28,((21,11),(23,(22,(((((13,29),((((((15,25),9),(4,(24,1))),(20,7)),2),26)),(8,(27,(16,14)))),(6,10)),3))))),(18,(12,19)))));
	TREE 'Tree 21 from search (criterion: minimize Tree value using character matrix)' = ((12,(18,((5,17),(28,((21,11),(23,(22,(((((13,29),((((((15,25),9),(4,(24,1))),(20,7)),2),26)),(8,(27,(16,14)))),(6,10)),3)))))))),19);
	TREE 'Tree 22 from search (criterion: minimize Tree value using character matrix)' = (12,((18,((5,17),(28,((21,11),(23,(22,(((((13,29),((((((15,25),9),(4,(24,1))),(20,7)),2),26)),(8,(27,(16,14)))),(6,10)),3))))))),19));

END;


BEGIN TREES;
	Title Trees_from_heuristic_search;
	LINK Taxa = Taxa;
	TRANSLATE
		1 Paranomalurus_walkeri,
		2 Pondaungimys,
		3 Prolapsus,
		4 Shazurus,
		5 Hartenbergeromys,
		6 Glibia,
		7 Nementchamys,
		8 Theridomys,
		9 Paranomalurus_soniae,
		10 Zegdoumys,
		11 Eogliravus,
		12 Cocomys,
		13 Pappocricetodon,
		14 Remys,
		15 Anomalurus,
		16 Protadelomys,
		17 Pantrogna,
		18 Paramys,
		19 Tribosphenomys,
		20 Kebirmys,
		21 Bransatoglis,
		22 Pauromys,
		23 Knightomys,
		24 Paranomalurus_bishopi,
		25 Idiurus,
		26 Glibia_namibiensis,
		27 Elfomys,
		28 Birbalomys,
		29 Sinosminthus;
	TREE 'Tree 1 from search (criterion: minimize Tree value using character matrix)' = (((11,21),((22,(3,((10,6),(((26,(((((1,24),4),(9,(15,25))),(20,7)),2)),(13,29)),((14,16),(27,8)))))),23)),(((17,5),(18,(12,19))),28));
	TREE 'Tree 2 from search (criterion: minimize Tree value using character matrix)' = ((((17,5),(18,(12,19))),((11,21),((22,(3,((10,6),(((26,(((((1,24),4),(9,(15,25))),(20,7)),2)),(13,29)),((14,16),(27,8)))))),23))),28);
	TREE 'Tree 3 from search (criterion: minimize Tree value using character matrix)' = (((17,5),(18,(12,19))),(((11,21),((22,(3,((10,6),(((26,(((((1,24),4),(9,(15,25))),(20,7)),2)),(13,29)),((14,16),(27,8)))))),23)),28));
	TREE 'Tree 4 from search (criterion: minimize Tree value using character matrix)' = (((11,21),((22,(3,((10,6),(((26,(((((1,24),4),(9,(15,25))),(20,7)),2)),(13,29)),((27,(14,16)),8))))),23)),(((17,5),(18,(12,19))),28));
	TREE 'Tree 5 from search (criterion: minimize Tree value using character matrix)' = ((((17,5),(18,(12,19))),((11,21),((22,(3,((10,6),(((26,(((((1,24),4),(9,(15,25))),(20,7)),2)),(13,29)),((27,(14,16)),8))))),23))),28);
	TREE 'Tree 6 from search (criterion: minimize Tree value using character matrix)' = (((18,(12,19)),(((11,21),((22,(3,((10,6),(((26,(((((1,24),4),(9,(15,25))),(20,7)),2)),(13,29)),((14,16),(27,8)))))),23)),28)),(17,5));
	TREE 'Tree 7 from search (criterion: minimize Tree value using character matrix)' = ((18,(12,19)),((17,5),(((11,21),((22,(3,((10,6),(((26,(((((1,24),4),(9,(15,25))),(20,7)),2)),(13,29)),((14,16),(27,8)))))),23)),28)));
	TREE 'Tree 8 from search (criterion: minimize Tree value using character matrix)' = (((17,5),(18,(12,19))),(((11,21),((22,(3,((10,6),(((26,(((((1,24),4),(9,(15,25))),(20,7)),2)),(13,29)),((27,(14,16)),8))))),23)),28));
	TREE 'Tree 9 from search (criterion: minimize Tree value using character matrix)' = ((17,((18,(12,19)),(((11,21),((22,(3,((10,6),(((26,(((((1,24),4),(9,(15,25))),(20,7)),2)),(13,29)),((14,16),(27,8)))))),23)),28))),5);
	TREE 'Tree 10 from search (criterion: minimize Tree value using character matrix)' = (17,(((18,(12,19)),(((11,21),((22,(3,((10,6),(((26,(((((1,24),4),(9,(15,25))),(20,7)),2)),(13,29)),((14,16),(27,8)))))),23)),28)),5));
	TREE 'Tree 11 from search (criterion: minimize Tree value using character matrix)' = (((18,(12,19)),(((11,21),((22,(3,((10,6),(((26,(((((1,24),4),(9,(15,25))),(20,7)),2)),(13,29)),((27,(14,16)),8))))),23)),28)),(17,5));
	TREE 'Tree 12 from search (criterion: minimize Tree value using character matrix)' = (((12,19),((17,5),(((11,21),((22,(3,((10,6),(((26,(((((1,24),4),(9,(15,25))),(20,7)),2)),(13,29)),((14,16),(27,8)))))),23)),28))),18);
	TREE 'Tree 13 from search (criterion: minimize Tree value using character matrix)' = ((12,19),(18,((17,5),(((11,21),((22,(3,((10,6),(((26,(((((1,24),4),(9,(15,25))),(20,7)),2)),(13,29)),((14,16),(27,8)))))),23)),28))));
	TREE 'Tree 14 from search (criterion: minimize Tree value using character matrix)' = ((18,(12,19)),((17,5),(((11,21),((22,(3,((10,6),(((26,(((((1,24),4),(9,(15,25))),(20,7)),2)),(13,29)),((27,(14,16)),8))))),23)),28)));
	TREE 'Tree 15 from search (criterion: minimize Tree value using character matrix)' = ((17,((18,(12,19)),(((11,21),((22,(3,((10,6),(((26,(((((1,24),4),(9,(15,25))),(20,7)),2)),(13,29)),((27,(14,16)),8))))),23)),28))),5);
	TREE 'Tree 16 from search (criterion: minimize Tree value using character matrix)' = (17,(((18,(12,19)),(((11,21),((22,(3,((10,6),(((26,(((((1,24),4),(9,(15,25))),(20,7)),2)),(13,29)),((27,(14,16)),8))))),23)),28)),5));
	TREE 'Tree 17 from search (criterion: minimize Tree value using character matrix)' = (((12,19),((17,5),(((11,21),((22,(3,((10,6),(((26,(((((1,24),4),(9,(15,25))),(20,7)),2)),(13,29)),((27,(14,16)),8))))),23)),28))),18);
	TREE 'Tree 18 from search (criterion: minimize Tree value using character matrix)' = ((19,(18,((17,5),(((11,21),((22,(3,((10,6),(((26,(((((1,24),4),(9,(15,25))),(20,7)),2)),(13,29)),((14,16),(27,8)))))),23)),28)))),12);
	TREE 'Tree 19 from search (criterion: minimize Tree value using character matrix)' = (19,(12,(18,((17,5),(((11,21),((22,(3,((10,6),(((26,(((((1,24),4),(9,(15,25))),(20,7)),2)),(13,29)),((14,16),(27,8)))))),23)),28)))));
	TREE 'Tree 20 from search (criterion: minimize Tree value using character matrix)' = ((12,19),(18,((17,5),(((11,21),((22,(3,((10,6),(((26,(((((1,24),4),(9,(15,25))),(20,7)),2)),(13,29)),((27,(14,16)),8))))),23)),28))));
	TREE 'Tree 21 from search (criterion: minimize Tree value using character matrix)' = ((19,(18,((17,5),(((11,21),((22,(3,((10,6),(((26,(((((1,24),4),(9,(15,25))),(20,7)),2)),(13,29)),((27,(14,16)),8))))),23)),28)))),12);
	TREE 'Tree 22 from search (criterion: minimize Tree value using character matrix)' = (19,(12,(18,((17,5),(((11,21),((22,(3,((10,6),(((26,(((((1,24),4),(9,(15,25))),(20,7)),2)),(13,29)),((27,(14,16)),8))))),23)),28)))));

END;


BEGIN TREES;
	Title Trees_from_heuristic_search;
	LINK Taxa = Taxa;
	TRANSLATE
		1 Paranomalurus_walkeri,
		2 Pondaungimys,
		3 Prolapsus,
		4 Shazurus,
		5 Hartenbergeromys,
		6 Glibia,
		7 Nementchamys,
		8 Theridomys,
		9 Paranomalurus_soniae,
		10 Zegdoumys,
		11 Eogliravus,
		12 Cocomys,
		13 Pappocricetodon,
		14 Remys,
		15 Anomalurus,
		16 Protadelomys,
		17 Pantrogna,
		18 Paramys,
		19 Tribosphenomys,
		20 Kebirmys,
		21 Bransatoglis,
		22 Pauromys,
		23 Knightomys,
		24 Paranomalurus_bishopi,
		25 Idiurus,
		26 Glibia_namibiensis,
		27 Elfomys,
		28 Birbalomys,
		29 Sinosminthus;
	TREE 'Tree 1 from search (criterion: minimize Tree value using character matrix)' = (((11,21),(23,((((10,6),((29,13),(26,(2,(20,(7,((4,(1,24)),((25,15),9)))))))),22),3))),((((5,17),(16,(14,(8,27)))),(18,(12,19))),28));
	TREE 'Tree 2 from search (criterion: minimize Tree value using character matrix)' = (((((5,17),(16,(14,(8,27)))),(18,(12,19))),((11,21),(23,((((10,6),((29,13),(26,(2,(20,(7,((4,(1,24)),((25,15),9)))))))),22),3)))),28);
	TREE 'Tree 3 from search (criterion: minimize Tree value using character matrix)' = ((((5,17),(16,(14,(8,27)))),(18,(12,19))),(((11,21),(23,((((10,6),((29,13),(26,(2,(20,(7,((4,(1,24)),((25,15),9)))))))),22),3))),28));
	TREE 'Tree 4 from search (criterion: minimize Tree value using character matrix)' = (((18,(12,19)),(((11,21),(23,((((10,6),((29,13),(26,(2,(20,(7,((4,(1,24)),((25,15),9)))))))),22),3))),28)),((5,17),(16,(14,(8,27)))));
	TREE 'Tree 5 from search (criterion: minimize Tree value using character matrix)' = ((18,(12,19)),(((5,17),(16,(14,(8,27)))),(((11,21),(23,((((10,6),((29,13),(26,(2,(20,(7,((4,(1,24)),((25,15),9)))))))),22),3))),28)));
	TREE 'Tree 6 from search (criterion: minimize Tree value using character matrix)' = (((12,19),(((5,17),(16,(14,(8,27)))),(((11,21),(23,((((10,6),((29,13),(26,(2,(20,(7,((4,(1,24)),((25,15),9)))))))),22),3))),28))),18);
	TREE 'Tree 7 from search (criterion: minimize Tree value using character matrix)' = ((12,19),(18,(((5,17),(16,(14,(8,27)))),(((11,21),(23,((((10,6),((29,13),(26,(2,(20,(7,((4,(1,24)),((25,15),9)))))))),22),3))),28))));
	TREE 'Tree 8 from search (criterion: minimize Tree value using character matrix)' = ((19,(18,(((5,17),(16,(14,(8,27)))),(((11,21),(23,((((10,6),((29,13),(26,(2,(20,(7,((4,(1,24)),((25,15),9)))))))),22),3))),28)))),12);
	TREE 'Tree 9 from search (criterion: minimize Tree value using character matrix)' = (19,(12,(18,(((5,17),(16,(14,(8,27)))),(((11,21),(23,((((10,6),((29,13),(26,(2,(20,(7,((4,(1,24)),((25,15),9)))))))),22),3))),28)))));

END;


BEGIN TREES;
	Title Trees_from_heuristic_search;
	LINK Taxa = Taxa;
	TRANSLATE
		1 Paranomalurus_walkeri,
		2 Pondaungimys,
		3 Prolapsus,
		4 Shazurus,
		5 Hartenbergeromys,
		6 Glibia,
		7 Nementchamys,
		8 Theridomys,
		9 Paranomalurus_soniae,
		10 Zegdoumys,
		11 Eogliravus,
		12 Cocomys,
		13 Pappocricetodon,
		14 Remys,
		15 Anomalurus,
		16 Protadelomys,
		17 Pantrogna,
		18 Paramys,
		19 Tribosphenomys,
		20 Kebirmys,
		21 Bransatoglis,
		22 Pauromys,
		23 Knightomys,
		24 Paranomalurus_bishopi,
		25 Idiurus,
		26 Glibia_namibiensis,
		27 Elfomys,
		28 Birbalomys,
		29 Sinosminthus;
	TREE 'Tree 1 from search (criterion: minimize Tree value using character matrix)' = ((12,(18,(((5,17),(16,((8,27),14))),(28,((21,11),(23,(3,(22,((10,6),((13,29),((((((9,(25,15)),((1,24),4)),7),20),2),26))))))))))),19);
	TREE 'Tree 2 from search (criterion: minimize Tree value using character matrix)' = (((18,(((5,17),(16,((8,27),14))),(28,((21,11),(23,(3,(22,((10,6),((13,29),((((((9,(25,15)),((1,24),4)),7),20),2),26)))))))))),19),12);
	TREE 'Tree 3 from search (criterion: minimize Tree value using character matrix)' = ((18,(((5,17),(16,((8,27),14))),(28,((21,11),(23,(3,(22,((10,6),((13,29),((((((9,(25,15)),((1,24),4)),7),20),2),26)))))))))),(12,19));
	TREE 'Tree 4 from search (criterion: minimize Tree value using character matrix)' = (((((5,17),(16,((8,27),14))),(28,((21,11),(23,(3,(22,((10,6),((13,29),((((((9,(25,15)),((1,24),4)),7),20),2),26))))))))),(12,19)),18);
	TREE 'Tree 5 from search (criterion: minimize Tree value using character matrix)' = ((((5,17),(16,((8,27),14))),(28,((21,11),(23,(3,(22,((10,6),((13,29),((((((9,(25,15)),((1,24),4)),7),20),2),26))))))))),(18,(12,19)));
	TREE 'Tree 6 from search (criterion: minimize Tree value using character matrix)' = (((28,((21,11),(23,(3,(22,((10,6),((13,29),((((((9,(25,15)),((1,24),4)),7),20),2),26)))))))),(18,(12,19))),((5,17),(16,((8,27),14))));
	TREE 'Tree 7 from search (criterion: minimize Tree value using character matrix)' = ((28,((21,11),(23,(3,(22,((10,6),((13,29),((((((9,(25,15)),((1,24),4)),7),20),2),26)))))))),(((5,17),(16,((8,27),14))),(18,(12,19))));
	TREE 'Tree 8 from search (criterion: minimize Tree value using character matrix)' = ((((21,11),(23,(3,(22,((10,6),((13,29),((((((9,(25,15)),((1,24),4)),7),20),2),26))))))),(((5,17),(16,((8,27),14))),(18,(12,19)))),28);
	TREE 'Tree 9 from search (criterion: minimize Tree value using character matrix)' = (((21,11),(23,(3,(22,((10,6),((13,29),((((((9,(25,15)),((1,24),4)),7),20),2),26))))))),(28,(((5,17),(16,((8,27),14))),(18,(12,19)))));

END;


BEGIN TREES;
	Title Trees_from_heuristic_search;
	LINK Taxa = Taxa;
	TRANSLATE
		1 Paranomalurus_walkeri,
		2 Pondaungimys,
		3 Prolapsus,
		4 Shazurus,
		5 Hartenbergeromys,
		6 Glibia,
		7 Nementchamys,
		8 Theridomys,
		9 Paranomalurus_soniae,
		10 Zegdoumys,
		11 Eogliravus,
		12 Cocomys,
		13 Pappocricetodon,
		14 Remys,
		15 Anomalurus,
		16 Protadelomys,
		17 Pantrogna,
		18 Paramys,
		19 Tribosphenomys,
		20 Kebirmys,
		21 Bransatoglis,
		22 Pauromys,
		23 Knightomys,
		24 Paranomalurus_bishopi,
		25 Idiurus,
		26 Glibia_namibiensis,
		27 Elfomys,
		28 Birbalomys,
		29 Sinosminthus;
	TREE 'Tree 1 from search (criterion: minimize Tree value using character matrix)' = (((28,(17,5)),((12,19),18)),((((23,(((((((20,7),((4,(1,24)),(9,(25,15)))),2),26),(29,13)),((27,8),(14,16))),(6,10))),3),22),(21,11)));
	TREE 'Tree 2 from search (criterion: minimize Tree value using character matrix)' = ((((12,19),18),((((23,(((((((20,7),((4,(1,24)),(9,(25,15)))),2),26),(29,13)),((27,8),(14,16))),(6,10))),3),22),(21,11))),(28,(17,5)));
	TREE 'Tree 3 from search (criterion: minimize Tree value using character matrix)' = (((12,19),18),((28,(17,5)),((((23,(((((((20,7),((4,(1,24)),(9,(25,15)))),2),26),(29,13)),((27,8),(14,16))),(6,10))),3),22),(21,11))));
	TREE 'Tree 4 from search (criterion: minimize Tree value using character matrix)' = (((28,(17,5)),((12,19),18)),(((3,22),(23,(((((((20,7),((4,(1,24)),(9,(25,15)))),2),26),(29,13)),((27,8),(14,16))),(6,10)))),(21,11)));
	TREE 'Tree 5 from search (criterion: minimize Tree value using character matrix)' = ((28,(((12,19),18),((((23,(((((((20,7),((4,(1,24)),(9,(25,15)))),2),26),(29,13)),((27,8),(14,16))),(6,10))),3),22),(21,11)))),(17,5));
	TREE 'Tree 6 from search (criterion: minimize Tree value using character matrix)' = (28,((((12,19),18),((((23,(((((((20,7),((4,(1,24)),(9,(25,15)))),2),26),(29,13)),((27,8),(14,16))),(6,10))),3),22),(21,11))),(17,5)));
	TREE 'Tree 7 from search (criterion: minimize Tree value using character matrix)' = ((((12,19),18),(((3,22),(23,(((((((20,7),((4,(1,24)),(9,(25,15)))),2),26),(29,13)),((27,8),(14,16))),(6,10)))),(21,11))),(28,(17,5)));
	TREE 'Tree 8 from search (criterion: minimize Tree value using character matrix)' = ((18,((28,(17,5)),((((23,(((((((20,7),((4,(1,24)),(9,(25,15)))),2),26),(29,13)),((27,8),(14,16))),(6,10))),3),22),(21,11)))),(12,19));
	TREE 'Tree 9 from search (criterion: minimize Tree value using character matrix)' = (18,((12,19),((28,(17,5)),((((23,(((((((20,7),((4,(1,24)),(9,(25,15)))),2),26),(29,13)),((27,8),(14,16))),(6,10))),3),22),(21,11)))));
	TREE 'Tree 10 from search (criterion: minimize Tree value using character matrix)' = (((12,19),18),((28,(17,5)),(((3,22),(23,(((((((20,7),((4,(1,24)),(9,(25,15)))),2),26),(29,13)),((27,8),(14,16))),(6,10)))),(21,11))));
	TREE 'Tree 11 from search (criterion: minimize Tree value using character matrix)' = ((17,(28,(((12,19),18),((((23,(((((((20,7),((4,(1,24)),(9,(25,15)))),2),26),(29,13)),((27,8),(14,16))),(6,10))),3),22),(21,11))))),5);
	TREE 'Tree 12 from search (criterion: minimize Tree value using character matrix)' = (17,((28,(((12,19),18),((((23,(((((((20,7),((4,(1,24)),(9,(25,15)))),2),26),(29,13)),((27,8),(14,16))),(6,10))),3),22),(21,11)))),5));
	TREE 'Tree 13 from search (criterion: minimize Tree value using character matrix)' = ((28,(((12,19),18),(((3,22),(23,(((((((20,7),((4,(1,24)),(9,(25,15)))),2),26),(29,13)),((27,8),(14,16))),(6,10)))),(21,11)))),(17,5));
	TREE 'Tree 14 from search (criterion: minimize Tree value using character matrix)' = (28,((((12,19),18),(((3,22),(23,(((((((20,7),((4,(1,24)),(9,(25,15)))),2),26),(29,13)),((27,8),(14,16))),(6,10)))),(21,11))),(17,5)));
	TREE 'Tree 15 from search (criterion: minimize Tree value using character matrix)' = ((12,(18,((28,(17,5)),((((23,(((((((20,7),((4,(1,24)),(9,(25,15)))),2),26),(29,13)),((27,8),(14,16))),(6,10))),3),22),(21,11))))),19);
	TREE 'Tree 16 from search (criterion: minimize Tree value using character matrix)' = (12,((18,((28,(17,5)),((((23,(((((((20,7),((4,(1,24)),(9,(25,15)))),2),26),(29,13)),((27,8),(14,16))),(6,10))),3),22),(21,11)))),19));
	TREE 'Tree 17 from search (criterion: minimize Tree value using character matrix)' = ((18,((28,(17,5)),(((3,22),(23,(((((((20,7),((4,(1,24)),(9,(25,15)))),2),26),(29,13)),((27,8),(14,16))),(6,10)))),(21,11)))),(12,19));
	TREE 'Tree 18 from search (criterion: minimize Tree value using character matrix)' = (18,((12,19),((28,(17,5)),(((3,22),(23,(((((((20,7),((4,(1,24)),(9,(25,15)))),2),26),(29,13)),((27,8),(14,16))),(6,10)))),(21,11)))));
	TREE 'Tree 19 from search (criterion: minimize Tree value using character matrix)' = ((17,(28,(((12,19),18),(((3,22),(23,(((((((20,7),((4,(1,24)),(9,(25,15)))),2),26),(29,13)),((27,8),(14,16))),(6,10)))),(21,11))))),5);
	TREE 'Tree 20 from search (criterion: minimize Tree value using character matrix)' = (17,((28,(((12,19),18),(((3,22),(23,(((((((20,7),((4,(1,24)),(9,(25,15)))),2),26),(29,13)),((27,8),(14,16))),(6,10)))),(21,11)))),5));
	TREE 'Tree 21 from search (criterion: minimize Tree value using character matrix)' = ((12,(18,((28,(17,5)),(((3,22),(23,(((((((20,7),((4,(1,24)),(9,(25,15)))),2),26),(29,13)),((27,8),(14,16))),(6,10)))),(21,11))))),19);
	TREE 'Tree 22 from search (criterion: minimize Tree value using character matrix)' = (12,((18,((28,(17,5)),(((3,22),(23,(((((((20,7),((4,(1,24)),(9,(25,15)))),2),26),(29,13)),((27,8),(14,16))),(6,10)))),(21,11)))),19));

END;


BEGIN TREES;
	Title Trees_from_heuristic_search;
	LINK Taxa = Taxa;
	TRANSLATE
		1 Paranomalurus_walkeri,
		2 Pondaungimys,
		3 Prolapsus,
		4 Shazurus,
		5 Hartenbergeromys,
		6 Glibia,
		7 Nementchamys,
		8 Theridomys,
		9 Paranomalurus_soniae,
		10 Zegdoumys,
		11 Eogliravus,
		12 Cocomys,
		13 Pappocricetodon,
		14 Remys,
		15 Anomalurus,
		16 Protadelomys,
		17 Pantrogna,
		18 Paramys,
		19 Tribosphenomys,
		20 Kebirmys,
		21 Bransatoglis,
		22 Pauromys,
		23 Knightomys,
		24 Paranomalurus_bishopi,
		25 Idiurus,
		26 Glibia_namibiensis,
		27 Elfomys,
		28 Birbalomys,
		29 Sinosminthus;
	TREE 'Tree 1 from search (criterion: minimize Tree value using character matrix)' = ((12,(((28,((23,((((((27,8),(16,14)),((29,13),(26,(2,(((4,(1,24)),(9,(25,15))),(7,20)))))),(10,6)),3),22)),(11,21))),(5,17)),18)),19);
	TREE 'Tree 2 from search (criterion: minimize Tree value using character matrix)' = (((((28,((23,((((((27,8),(16,14)),((29,13),(26,(2,(((4,(1,24)),(9,(25,15))),(7,20)))))),(10,6)),3),22)),(11,21))),(5,17)),18),19),12);
	TREE 'Tree 3 from search (criterion: minimize Tree value using character matrix)' = ((((28,((23,((((((27,8),(16,14)),((29,13),(26,(2,(((4,(1,24)),(9,(25,15))),(7,20)))))),(10,6)),3),22)),(11,21))),(5,17)),18),(12,19));
	TREE 'Tree 4 from search (criterion: minimize Tree value using character matrix)' = ((12,(((28,((23,(((((8,(27,(16,14))),((29,13),(26,(2,(((4,(1,24)),(9,(25,15))),(7,20)))))),(10,6)),3),22)),(11,21))),(5,17)),18)),19);
	TREE 'Tree 5 from search (criterion: minimize Tree value using character matrix)' = (((((28,((23,(((((8,(27,(16,14))),((29,13),(26,(2,(((4,(1,24)),(9,(25,15))),(7,20)))))),(10,6)),3),22)),(11,21))),(5,17)),18),19),12);
	TREE 'Tree 6 from search (criterion: minimize Tree value using character matrix)' = ((18,(12,19)),((28,((23,((((((27,8),(16,14)),((29,13),(26,(2,(((4,(1,24)),(9,(25,15))),(7,20)))))),(10,6)),3),22)),(11,21))),(5,17)));
	TREE 'Tree 7 from search (criterion: minimize Tree value using character matrix)' = (18,(((28,((23,((((((27,8),(16,14)),((29,13),(26,(2,(((4,(1,24)),(9,(25,15))),(7,20)))))),(10,6)),3),22)),(11,21))),(5,17)),(12,19)));
	TREE 'Tree 8 from search (criterion: minimize Tree value using character matrix)' = ((((28,((23,(((((8,(27,(16,14))),((29,13),(26,(2,(((4,(1,24)),(9,(25,15))),(7,20)))))),(10,6)),3),22)),(11,21))),(5,17)),18),(12,19));
	TREE 'Tree 9 from search (criterion: minimize Tree value using character matrix)' = (((28,((23,((((((27,8),(16,14)),((29,13),(26,(2,(((4,(1,24)),(9,(25,15))),(7,20)))))),(10,6)),3),22)),(11,21))),(18,(12,19))),(5,17));
	TREE 'Tree 10 from search (criterion: minimize Tree value using character matrix)' = ((28,((23,((((((27,8),(16,14)),((29,13),(26,(2,(((4,(1,24)),(9,(25,15))),(7,20)))))),(10,6)),3),22)),(11,21))),((18,(12,19)),(5,17)));
	TREE 'Tree 11 from search (criterion: minimize Tree value using character matrix)' = ((18,(12,19)),((28,((23,(((((8,(27,(16,14))),((29,13),(26,(2,(((4,(1,24)),(9,(25,15))),(7,20)))))),(10,6)),3),22)),(11,21))),(5,17)));
	TREE 'Tree 12 from search (criterion: minimize Tree value using character matrix)' = (18,(((28,((23,(((((8,(27,(16,14))),((29,13),(26,(2,(((4,(1,24)),(9,(25,15))),(7,20)))))),(10,6)),3),22)),(11,21))),(5,17)),(12,19)));
	TREE 'Tree 13 from search (criterion: minimize Tree value using character matrix)' = ((5,((28,((23,((((((27,8),(16,14)),((29,13),(26,(2,(((4,(1,24)),(9,(25,15))),(7,20)))))),(10,6)),3),22)),(11,21))),(18,(12,19)))),17);
	TREE 'Tree 14 from search (criterion: minimize Tree value using character matrix)' = (5,(((28,((23,((((((27,8),(16,14)),((29,13),(26,(2,(((4,(1,24)),(9,(25,15))),(7,20)))))),(10,6)),3),22)),(11,21))),(18,(12,19))),17));
	TREE 'Tree 15 from search (criterion: minimize Tree value using character matrix)' = (((28,((23,(((((8,(27,(16,14))),((29,13),(26,(2,(((4,(1,24)),(9,(25,15))),(7,20)))))),(10,6)),3),22)),(11,21))),(18,(12,19))),(5,17));
	TREE 'Tree 16 from search (criterion: minimize Tree value using character matrix)' = ((((23,((((((27,8),(16,14)),((29,13),(26,(2,(((4,(1,24)),(9,(25,15))),(7,20)))))),(10,6)),3),22)),(11,21)),((18,(12,19)),(5,17))),28);
	TREE 'Tree 17 from search (criterion: minimize Tree value using character matrix)' = (((23,((((((27,8),(16,14)),((29,13),(26,(2,(((4,(1,24)),(9,(25,15))),(7,20)))))),(10,6)),3),22)),(11,21)),(28,((18,(12,19)),(5,17))));
	TREE 'Tree 18 from search (criterion: minimize Tree value using character matrix)' = ((28,((23,(((((8,(27,(16,14))),((29,13),(26,(2,(((4,(1,24)),(9,(25,15))),(7,20)))))),(10,6)),3),22)),(11,21))),((18,(12,19)),(5,17)));
	TREE 'Tree 19 from search (criterion: minimize Tree value using character matrix)' = ((5,((28,((23,(((((8,(27,(16,14))),((29,13),(26,(2,(((4,(1,24)),(9,(25,15))),(7,20)))))),(10,6)),3),22)),(11,21))),(18,(12,19)))),17);
	TREE 'Tree 20 from search (criterion: minimize Tree value using character matrix)' = (5,(((28,((23,(((((8,(27,(16,14))),((29,13),(26,(2,(((4,(1,24)),(9,(25,15))),(7,20)))))),(10,6)),3),22)),(11,21))),(18,(12,19))),17));
	TREE 'Tree 21 from search (criterion: minimize Tree value using character matrix)' = ((((23,(((((8,(27,(16,14))),((29,13),(26,(2,(((4,(1,24)),(9,(25,15))),(7,20)))))),(10,6)),3),22)),(11,21)),((18,(12,19)),(5,17))),28);
	TREE 'Tree 22 from search (criterion: minimize Tree value using character matrix)' = (((23,(((((8,(27,(16,14))),((29,13),(26,(2,(((4,(1,24)),(9,(25,15))),(7,20)))))),(10,6)),3),22)),(11,21)),(28,((18,(12,19)),(5,17))));

END;


BEGIN TREES;
	Title Trees_from_heuristic_search;
	LINK Taxa = Taxa;
	TRANSLATE
		1 Paranomalurus_walkeri,
		2 Pondaungimys,
		3 Prolapsus,
		4 Shazurus,
		5 Hartenbergeromys,
		6 Glibia,
		7 Nementchamys,
		8 Theridomys,
		9 Paranomalurus_soniae,
		10 Zegdoumys,
		11 Eogliravus,
		12 Cocomys,
		13 Pappocricetodon,
		14 Remys,
		15 Anomalurus,
		16 Protadelomys,
		17 Pantrogna,
		18 Paramys,
		19 Tribosphenomys,
		20 Kebirmys,
		21 Bransatoglis,
		22 Pauromys,
		23 Knightomys,
		24 Paranomalurus_bishopi,
		25 Idiurus,
		26 Glibia_namibiensis,
		27 Elfomys,
		28 Birbalomys,
		29 Sinosminthus;
	TREE 'Tree 1 from search (criterion: minimize Tree value using character matrix)' = (((28,(17,5)),(((23,(((((((7,20),(((25,15),9),((24,1),4))),2),26),(13,29)),((27,8),(16,14))),(6,10))),(3,22)),(11,21))),((19,12),18));
	TREE 'Tree 2 from search (criterion: minimize Tree value using character matrix)' = (((19,12),((28,(17,5)),(((23,(((((((7,20),(((25,15),9),((24,1),4))),2),26),(13,29)),((27,8),(16,14))),(6,10))),(3,22)),(11,21)))),18);
	TREE 'Tree 3 from search (criterion: minimize Tree value using character matrix)' = ((19,12),(((28,(17,5)),(((23,(((((((7,20),(((25,15),9),((24,1),4))),2),26),(13,29)),((27,8),(16,14))),(6,10))),(3,22)),(11,21))),18));
	TREE 'Tree 4 from search (criterion: minimize Tree value using character matrix)' = (((((23,(((((((7,20),(((25,15),9),((24,1),4))),2),26),(13,29)),((27,8),(16,14))),(6,10))),(3,22)),(11,21)),((19,12),18)),(28,(17,5)));
	TREE 'Tree 5 from search (criterion: minimize Tree value using character matrix)' = ((((23,(((((((7,20),(((25,15),9),((24,1),4))),2),26),(13,29)),((27,8),(16,14))),(6,10))),(3,22)),(11,21)),((28,(17,5)),((19,12),18)));
	TREE 'Tree 6 from search (criterion: minimize Tree value using character matrix)' = (((28,(17,5)),(((3,(23,(((((((7,20),(((25,15),9),((24,1),4))),2),26),(13,29)),((27,8),(16,14))),(6,10)))),22),(11,21))),((19,12),18));
	TREE 'Tree 7 from search (criterion: minimize Tree value using character matrix)' = (((19,12),((28,(17,5)),(((3,(23,(((((((7,20),(((25,15),9),((24,1),4))),2),26),(13,29)),((27,8),(16,14))),(6,10)))),22),(11,21)))),18);
	TREE 'Tree 8 from search (criterion: minimize Tree value using character matrix)' = ((12,(((28,(17,5)),(((23,(((((((7,20),(((25,15),9),((24,1),4))),2),26),(13,29)),((27,8),(16,14))),(6,10))),(3,22)),(11,21))),18)),19);
	TREE 'Tree 9 from search (criterion: minimize Tree value using character matrix)' = (12,(19,(((28,(17,5)),(((23,(((((((7,20),(((25,15),9),((24,1),4))),2),26),(13,29)),((27,8),(16,14))),(6,10))),(3,22)),(11,21))),18)));
	TREE 'Tree 10 from search (criterion: minimize Tree value using character matrix)' = ((19,12),(((28,(17,5)),(((3,(23,(((((((7,20),(((25,15),9),((24,1),4))),2),26),(13,29)),((27,8),(16,14))),(6,10)))),22),(11,21))),18));
	TREE 'Tree 11 from search (criterion: minimize Tree value using character matrix)' = ((28,((((23,(((((((7,20),(((25,15),9),((24,1),4))),2),26),(13,29)),((27,8),(16,14))),(6,10))),(3,22)),(11,21)),((19,12),18))),(17,5));
	TREE 'Tree 12 from search (criterion: minimize Tree value using character matrix)' = (28,(((((23,(((((((7,20),(((25,15),9),((24,1),4))),2),26),(13,29)),((27,8),(16,14))),(6,10))),(3,22)),(11,21)),((19,12),18)),(17,5)));
	TREE 'Tree 13 from search (criterion: minimize Tree value using character matrix)' = (((((3,(23,(((((((7,20),(((25,15),9),((24,1),4))),2),26),(13,29)),((27,8),(16,14))),(6,10)))),22),(11,21)),((19,12),18)),(28,(17,5)));
	TREE 'Tree 14 from search (criterion: minimize Tree value using character matrix)' = ((((3,(23,(((((((7,20),(((25,15),9),((24,1),4))),2),26),(13,29)),((27,8),(16,14))),(6,10)))),22),(11,21)),((28,(17,5)),((19,12),18)));
	TREE 'Tree 15 from search (criterion: minimize Tree value using character matrix)' = ((12,(((28,(17,5)),(((3,(23,(((((((7,20),(((25,15),9),((24,1),4))),2),26),(13,29)),((27,8),(16,14))),(6,10)))),22),(11,21))),18)),19);
	TREE 'Tree 16 from search (criterion: minimize Tree value using character matrix)' = (12,(19,(((28,(17,5)),(((3,(23,(((((((7,20),(((25,15),9),((24,1),4))),2),26),(13,29)),((27,8),(16,14))),(6,10)))),22),(11,21))),18)));
	TREE 'Tree 17 from search (criterion: minimize Tree value using character matrix)' = ((17,(28,((((23,(((((((7,20),(((25,15),9),((24,1),4))),2),26),(13,29)),((27,8),(16,14))),(6,10))),(3,22)),(11,21)),((19,12),18)))),5);
	TREE 'Tree 18 from search (criterion: minimize Tree value using character matrix)' = (17,((28,((((23,(((((((7,20),(((25,15),9),((24,1),4))),2),26),(13,29)),((27,8),(16,14))),(6,10))),(3,22)),(11,21)),((19,12),18))),5));
	TREE 'Tree 19 from search (criterion: minimize Tree value using character matrix)' = ((28,((((3,(23,(((((((7,20),(((25,15),9),((24,1),4))),2),26),(13,29)),((27,8),(16,14))),(6,10)))),22),(11,21)),((19,12),18))),(17,5));
	TREE 'Tree 20 from search (criterion: minimize Tree value using character matrix)' = (28,(((((3,(23,(((((((7,20),(((25,15),9),((24,1),4))),2),26),(13,29)),((27,8),(16,14))),(6,10)))),22),(11,21)),((19,12),18)),(17,5)));
	TREE 'Tree 21 from search (criterion: minimize Tree value using character matrix)' = ((17,(28,((((3,(23,(((((((7,20),(((25,15),9),((24,1),4))),2),26),(13,29)),((27,8),(16,14))),(6,10)))),22),(11,21)),((19,12),18)))),5);
	TREE 'Tree 22 from search (criterion: minimize Tree value using character matrix)' = (17,((28,((((3,(23,(((((((7,20),(((25,15),9),((24,1),4))),2),26),(13,29)),((27,8),(16,14))),(6,10)))),22),(11,21)),((19,12),18))),5));

END;


BEGIN TREES;
	Title Trees_from_heuristic_search;
	LINK Taxa = Taxa;
	TRANSLATE
		1 Paranomalurus_walkeri,
		2 Pondaungimys,
		3 Prolapsus,
		4 Shazurus,
		5 Hartenbergeromys,
		6 Glibia,
		7 Nementchamys,
		8 Theridomys,
		9 Paranomalurus_soniae,
		10 Zegdoumys,
		11 Eogliravus,
		12 Cocomys,
		13 Pappocricetodon,
		14 Remys,
		15 Anomalurus,
		16 Protadelomys,
		17 Pantrogna,
		18 Paramys,
		19 Tribosphenomys,
		20 Kebirmys,
		21 Bransatoglis,
		22 Pauromys,
		23 Knightomys,
		24 Paranomalurus_bishopi,
		25 Idiurus,
		26 Glibia_namibiensis,
		27 Elfomys,
		28 Birbalomys,
		29 Sinosminthus;
	TREE 'Tree 1 from search (criterion: minimize Tree value using character matrix)' = (((((3,((((((((((25,15),9),((1,24),4)),7),20),2),26),(29,13)),(10,6)),22)),23),(21,11)),(((12,19),18),((16,(14,(27,8))),(17,5)))),28);
	TREE 'Tree 2 from search (criterion: minimize Tree value using character matrix)' = (((((12,19),18),((16,(14,(27,8))),(17,5))),28),(((3,((((((((((25,15),9),((1,24),4)),7),20),2),26),(29,13)),(10,6)),22)),23),(21,11)));
	TREE 'Tree 3 from search (criterion: minimize Tree value using character matrix)' = ((((12,19),18),((16,(14,(27,8))),(17,5))),((((3,((((((((((25,15),9),((1,24),4)),7),20),2),26),(29,13)),(10,6)),22)),23),(21,11)),28));
	TREE 'Tree 4 from search (criterion: minimize Tree value using character matrix)' = ((((16,(14,(27,8))),(17,5)),((((3,((((((((((25,15),9),((1,24),4)),7),20),2),26),(29,13)),(10,6)),22)),23),(21,11)),28)),((12,19),18));
	TREE 'Tree 5 from search (criterion: minimize Tree value using character matrix)' = (((16,(14,(27,8))),(17,5)),(((12,19),18),((((3,((((((((((25,15),9),((1,24),4)),7),20),2),26),(29,13)),(10,6)),22)),23),(21,11)),28)));
	TREE 'Tree 6 from search (criterion: minimize Tree value using character matrix)' = (((12,19),(((16,(14,(27,8))),(17,5)),((((3,((((((((((25,15),9),((1,24),4)),7),20),2),26),(29,13)),(10,6)),22)),23),(21,11)),28))),18);
	TREE 'Tree 7 from search (criterion: minimize Tree value using character matrix)' = ((12,19),((((16,(14,(27,8))),(17,5)),((((3,((((((((((25,15),9),((1,24),4)),7),20),2),26),(29,13)),(10,6)),22)),23),(21,11)),28)),18));
	TREE 'Tree 8 from search (criterion: minimize Tree value using character matrix)' = ((19,((((16,(14,(27,8))),(17,5)),((((3,((((((((((25,15),9),((1,24),4)),7),20),2),26),(29,13)),(10,6)),22)),23),(21,11)),28)),18)),12);
	TREE 'Tree 9 from search (criterion: minimize Tree value using character matrix)' = (19,(12,((((16,(14,(27,8))),(17,5)),((((3,((((((((((25,15),9),((1,24),4)),7),20),2),26),(29,13)),(10,6)),22)),23),(21,11)),28)),18)));

END;


BEGIN TREES;
	Title Filter_Trees_from_Other_Source;
	LINK Taxa = Taxa;
	TRANSLATE
		1 Paranomalurus_walkeri,
		2 Pondaungimys,
		3 Prolapsus,
		4 Shazurus,
		5 Hartenbergeromys,
		6 Glibia,
		7 Nementchamys,
		8 Theridomys,
		9 Paranomalurus_soniae,
		10 Zegdoumys,
		11 Eogliravus,
		12 Cocomys,
		13 Pappocricetodon,
		14 Remys,
		15 Anomalurus,
		16 Protadelomys,
		17 Pantrogna,
		18 Paramys,
		19 Tribosphenomys,
		20 Kebirmys,
		21 Bransatoglis,
		22 Pauromys,
		23 Knightomys,
		24 Paranomalurus_bishopi,
		25 Idiurus,
		26 Glibia_namibiensis,
		27 Elfomys,
		28 Birbalomys,
		29 Sinosminthus;
	TREE 'Tree 1 from search (criterion: minimize Tree value using character matrix)' = (((((14,(8,27)),16),(17,5)),(28,((23,(3,(22,(((13,29),(((20,((((15,25),9),((1,24),4)),7)),2),26)),(10,6))))),(11,21)))),((19,12),18));
	TREE 'Tree 2 from search (criterion: minimize Tree value using character matrix)' = (((19,12),((((14,(8,27)),16),(17,5)),(28,((23,(3,(22,(((13,29),(((20,((((15,25),9),((1,24),4)),7)),2),26)),(10,6))))),(11,21))))),18);
	TREE 'Tree 3 from search (criterion: minimize Tree value using character matrix)' = ((19,12),(((((14,(8,27)),16),(17,5)),(28,((23,(3,(22,(((13,29),(((20,((((15,25),9),((1,24),4)),7)),2),26)),(10,6))))),(11,21)))),18));
	TREE 'Tree 4 from search (criterion: minimize Tree value using character matrix)' = (((28,((23,(3,(22,(((13,29),(((20,((((15,25),9),((1,24),4)),7)),2),26)),(10,6))))),(11,21))),((19,12),18)),(((14,(8,27)),16),(17,5)));
	TREE 'Tree 5 from search (criterion: minimize Tree value using character matrix)' = ((28,((23,(3,(22,(((13,29),(((20,((((15,25),9),((1,24),4)),7)),2),26)),(10,6))))),(11,21))),((((14,(8,27)),16),(17,5)),((19,12),18)));
	TREE 'Tree 6 from search (criterion: minimize Tree value using character matrix)' = ((12,(((((14,(8,27)),16),(17,5)),(28,((23,(3,(22,(((13,29),(((20,((((15,25),9),((1,24),4)),7)),2),26)),(10,6))))),(11,21)))),18)),19);
	TREE 'Tree 7 from search (criterion: minimize Tree value using character matrix)' = (12,(19,(((((14,(8,27)),16),(17,5)),(28,((23,(3,(22,(((13,29),(((20,((((15,25),9),((1,24),4)),7)),2),26)),(10,6))))),(11,21)))),18)));
	TREE 'Tree 8 from search (criterion: minimize Tree value using character matrix)' = ((((23,(3,(22,(((13,29),(((20,((((15,25),9),((1,24),4)),7)),2),26)),(10,6))))),(11,21)),((((14,(8,27)),16),(17,5)),((19,12),18))),28);
	TREE 'Tree 9 from search (criterion: minimize Tree value using character matrix)' = (((23,(3,(22,(((13,29),(((20,((((15,25),9),((1,24),4)),7)),2),26)),(10,6))))),(11,21)),(28,((((14,(8,27)),16),(17,5)),((19,12),18))));
	TREE 'Tree 1 from search (criterion: minimize Tree value using character matrix)' = (((((12,19),18),((((27,8),14),16),(17,5))),((((((((((((9,(15,25)),((24,1),4)),7),20),2),26),(29,13)),(10,6)),22),3),23),(11,21))),28);
	TREE 'Tree 2 from search (criterion: minimize Tree value using character matrix)' = ((((((((((((((9,(15,25)),((24,1),4)),7),20),2),26),(29,13)),(10,6)),22),3),23),(11,21)),28),(((12,19),18),((((27,8),14),16),(17,5))));
	TREE 'Tree 3 from search (criterion: minimize Tree value using character matrix)' = (((((((((((((9,(15,25)),((24,1),4)),7),20),2),26),(29,13)),(10,6)),22),3),23),(11,21)),((((12,19),18),((((27,8),14),16),(17,5))),28));
	TREE 'Tree 4 from search (criterion: minimize Tree value using character matrix)' = ((((12,19),18),(((((((((((((9,(15,25)),((24,1),4)),7),20),2),26),(29,13)),(10,6)),22),3),23),(11,21)),28)),((((27,8),14),16),(17,5)));
	TREE 'Tree 5 from search (criterion: minimize Tree value using character matrix)' = (((12,19),18),((((((((((((((9,(15,25)),((24,1),4)),7),20),2),26),(29,13)),(10,6)),22),3),23),(11,21)),28),((((27,8),14),16),(17,5))));
	TREE 'Tree 6 from search (criterion: minimize Tree value using character matrix)' = ((18,((((((((((((((9,(15,25)),((24,1),4)),7),20),2),26),(29,13)),(10,6)),22),3),23),(11,21)),28),((((27,8),14),16),(17,5)))),(12,19));
	TREE 'Tree 7 from search (criterion: minimize Tree value using character matrix)' = (18,((12,19),((((((((((((((9,(15,25)),((24,1),4)),7),20),2),26),(29,13)),(10,6)),22),3),23),(11,21)),28),((((27,8),14),16),(17,5)))));
	TREE 'Tree 8 from search (criterion: minimize Tree value using character matrix)' = ((12,(18,((((((((((((((9,(15,25)),((24,1),4)),7),20),2),26),(29,13)),(10,6)),22),3),23),(11,21)),28),((((27,8),14),16),(17,5))))),19);
	TREE 'Tree 9 from search (criterion: minimize Tree value using character matrix)' = (12,((18,((((((((((((((9,(15,25)),((24,1),4)),7),20),2),26),(29,13)),(10,6)),22),3),23),(11,21)),28),((((27,8),14),16),(17,5)))),19));
	TREE 'Tree 1 from search (criterion: minimize Tree value using character matrix)' = ((18,(((((3,((((((20,(((4,(1,24)),((25,15),9)),7)),2),26),(29,13)),(10,6)),22)),23),(21,11)),28),((16,(14,(8,27))),(17,5)))),(12,19));
	TREE 'Tree 2 from search (criterion: minimize Tree value using character matrix)' = ((12,(18,(((((3,((((((20,(((4,(1,24)),((25,15),9)),7)),2),26),(29,13)),(10,6)),22)),23),(21,11)),28),((16,(14,(8,27))),(17,5))))),19);
	TREE 'Tree 3 from search (criterion: minimize Tree value using character matrix)' = (12,((18,(((((3,((((((20,(((4,(1,24)),((25,15),9)),7)),2),26),(29,13)),(10,6)),22)),23),(21,11)),28),((16,(14,(8,27))),(17,5)))),19));
	TREE 'Tree 4 from search (criterion: minimize Tree value using character matrix)' = (((((((3,((((((20,(((4,(1,24)),((25,15),9)),7)),2),26),(29,13)),(10,6)),22)),23),(21,11)),28),((16,(14,(8,27))),(17,5))),(12,19)),18);
	TREE 'Tree 5 from search (criterion: minimize Tree value using character matrix)' = ((((((3,((((((20,(((4,(1,24)),((25,15),9)),7)),2),26),(29,13)),(10,6)),22)),23),(21,11)),28),((16,(14,(8,27))),(17,5))),(18,(12,19)));
	TREE 'Tree 6 from search (criterion: minimize Tree value using character matrix)' = ((((16,(14,(8,27))),(17,5)),(18,(12,19))),((((3,((((((20,(((4,(1,24)),((25,15),9)),7)),2),26),(29,13)),(10,6)),22)),23),(21,11)),28));
	TREE 'Tree 7 from search (criterion: minimize Tree value using character matrix)' = (((16,(14,(8,27))),(17,5)),(((((3,((((((20,(((4,(1,24)),((25,15),9)),7)),2),26),(29,13)),(10,6)),22)),23),(21,11)),28),(18,(12,19))));
	TREE 'Tree 8 from search (criterion: minimize Tree value using character matrix)' = (((((3,((((((20,(((4,(1,24)),((25,15),9)),7)),2),26),(29,13)),(10,6)),22)),23),(21,11)),(((16,(14,(8,27))),(17,5)),(18,(12,19)))),28);
	TREE 'Tree 9 from search (criterion: minimize Tree value using character matrix)' = ((((3,((((((20,(((4,(1,24)),((25,15),9)),7)),2),26),(29,13)),(10,6)),22)),23),(21,11)),((((16,(14,(8,27))),(17,5)),(18,(12,19))),28));
	TREE 'Tree 1 from search (criterion: minimize Tree value using character matrix)' = (((((5,17),((14,(27,8)),16)),(28,(((3,(22,((10,6),((13,29),(26,(2,(20,(7,((4,(24,1)),((25,15),9)))))))))),23),(21,11)))),18),(19,12));
	TREE 'Tree 2 from search (criterion: minimize Tree value using character matrix)' = ((19,((((5,17),((14,(27,8)),16)),(28,(((3,(22,((10,6),((13,29),(26,(2,(20,(7,((4,(24,1)),((25,15),9)))))))))),23),(21,11)))),18)),12);
	TREE 'Tree 3 from search (criterion: minimize Tree value using character matrix)' = (19,(((((5,17),((14,(27,8)),16)),(28,(((3,(22,((10,6),((13,29),(26,(2,(20,(7,((4,(24,1)),((25,15),9)))))))))),23),(21,11)))),18),12));
	TREE 'Tree 4 from search (criterion: minimize Tree value using character matrix)' = ((18,(19,12)),(((5,17),((14,(27,8)),16)),(28,(((3,(22,((10,6),((13,29),(26,(2,(20,(7,((4,(24,1)),((25,15),9)))))))))),23),(21,11)))));
	TREE 'Tree 5 from search (criterion: minimize Tree value using character matrix)' = (18,((((5,17),((14,(27,8)),16)),(28,(((3,(22,((10,6),((13,29),(26,(2,(20,(7,((4,(24,1)),((25,15),9)))))))))),23),(21,11)))),(19,12)));
	TREE 'Tree 6 from search (criterion: minimize Tree value using character matrix)' = ((((5,17),((14,(27,8)),16)),(18,(19,12))),(28,(((3,(22,((10,6),((13,29),(26,(2,(20,(7,((4,(24,1)),((25,15),9)))))))))),23),(21,11))));
	TREE 'Tree 7 from search (criterion: minimize Tree value using character matrix)' = (((5,17),((14,(27,8)),16)),((18,(19,12)),(28,(((3,(22,((10,6),((13,29),(26,(2,(20,(7,((4,(24,1)),((25,15),9)))))))))),23),(21,11)))));
	TREE 'Tree 8 from search (criterion: minimize Tree value using character matrix)' = ((28,(((5,17),((14,(27,8)),16)),(18,(19,12)))),(((3,(22,((10,6),((13,29),(26,(2,(20,(7,((4,(24,1)),((25,15),9)))))))))),23),(21,11)));
	TREE 'Tree 9 from search (criterion: minimize Tree value using character matrix)' = (28,((((5,17),((14,(27,8)),16)),(18,(19,12))),(((3,(22,((10,6),((13,29),(26,(2,(20,(7,((4,(24,1)),((25,15),9)))))))))),23),(21,11))));
	TREE 'Tree 1 from search (criterion: minimize Tree value using character matrix)' = (((28,((21,11),(23,(3,(22,((10,6),((13,29),(26,(2,(20,((((1,24),4),(9,(15,25))),7))))))))))),(18,(12,19))),((5,17),((14,(27,8)),16)));
	TREE 'Tree 2 from search (criterion: minimize Tree value using character matrix)' = (((18,(12,19)),((5,17),((14,(27,8)),16))),(28,((21,11),(23,(3,(22,((10,6),((13,29),(26,(2,(20,((((1,24),4),(9,(15,25))),7))))))))))));
	TREE 'Tree 3 from search (criterion: minimize Tree value using character matrix)' = ((18,(12,19)),((28,((21,11),(23,(3,(22,((10,6),((13,29),(26,(2,(20,((((1,24),4),(9,(15,25))),7))))))))))),((5,17),((14,(27,8)),16))));
	TREE 'Tree 4 from search (criterion: minimize Tree value using character matrix)' = ((28,((18,(12,19)),((5,17),((14,(27,8)),16)))),((21,11),(23,(3,(22,((10,6),((13,29),(26,(2,(20,((((1,24),4),(9,(15,25))),7)))))))))));
	TREE 'Tree 5 from search (criterion: minimize Tree value using character matrix)' = (28,(((18,(12,19)),((5,17),((14,(27,8)),16))),((21,11),(23,(3,(22,((10,6),((13,29),(26,(2,(20,((((1,24),4),(9,(15,25))),7))))))))))));
	TREE 'Tree 6 from search (criterion: minimize Tree value using character matrix)' = (((12,19),((28,((21,11),(23,(3,(22,((10,6),((13,29),(26,(2,(20,((((1,24),4),(9,(15,25))),7))))))))))),((5,17),((14,(27,8)),16)))),18);
	TREE 'Tree 7 from search (criterion: minimize Tree value using character matrix)' = ((12,19),(18,((28,((21,11),(23,(3,(22,((10,6),((13,29),(26,(2,(20,((((1,24),4),(9,(15,25))),7))))))))))),((5,17),((14,(27,8)),16)))));
	TREE 'Tree 8 from search (criterion: minimize Tree value using character matrix)' = ((19,(18,((28,((21,11),(23,(3,(22,((10,6),((13,29),(26,(2,(20,((((1,24),4),(9,(15,25))),7))))))))))),((5,17),((14,(27,8)),16))))),12);
	TREE 'Tree 9 from search (criterion: minimize Tree value using character matrix)' = (19,(12,(18,((28,((21,11),(23,(3,(22,((10,6),((13,29),(26,(2,(20,((((1,24),4),(9,(15,25))),7))))))))))),((5,17),((14,(27,8)),16))))));
	TREE 'Tree 1 from search (criterion: minimize Tree value using character matrix)' = (((((16,(14,(27,8))),(17,5)),((19,12),18)),28),((((22,(((13,29),((2,(20,((((25,15),9),((1,24),4)),7))),26)),(6,10))),3),23),(11,21)));
	TREE 'Tree 2 from search (criterion: minimize Tree value using character matrix)' = ((28,((((22,(((13,29),((2,(20,((((25,15),9),((1,24),4)),7))),26)),(6,10))),3),23),(11,21))),(((16,(14,(27,8))),(17,5)),((19,12),18)));
	TREE 'Tree 3 from search (criterion: minimize Tree value using character matrix)' = (28,((((16,(14,(27,8))),(17,5)),((19,12),18)),((((22,(((13,29),((2,(20,((((25,15),9),((1,24),4)),7))),26)),(6,10))),3),23),(11,21))));
	TREE 'Tree 4 from search (criterion: minimize Tree value using character matrix)' = ((((16,(14,(27,8))),(17,5)),(28,((((22,(((13,29),((2,(20,((((25,15),9),((1,24),4)),7))),26)),(6,10))),3),23),(11,21)))),((19,12),18));
	TREE 'Tree 5 from search (criterion: minimize Tree value using character matrix)' = (((16,(14,(27,8))),(17,5)),((28,((((22,(((13,29),((2,(20,((((25,15),9),((1,24),4)),7))),26)),(6,10))),3),23),(11,21))),((19,12),18)));
	TREE 'Tree 6 from search (criterion: minimize Tree value using character matrix)' = (((19,12),(((16,(14,(27,8))),(17,5)),(28,((((22,(((13,29),((2,(20,((((25,15),9),((1,24),4)),7))),26)),(6,10))),3),23),(11,21))))),18);
	TREE 'Tree 7 from search (criterion: minimize Tree value using character matrix)' = ((19,12),((((16,(14,(27,8))),(17,5)),(28,((((22,(((13,29),((2,(20,((((25,15),9),((1,24),4)),7))),26)),(6,10))),3),23),(11,21)))),18));
	TREE 'Tree 8 from search (criterion: minimize Tree value using character matrix)' = ((12,((((16,(14,(27,8))),(17,5)),(28,((((22,(((13,29),((2,(20,((((25,15),9),((1,24),4)),7))),26)),(6,10))),3),23),(11,21)))),18)),19);
	TREE 'Tree 9 from search (criterion: minimize Tree value using character matrix)' = (12,(19,((((16,(14,(27,8))),(17,5)),(28,((((22,(((13,29),((2,(20,((((25,15),9),((1,24),4)),7))),26)),(6,10))),3),23),(11,21)))),18)));
	TREE 'Tree 2 from search (criterion: minimize Tree value using character matrix)' = ((((28,((21,11),(23,(3,(((10,6),((29,13),(26,((20,(((4,(1,24)),((25,15),9)),7)),2)))),22))))),((16,(14,(27,8))),(17,5))),18),(12,19));
	TREE 'Tree 3 from search (criterion: minimize Tree value using character matrix)' = (((28,((21,11),(23,(3,(((10,6),((29,13),(26,((20,(((4,(1,24)),((25,15),9)),7)),2)))),22))))),((16,(14,(27,8))),(17,5))),(18,(12,19)));
	TREE 'Tree 4 from search (criterion: minimize Tree value using character matrix)' = ((12,(((28,((21,11),(23,(3,(((10,6),((29,13),(26,((20,(((4,(1,24)),((25,15),9)),7)),2)))),22))))),((16,(14,(27,8))),(17,5))),18)),19);
	TREE 'Tree 5 from search (criterion: minimize Tree value using character matrix)' = (12,((((28,((21,11),(23,(3,(((10,6),((29,13),(26,((20,(((4,(1,24)),((25,15),9)),7)),2)))),22))))),((16,(14,(27,8))),(17,5))),18),19));
	TREE 'Tree 6 from search (criterion: minimize Tree value using character matrix)' = ((((16,(14,(27,8))),(17,5)),(18,(12,19))),(28,((21,11),(23,(3,(((10,6),((29,13),(26,((20,(((4,(1,24)),((25,15),9)),7)),2)))),22))))));
	TREE 'Tree 7 from search (criterion: minimize Tree value using character matrix)' = (((16,(14,(27,8))),(17,5)),((28,((21,11),(23,(3,(((10,6),((29,13),(26,((20,(((4,(1,24)),((25,15),9)),7)),2)))),22))))),(18,(12,19))));
	TREE 'Tree 8 from search (criterion: minimize Tree value using character matrix)' = ((28,(((16,(14,(27,8))),(17,5)),(18,(12,19)))),((21,11),(23,(3,(((10,6),((29,13),(26,((20,(((4,(1,24)),((25,15),9)),7)),2)))),22)))));
	TREE 'Tree 9 from search (criterion: minimize Tree value using character matrix)' = (28,((((16,(14,(27,8))),(17,5)),(18,(12,19))),((21,11),(23,(3,(((10,6),((29,13),(26,((20,(((4,(1,24)),((25,15),9)),7)),2)))),22))))));
	TREE 'Tree 1 from search (criterion: minimize Tree value using character matrix)' = ((((12,19),18),(((11,21),((3,(22,((((2,(20,(((9,(15,25)),((1,24),4)),7))),26),(29,13)),(6,10)))),23)),28)),((17,5),(((8,27),14),16)));
	TREE 'Tree 2 from search (criterion: minimize Tree value using character matrix)' = (((((11,21),((3,(22,((((2,(20,(((9,(15,25)),((1,24),4)),7))),26),(29,13)),(6,10)))),23)),28),((17,5),(((8,27),14),16))),((12,19),18));
	TREE 'Tree 3 from search (criterion: minimize Tree value using character matrix)' = ((((11,21),((3,(22,((((2,(20,(((9,(15,25)),((1,24),4)),7))),26),(29,13)),(6,10)))),23)),28),(((12,19),18),((17,5),(((8,27),14),16))));
	TREE 'Tree 4 from search (criterion: minimize Tree value using character matrix)' = (((12,19),((((11,21),((3,(22,((((2,(20,(((9,(15,25)),((1,24),4)),7))),26),(29,13)),(6,10)))),23)),28),((17,5),(((8,27),14),16)))),18);
	TREE 'Tree 5 from search (criterion: minimize Tree value using character matrix)' = ((12,19),(((((11,21),((3,(22,((((2,(20,(((9,(15,25)),((1,24),4)),7))),26),(29,13)),(6,10)))),23)),28),((17,5),(((8,27),14),16))),18));
	TREE 'Tree 6 from search (criterion: minimize Tree value using character matrix)' = ((28,(((12,19),18),((17,5),(((8,27),14),16)))),((11,21),((3,(22,((((2,(20,(((9,(15,25)),((1,24),4)),7))),26),(29,13)),(6,10)))),23)));
	TREE 'Tree 7 from search (criterion: minimize Tree value using character matrix)' = (28,(((11,21),((3,(22,((((2,(20,(((9,(15,25)),((1,24),4)),7))),26),(29,13)),(6,10)))),23)),(((12,19),18),((17,5),(((8,27),14),16)))));
	TREE 'Tree 8 from search (criterion: minimize Tree value using character matrix)' = ((19,(((((11,21),((3,(22,((((2,(20,(((9,(15,25)),((1,24),4)),7))),26),(29,13)),(6,10)))),23)),28),((17,5),(((8,27),14),16))),18)),12);
	TREE 'Tree 9 from search (criterion: minimize Tree value using character matrix)' = (19,(12,(((((11,21),((3,(22,((((2,(20,(((9,(15,25)),((1,24),4)),7))),26),(29,13)),(6,10)))),23)),28),((17,5),(((8,27),14),16))),18)));
	TREE 'Tree 1 from search (criterion: minimize Tree value using character matrix)' = ((((((14,(27,8)),16),(5,17)),((19,12),18)),28),((11,21),(23,((22,((((((((9,(25,15)),((24,1),4)),7),20),2),26),(13,29)),(10,6))),3))));
	TREE 'Tree 2 from search (criterion: minimize Tree value using character matrix)' = ((28,((11,21),(23,((22,((((((((9,(25,15)),((24,1),4)),7),20),2),26),(13,29)),(10,6))),3)))),((((14,(27,8)),16),(5,17)),((19,12),18)));
	TREE 'Tree 3 from search (criterion: minimize Tree value using character matrix)' = (28,(((((14,(27,8)),16),(5,17)),((19,12),18)),((11,21),(23,((22,((((((((9,(25,15)),((24,1),4)),7),20),2),26),(13,29)),(10,6))),3)))));
	TREE 'Tree 4 from search (criterion: minimize Tree value using character matrix)' = (((((14,(27,8)),16),(5,17)),(28,((11,21),(23,((22,((((((((9,(25,15)),((24,1),4)),7),20),2),26),(13,29)),(10,6))),3))))),((19,12),18));
	TREE 'Tree 5 from search (criterion: minimize Tree value using character matrix)' = ((((14,(27,8)),16),(5,17)),((28,((11,21),(23,((22,((((((((9,(25,15)),((24,1),4)),7),20),2),26),(13,29)),(10,6))),3)))),((19,12),18)));
	TREE 'Tree 6 from search (criterion: minimize Tree value using character matrix)' = (((19,12),((((14,(27,8)),16),(5,17)),(28,((11,21),(23,((22,((((((((9,(25,15)),((24,1),4)),7),20),2),26),(13,29)),(10,6))),3)))))),18);
	TREE 'Tree 7 from search (criterion: minimize Tree value using character matrix)' = ((19,12),(((((14,(27,8)),16),(5,17)),(28,((11,21),(23,((22,((((((((9,(25,15)),((24,1),4)),7),20),2),26),(13,29)),(10,6))),3))))),18));
	TREE 'Tree 8 from search (criterion: minimize Tree value using character matrix)' = ((12,(((((14,(27,8)),16),(5,17)),(28,((11,21),(23,((22,((((((((9,(25,15)),((24,1),4)),7),20),2),26),(13,29)),(10,6))),3))))),18)),19);
	TREE 'Tree 9 from search (criterion: minimize Tree value using character matrix)' = (12,(19,(((((14,(27,8)),16),(5,17)),(28,((11,21),(23,((22,((((((((9,(25,15)),((24,1),4)),7),20),2),26),(13,29)),(10,6))),3))))),18)));
	TREE 'Tree 1 from search (criterion: minimize Tree value using character matrix)' = (((((11,21),(((((10,6),((13,29),(26,(2,(20,(7,(((1,24),4),(9,(15,25))))))))),22),3),23)),28),((19,12),18)),((5,17),(((8,27),14),16)));
	TREE 'Tree 2 from search (criterion: minimize Tree value using character matrix)' = ((((19,12),18),((5,17),(((8,27),14),16))),(((11,21),(((((10,6),((13,29),(26,(2,(20,(7,(((1,24),4),(9,(15,25))))))))),22),3),23)),28));
	TREE 'Tree 3 from search (criterion: minimize Tree value using character matrix)' = (((19,12),18),((((11,21),(((((10,6),((13,29),(26,(2,(20,(7,(((1,24),4),(9,(15,25))))))))),22),3),23)),28),((5,17),(((8,27),14),16))));
	TREE 'Tree 4 from search (criterion: minimize Tree value using character matrix)' = ((((11,21),(((((10,6),((13,29),(26,(2,(20,(7,(((1,24),4),(9,(15,25))))))))),22),3),23)),(((19,12),18),((5,17),(((8,27),14),16)))),28);
	TREE 'Tree 5 from search (criterion: minimize Tree value using character matrix)' = (((11,21),(((((10,6),((13,29),(26,(2,(20,(7,(((1,24),4),(9,(15,25))))))))),22),3),23)),((((19,12),18),((5,17),(((8,27),14),16))),28));
	TREE 'Tree 6 from search (criterion: minimize Tree value using character matrix)' = ((18,((((11,21),(((((10,6),((13,29),(26,(2,(20,(7,(((1,24),4),(9,(15,25))))))))),22),3),23)),28),((5,17),(((8,27),14),16)))),(19,12));
	TREE 'Tree 7 from search (criterion: minimize Tree value using character matrix)' = (18,((19,12),((((11,21),(((((10,6),((13,29),(26,(2,(20,(7,(((1,24),4),(9,(15,25))))))))),22),3),23)),28),((5,17),(((8,27),14),16)))));
	TREE 'Tree 8 from search (criterion: minimize Tree value using character matrix)' = ((19,(18,((((11,21),(((((10,6),((13,29),(26,(2,(20,(7,(((1,24),4),(9,(15,25))))))))),22),3),23)),28),((5,17),(((8,27),14),16))))),12);
	TREE 'Tree 9 from search (criterion: minimize Tree value using character matrix)' = (19,((18,((((11,21),(((((10,6),((13,29),(26,(2,(20,(7,(((1,24),4),(9,(15,25))))))))),22),3),23)),28),((5,17),(((8,27),14),16)))),12));
	TREE 'Tree 1 from search (criterion: minimize Tree value using character matrix)' = (((((8,27),14),16),(5,17)),((((11,21),(((22,(((((((((25,15),9),((1,24),4)),7),20),2),26),(29,13)),(10,6))),3),23)),28),(18,(12,19))));
	TREE 'Tree 2 from search (criterion: minimize Tree value using character matrix)' = (((((11,21),(((22,(((((((((25,15),9),((1,24),4)),7),20),2),26),(29,13)),(10,6))),3),23)),28),((((8,27),14),16),(5,17))),(18,(12,19)));
	TREE 'Tree 3 from search (criterion: minimize Tree value using character matrix)' = ((((11,21),(((22,(((((((((25,15),9),((1,24),4)),7),20),2),26),(29,13)),(10,6))),3),23)),28),(((((8,27),14),16),(5,17)),(18,(12,19))));
	TREE 'Tree 4 from search (criterion: minimize Tree value using character matrix)' = ((18,((((11,21),(((22,(((((((((25,15),9),((1,24),4)),7),20),2),26),(29,13)),(10,6))),3),23)),28),((((8,27),14),16),(5,17)))),(12,19));
	TREE 'Tree 5 from search (criterion: minimize Tree value using character matrix)' = (18,(((((11,21),(((22,(((((((((25,15),9),((1,24),4)),7),20),2),26),(29,13)),(10,6))),3),23)),28),((((8,27),14),16),(5,17))),(12,19)));
	TREE 'Tree 6 from search (criterion: minimize Tree value using character matrix)' = ((28,(((((8,27),14),16),(5,17)),(18,(12,19)))),((11,21),(((22,(((((((((25,15),9),((1,24),4)),7),20),2),26),(29,13)),(10,6))),3),23)));
	TREE 'Tree 7 from search (criterion: minimize Tree value using character matrix)' = (28,(((11,21),(((22,(((((((((25,15),9),((1,24),4)),7),20),2),26),(29,13)),(10,6))),3),23)),(((((8,27),14),16),(5,17)),(18,(12,19)))));
	TREE 'Tree 8 from search (criterion: minimize Tree value using character matrix)' = ((12,(18,((((11,21),(((22,(((((((((25,15),9),((1,24),4)),7),20),2),26),(29,13)),(10,6))),3),23)),28),((((8,27),14),16),(5,17))))),19);
	TREE 'Tree 9 from search (criterion: minimize Tree value using character matrix)' = (12,((18,((((11,21),(((22,(((((((((25,15),9),((1,24),4)),7),20),2),26),(29,13)),(10,6))),3),23)),28),((((8,27),14),16),(5,17)))),19));
	TREE 'Tree 1 from search (criterion: minimize Tree value using character matrix)' = (((21,11),(23,(3,(22,((10,6),((26,(2,(20,(((9,(25,15)),((24,1),4)),7)))),(29,13))))))),((((17,5),(((27,8),14),16)),(18,(19,12))),28));
	TREE 'Tree 2 from search (criterion: minimize Tree value using character matrix)' = (((((17,5),(((27,8),14),16)),(18,(19,12))),((21,11),(23,(3,(22,((10,6),((26,(2,(20,(((9,(25,15)),((24,1),4)),7)))),(29,13)))))))),28);
	TREE 'Tree 3 from search (criterion: minimize Tree value using character matrix)' = ((((17,5),(((27,8),14),16)),(18,(19,12))),(((21,11),(23,(3,(22,((10,6),((26,(2,(20,(((9,(25,15)),((24,1),4)),7)))),(29,13))))))),28));
	TREE 'Tree 4 from search (criterion: minimize Tree value using character matrix)' = (((18,(19,12)),(((21,11),(23,(3,(22,((10,6),((26,(2,(20,(((9,(25,15)),((24,1),4)),7)))),(29,13))))))),28)),((17,5),(((27,8),14),16)));
	TREE 'Tree 5 from search (criterion: minimize Tree value using character matrix)' = ((18,(19,12)),(((17,5),(((27,8),14),16)),(((21,11),(23,(3,(22,((10,6),((26,(2,(20,(((9,(25,15)),((24,1),4)),7)))),(29,13))))))),28)));
	TREE 'Tree 6 from search (criterion: minimize Tree value using character matrix)' = (((19,12),(((17,5),(((27,8),14),16)),(((21,11),(23,(3,(22,((10,6),((26,(2,(20,(((9,(25,15)),((24,1),4)),7)))),(29,13))))))),28))),18);
	TREE 'Tree 7 from search (criterion: minimize Tree value using character matrix)' = ((19,12),(18,(((17,5),(((27,8),14),16)),(((21,11),(23,(3,(22,((10,6),((26,(2,(20,(((9,(25,15)),((24,1),4)),7)))),(29,13))))))),28))));
	TREE 'Tree 8 from search (criterion: minimize Tree value using character matrix)' = ((12,(18,(((17,5),(((27,8),14),16)),(((21,11),(23,(3,(22,((10,6),((26,(2,(20,(((9,(25,15)),((24,1),4)),7)))),(29,13))))))),28)))),19);
	TREE 'Tree 9 from search (criterion: minimize Tree value using character matrix)' = (12,(19,(18,(((17,5),(((27,8),14),16)),(((21,11),(23,(3,(22,((10,6),((26,(2,(20,(((9,(25,15)),((24,1),4)),7)))),(29,13))))))),28)))));
	TREE 'Tree 1 from search (criterion: minimize Tree value using character matrix)' = (((((((23,((22,((10,6),(((2,((7,((9,(25,15)),((24,1),4))),20)),26),(29,13)))),3)),(11,21)),28),(((14,(27,8)),16),(17,5))),18),19),12);
	TREE 'Tree 2 from search (criterion: minimize Tree value using character matrix)' = ((19,12),(((((23,((22,((10,6),(((2,((7,((9,(25,15)),((24,1),4))),20)),26),(29,13)))),3)),(11,21)),28),(((14,(27,8)),16),(17,5))),18));
	TREE 'Tree 3 from search (criterion: minimize Tree value using character matrix)' = (19,((((((23,((22,((10,6),(((2,((7,((9,(25,15)),((24,1),4))),20)),26),(29,13)))),3)),(11,21)),28),(((14,(27,8)),16),(17,5))),18),12));
	TREE 'Tree 4 from search (criterion: minimize Tree value using character matrix)' = ((((((23,((22,((10,6),(((2,((7,((9,(25,15)),((24,1),4))),20)),26),(29,13)))),3)),(11,21)),28),(((14,(27,8)),16),(17,5))),(19,12)),18);
	TREE 'Tree 5 from search (criterion: minimize Tree value using character matrix)' = (((((23,((22,((10,6),(((2,((7,((9,(25,15)),((24,1),4))),20)),26),(29,13)))),3)),(11,21)),28),(((14,(27,8)),16),(17,5))),((19,12),18));
	TREE 'Tree 6 from search (criterion: minimize Tree value using character matrix)' = (((((14,(27,8)),16),(17,5)),((19,12),18)),(((23,((22,((10,6),(((2,((7,((9,(25,15)),((24,1),4))),20)),26),(29,13)))),3)),(11,21)),28));
	TREE 'Tree 7 from search (criterion: minimize Tree value using character matrix)' = ((((14,(27,8)),16),(17,5)),((((23,((22,((10,6),(((2,((7,((9,(25,15)),((24,1),4))),20)),26),(29,13)))),3)),(11,21)),28),((19,12),18)));
	TREE 'Tree 8 from search (criterion: minimize Tree value using character matrix)' = ((((23,((22,((10,6),(((2,((7,((9,(25,15)),((24,1),4))),20)),26),(29,13)))),3)),(11,21)),((((14,(27,8)),16),(17,5)),((19,12),18))),28);
	TREE 'Tree 9 from search (criterion: minimize Tree value using character matrix)' = (((23,((22,((10,6),(((2,((7,((9,(25,15)),((24,1),4))),20)),26),(29,13)))),3)),(11,21)),(((((14,(27,8)),16),(17,5)),((19,12),18)),28));
	TREE 'Tree 1 from search (criterion: minimize Tree value using character matrix)' = (((((16,((8,27),14)),(17,5)),(18,(19,12))),((21,11),(((22,(((((((((15,25),9),((1,24),4)),7),20),2),26),(13,29)),(6,10))),3),23))),28);
	TREE 'Tree 2 from search (criterion: minimize Tree value using character matrix)' = ((((21,11),(((22,(((((((((15,25),9),((1,24),4)),7),20),2),26),(13,29)),(6,10))),3),23)),28),(((16,((8,27),14)),(17,5)),(18,(19,12))));
	TREE 'Tree 3 from search (criterion: minimize Tree value using character matrix)' = (((21,11),(((22,(((((((((15,25),9),((1,24),4)),7),20),2),26),(13,29)),(6,10))),3),23)),((((16,((8,27),14)),(17,5)),(18,(19,12))),28));
	TREE 'Tree 4 from search (criterion: minimize Tree value using character matrix)' = ((((16,((8,27),14)),(17,5)),(((21,11),(((22,(((((((((15,25),9),((1,24),4)),7),20),2),26),(13,29)),(6,10))),3),23)),28)),(18,(19,12)));
	TREE 'Tree 5 from search (criterion: minimize Tree value using character matrix)' = (((16,((8,27),14)),(17,5)),((((21,11),(((22,(((((((((15,25),9),((1,24),4)),7),20),2),26),(13,29)),(6,10))),3),23)),28),(18,(19,12))));
	TREE 'Tree 6 from search (criterion: minimize Tree value using character matrix)' = ((18,(((16,((8,27),14)),(17,5)),(((21,11),(((22,(((((((((15,25),9),((1,24),4)),7),20),2),26),(13,29)),(6,10))),3),23)),28))),(19,12));
	TREE 'Tree 7 from search (criterion: minimize Tree value using character matrix)' = (18,((((16,((8,27),14)),(17,5)),(((21,11),(((22,(((((((((15,25),9),((1,24),4)),7),20),2),26),(13,29)),(6,10))),3),23)),28)),(19,12)));
	TREE 'Tree 8 from search (criterion: minimize Tree value using character matrix)' = ((19,(18,(((16,((8,27),14)),(17,5)),(((21,11),(((22,(((((((((15,25),9),((1,24),4)),7),20),2),26),(13,29)),(6,10))),3),23)),28)))),12);
	TREE 'Tree 9 from search (criterion: minimize Tree value using character matrix)' = (19,((18,(((16,((8,27),14)),(17,5)),(((21,11),(((22,(((((((((15,25),9),((1,24),4)),7),20),2),26),(13,29)),(6,10))),3),23)),28))),12));
	TREE 'Tree 1 from search (criterion: minimize Tree value using character matrix)' = (((18,(19,12)),(28,((23,((((10,6),((13,29),(26,(2,(20,(((9,(15,25)),((24,1),4)),7)))))),22),3)),(11,21)))),((5,17),(16,(14,(27,8)))));
	TREE 'Tree 2 from search (criterion: minimize Tree value using character matrix)' = (((28,((23,((((10,6),((13,29),(26,(2,(20,(((9,(15,25)),((24,1),4)),7)))))),22),3)),(11,21))),((5,17),(16,(14,(27,8))))),(18,(19,12)));
	TREE 'Tree 3 from search (criterion: minimize Tree value using character matrix)' = ((28,((23,((((10,6),((13,29),(26,(2,(20,(((9,(15,25)),((24,1),4)),7)))))),22),3)),(11,21))),((18,(19,12)),((5,17),(16,(14,(27,8))))));
	TREE 'Tree 4 from search (criterion: minimize Tree value using character matrix)' = ((18,((28,((23,((((10,6),((13,29),(26,(2,(20,(((9,(15,25)),((24,1),4)),7)))))),22),3)),(11,21))),((5,17),(16,(14,(27,8)))))),(19,12));
	TREE 'Tree 5 from search (criterion: minimize Tree value using character matrix)' = (18,(((28,((23,((((10,6),((13,29),(26,(2,(20,(((9,(15,25)),((24,1),4)),7)))))),22),3)),(11,21))),((5,17),(16,(14,(27,8))))),(19,12)));
	TREE 'Tree 6 from search (criterion: minimize Tree value using character matrix)' = ((((23,((((10,6),((13,29),(26,(2,(20,(((9,(15,25)),((24,1),4)),7)))))),22),3)),(11,21)),((18,(19,12)),((5,17),(16,(14,(27,8)))))),28);
	TREE 'Tree 7 from search (criterion: minimize Tree value using character matrix)' = (((23,((((10,6),((13,29),(26,(2,(20,(((9,(15,25)),((24,1),4)),7)))))),22),3)),(11,21)),(28,((18,(19,12)),((5,17),(16,(14,(27,8)))))));
	TREE 'Tree 8 from search (criterion: minimize Tree value using character matrix)' = ((19,(18,((28,((23,((((10,6),((13,29),(26,(2,(20,(((9,(15,25)),((24,1),4)),7)))))),22),3)),(11,21))),((5,17),(16,(14,(27,8))))))),12);
	TREE 'Tree 9 from search (criterion: minimize Tree value using character matrix)' = (19,((18,((28,((23,((((10,6),((13,29),(26,(2,(20,(((9,(15,25)),((24,1),4)),7)))))),22),3)),(11,21))),((5,17),(16,(14,(27,8)))))),12));
	TREE 'Tree 1 from search (criterion: minimize Tree value using character matrix)' = (((23,(((((26,(2,(20,((((25,15),9),((24,1),4)),7)))),(29,13)),(10,6)),22),3)),(21,11)),((((12,19),18),((16,((27,8),14)),(17,5))),28));
	TREE 'Tree 2 from search (criterion: minimize Tree value using character matrix)' = (((((12,19),18),((16,((27,8),14)),(17,5))),((23,(((((26,(2,(20,((((25,15),9),((24,1),4)),7)))),(29,13)),(10,6)),22),3)),(21,11))),28);
	TREE 'Tree 3 from search (criterion: minimize Tree value using character matrix)' = ((((12,19),18),((16,((27,8),14)),(17,5))),(((23,(((((26,(2,(20,((((25,15),9),((24,1),4)),7)))),(29,13)),(10,6)),22),3)),(21,11)),28));
	TREE 'Tree 4 from search (criterion: minimize Tree value using character matrix)' = ((((16,((27,8),14)),(17,5)),(((23,(((((26,(2,(20,((((25,15),9),((24,1),4)),7)))),(29,13)),(10,6)),22),3)),(21,11)),28)),((12,19),18));
	TREE 'Tree 5 from search (criterion: minimize Tree value using character matrix)' = (((16,((27,8),14)),(17,5)),(((12,19),18),(((23,(((((26,(2,(20,((((25,15),9),((24,1),4)),7)))),(29,13)),(10,6)),22),3)),(21,11)),28)));
	TREE 'Tree 6 from search (criterion: minimize Tree value using character matrix)' = (((12,19),(((16,((27,8),14)),(17,5)),(((23,(((((26,(2,(20,((((25,15),9),((24,1),4)),7)))),(29,13)),(10,6)),22),3)),(21,11)),28))),18);
	TREE 'Tree 7 from search (criterion: minimize Tree value using character matrix)' = ((12,19),((((16,((27,8),14)),(17,5)),(((23,(((((26,(2,(20,((((25,15),9),((24,1),4)),7)))),(29,13)),(10,6)),22),3)),(21,11)),28)),18));
	TREE 'Tree 8 from search (criterion: minimize Tree value using character matrix)' = ((19,((((16,((27,8),14)),(17,5)),(((23,(((((26,(2,(20,((((25,15),9),((24,1),4)),7)))),(29,13)),(10,6)),22),3)),(21,11)),28)),18)),12);
	TREE 'Tree 9 from search (criterion: minimize Tree value using character matrix)' = (19,(12,((((16,((27,8),14)),(17,5)),(((23,(((((26,(2,(20,((((25,15),9),((24,1),4)),7)))),(29,13)),(10,6)),22),3)),(21,11)),28)),18)));
	TREE 'Tree 1 from search (criterion: minimize Tree value using character matrix)' = (((((23,((22,((10,6),((((((((15,25),9),((24,1),4)),7),20),2),26),(13,29)))),3)),(21,11)),28),(18,(19,12))),((17,5),(((27,8),14),16)));
	TREE 'Tree 2 from search (criterion: minimize Tree value using character matrix)' = (((18,(19,12)),((17,5),(((27,8),14),16))),(((23,((22,((10,6),((((((((15,25),9),((24,1),4)),7),20),2),26),(13,29)))),3)),(21,11)),28));
	TREE 'Tree 3 from search (criterion: minimize Tree value using character matrix)' = ((18,(19,12)),((((23,((22,((10,6),((((((((15,25),9),((24,1),4)),7),20),2),26),(13,29)))),3)),(21,11)),28),((17,5),(((27,8),14),16))));
	TREE 'Tree 4 from search (criterion: minimize Tree value using character matrix)' = ((((23,((22,((10,6),((((((((15,25),9),((24,1),4)),7),20),2),26),(13,29)))),3)),(21,11)),((18,(19,12)),((17,5),(((27,8),14),16)))),28);
	TREE 'Tree 5 from search (criterion: minimize Tree value using character matrix)' = (((23,((22,((10,6),((((((((15,25),9),((24,1),4)),7),20),2),26),(13,29)))),3)),(21,11)),(((18,(19,12)),((17,5),(((27,8),14),16))),28));
	TREE 'Tree 6 from search (criterion: minimize Tree value using character matrix)' = (((19,12),((((23,((22,((10,6),((((((((15,25),9),((24,1),4)),7),20),2),26),(13,29)))),3)),(21,11)),28),((17,5),(((27,8),14),16)))),18);
	TREE 'Tree 7 from search (criterion: minimize Tree value using character matrix)' = ((19,12),(18,((((23,((22,((10,6),((((((((15,25),9),((24,1),4)),7),20),2),26),(13,29)))),3)),(21,11)),28),((17,5),(((27,8),14),16)))));
	TREE 'Tree 8 from search (criterion: minimize Tree value using character matrix)' = ((12,(18,((((23,((22,((10,6),((((((((15,25),9),((24,1),4)),7),20),2),26),(13,29)))),3)),(21,11)),28),((17,5),(((27,8),14),16))))),19);
	TREE 'Tree 9 from search (criterion: minimize Tree value using character matrix)' = (12,(19,(18,((((23,((22,((10,6),((((((((15,25),9),((24,1),4)),7),20),2),26),(13,29)))),3)),(21,11)),28),((17,5),(((27,8),14),16))))));
	TREE 'Tree 1 from search (criterion: minimize Tree value using character matrix)' = (((12,19),((28,((23,((((10,6),((29,13),(26,(2,(20,(7,((4,(24,1)),((15,25),9)))))))),22),3)),(11,21))),((((8,27),14),16),(5,17)))),18);
	TREE 'Tree 2 from search (criterion: minimize Tree value using character matrix)' = ((((28,((23,((((10,6),((29,13),(26,(2,(20,(7,((4,(24,1)),((15,25),9)))))))),22),3)),(11,21))),((((8,27),14),16),(5,17))),18),(12,19));
	TREE 'Tree 3 from search (criterion: minimize Tree value using character matrix)' = (((28,((23,((((10,6),((29,13),(26,(2,(20,(7,((4,(24,1)),((15,25),9)))))))),22),3)),(11,21))),((((8,27),14),16),(5,17))),((12,19),18));
	TREE 'Tree 4 from search (criterion: minimize Tree value using character matrix)' = ((12,(((28,((23,((((10,6),((29,13),(26,(2,(20,(7,((4,(24,1)),((15,25),9)))))))),22),3)),(11,21))),((((8,27),14),16),(5,17))),18)),19);
	TREE 'Tree 5 from search (criterion: minimize Tree value using character matrix)' = (12,((((28,((23,((((10,6),((29,13),(26,(2,(20,(7,((4,(24,1)),((15,25),9)))))))),22),3)),(11,21))),((((8,27),14),16),(5,17))),18),19));
	TREE 'Tree 6 from search (criterion: minimize Tree value using character matrix)' = ((((((8,27),14),16),(5,17)),((12,19),18)),(28,((23,((((10,6),((29,13),(26,(2,(20,(7,((4,(24,1)),((15,25),9)))))))),22),3)),(11,21))));
	TREE 'Tree 7 from search (criterion: minimize Tree value using character matrix)' = (((((8,27),14),16),(5,17)),((28,((23,((((10,6),((29,13),(26,(2,(20,(7,((4,(24,1)),((15,25),9)))))))),22),3)),(11,21))),((12,19),18)));
	TREE 'Tree 8 from search (criterion: minimize Tree value using character matrix)' = ((28,(((((8,27),14),16),(5,17)),((12,19),18))),((23,((((10,6),((29,13),(26,(2,(20,(7,((4,(24,1)),((15,25),9)))))))),22),3)),(11,21)));
	TREE 'Tree 9 from search (criterion: minimize Tree value using character matrix)' = (28,((((((8,27),14),16),(5,17)),((12,19),18)),((23,((((10,6),((29,13),(26,(2,(20,(7,((4,(24,1)),((15,25),9)))))))),22),3)),(11,21))));
	TREE 'Tree 1 from search (criterion: minimize Tree value using character matrix)' = (((21,11),(23,((22,(((13,29),((((7,((4,(1,24)),((15,25),9))),20),2),26)),(6,10))),3))),(28,(((17,5),(16,((27,8),14))),((19,12),18))));
	TREE 'Tree 2 from search (criterion: minimize Tree value using character matrix)' = ((28,((21,11),(23,((22,(((13,29),((((7,((4,(1,24)),((15,25),9))),20),2),26)),(6,10))),3)))),(((17,5),(16,((27,8),14))),((19,12),18)));
	TREE 'Tree 3 from search (criterion: minimize Tree value using character matrix)' = (28,(((21,11),(23,((22,(((13,29),((((7,((4,(1,24)),((15,25),9))),20),2),26)),(6,10))),3))),(((17,5),(16,((27,8),14))),((19,12),18))));
	TREE 'Tree 4 from search (criterion: minimize Tree value using character matrix)' = ((((17,5),(16,((27,8),14))),(28,((21,11),(23,((22,(((13,29),((((7,((4,(1,24)),((15,25),9))),20),2),26)),(6,10))),3))))),((19,12),18));
	TREE 'Tree 5 from search (criterion: minimize Tree value using character matrix)' = (((17,5),(16,((27,8),14))),((28,((21,11),(23,((22,(((13,29),((((7,((4,(1,24)),((15,25),9))),20),2),26)),(6,10))),3)))),((19,12),18)));
	TREE 'Tree 6 from search (criterion: minimize Tree value using character matrix)' = (((19,12),(((17,5),(16,((27,8),14))),(28,((21,11),(23,((22,(((13,29),((((7,((4,(1,24)),((15,25),9))),20),2),26)),(6,10))),3)))))),18);
	TREE 'Tree 7 from search (criterion: minimize Tree value using character matrix)' = ((19,12),((((17,5),(16,((27,8),14))),(28,((21,11),(23,((22,(((13,29),((((7,((4,(1,24)),((15,25),9))),20),2),26)),(6,10))),3))))),18));
	TREE 'Tree 8 from search (criterion: minimize Tree value using character matrix)' = ((12,((((17,5),(16,((27,8),14))),(28,((21,11),(23,((22,(((13,29),((((7,((4,(1,24)),((15,25),9))),20),2),26)),(6,10))),3))))),18)),19);
	TREE 'Tree 9 from search (criterion: minimize Tree value using character matrix)' = (12,(19,((((17,5),(16,((27,8),14))),(28,((21,11),(23,((22,(((13,29),((((7,((4,(1,24)),((15,25),9))),20),2),26)),(6,10))),3))))),18)));
	TREE 'Tree 1 from search (criterion: minimize Tree value using character matrix)' = ((((((22,(((26,(2,(20,(7,((9,(15,25)),((1,24),4)))))),(13,29)),(10,6))),3),23),(11,21)),((((14,(27,8)),16),(5,17)),(18,(12,19)))),28);
	TREE 'Tree 2 from search (criterion: minimize Tree value using character matrix)' = ((((((14,(27,8)),16),(5,17)),(18,(12,19))),28),((((22,(((26,(2,(20,(7,((9,(15,25)),((1,24),4)))))),(13,29)),(10,6))),3),23),(11,21)));
	TREE 'Tree 3 from search (criterion: minimize Tree value using character matrix)' = (((((14,(27,8)),16),(5,17)),(18,(12,19))),(((((22,(((26,(2,(20,(7,((9,(15,25)),((1,24),4)))))),(13,29)),(10,6))),3),23),(11,21)),28));
	TREE 'Tree 4 from search (criterion: minimize Tree value using character matrix)' = (((18,(12,19)),(((((22,(((26,(2,(20,(7,((9,(15,25)),((1,24),4)))))),(13,29)),(10,6))),3),23),(11,21)),28)),(((14,(27,8)),16),(5,17)));
	TREE 'Tree 5 from search (criterion: minimize Tree value using character matrix)' = ((18,(12,19)),((((14,(27,8)),16),(5,17)),(((((22,(((26,(2,(20,(7,((9,(15,25)),((1,24),4)))))),(13,29)),(10,6))),3),23),(11,21)),28)));
	TREE 'Tree 6 from search (criterion: minimize Tree value using character matrix)' = (((12,19),((((14,(27,8)),16),(5,17)),(((((22,(((26,(2,(20,(7,((9,(15,25)),((1,24),4)))))),(13,29)),(10,6))),3),23),(11,21)),28))),18);
	TREE 'Tree 7 from search (criterion: minimize Tree value using character matrix)' = ((12,19),(18,((((14,(27,8)),16),(5,17)),(((((22,(((26,(2,(20,(7,((9,(15,25)),((1,24),4)))))),(13,29)),(10,6))),3),23),(11,21)),28))));
	TREE 'Tree 8 from search (criterion: minimize Tree value using character matrix)' = ((19,(18,((((14,(27,8)),16),(5,17)),(((((22,(((26,(2,(20,(7,((9,(15,25)),((1,24),4)))))),(13,29)),(10,6))),3),23),(11,21)),28)))),12);
	TREE 'Tree 9 from search (criterion: minimize Tree value using character matrix)' = (19,(12,(18,((((14,(27,8)),16),(5,17)),(((((22,(((26,(2,(20,(7,((9,(15,25)),((1,24),4)))))),(13,29)),(10,6))),3),23),(11,21)),28)))));
	TREE 'Tree 1 from search (criterion: minimize Tree value using character matrix)' = (((16,(14,(8,27))),(17,5)),((28,((((((10,6),((13,29),(26,(2,(20,(7,((9,(25,15)),((24,1),4)))))))),22),3),23),(21,11))),((19,12),18)));
	TREE 'Tree 2 from search (criterion: minimize Tree value using character matrix)' = (((28,((((((10,6),((13,29),(26,(2,(20,(7,((9,(25,15)),((24,1),4)))))))),22),3),23),(21,11))),((16,(14,(8,27))),(17,5))),((19,12),18));
	TREE 'Tree 3 from search (criterion: minimize Tree value using character matrix)' = ((28,((((((10,6),((13,29),(26,(2,(20,(7,((9,(25,15)),((24,1),4)))))))),22),3),23),(21,11))),(((16,(14,(8,27))),(17,5)),((19,12),18)));
	TREE 'Tree 4 from search (criterion: minimize Tree value using character matrix)' = (((19,12),((28,((((((10,6),((13,29),(26,(2,(20,(7,((9,(25,15)),((24,1),4)))))))),22),3),23),(21,11))),((16,(14,(8,27))),(17,5)))),18);
	TREE 'Tree 5 from search (criterion: minimize Tree value using character matrix)' = ((19,12),(((28,((((((10,6),((13,29),(26,(2,(20,(7,((9,(25,15)),((24,1),4)))))))),22),3),23),(21,11))),((16,(14,(8,27))),(17,5))),18));
	TREE 'Tree 6 from search (criterion: minimize Tree value using character matrix)' = ((((((((10,6),((13,29),(26,(2,(20,(7,((9,(25,15)),((24,1),4)))))))),22),3),23),(21,11)),(((16,(14,(8,27))),(17,5)),((19,12),18))),28);
	TREE 'Tree 7 from search (criterion: minimize Tree value using character matrix)' = (((((((10,6),((13,29),(26,(2,(20,(7,((9,(25,15)),((24,1),4)))))))),22),3),23),(21,11)),(28,(((16,(14,(8,27))),(17,5)),((19,12),18))));
	TREE 'Tree 8 from search (criterion: minimize Tree value using character matrix)' = ((12,(((28,((((((10,6),((13,29),(26,(2,(20,(7,((9,(25,15)),((24,1),4)))))))),22),3),23),(21,11))),((16,(14,(8,27))),(17,5))),18)),19);
	TREE 'Tree 9 from search (criterion: minimize Tree value using character matrix)' = (12,(19,(((28,((((((10,6),((13,29),(26,(2,(20,(7,((9,(25,15)),((24,1),4)))))))),22),3),23),(21,11))),((16,(14,(8,27))),(17,5))),18)));
	TREE 'Tree 1 from search (criterion: minimize Tree value using character matrix)' = (((5,17),(16,((8,27),14))),((28,((23,((22,((6,10),((29,13),(26,(2,(20,(7,((4,(1,24)),((25,15),9))))))))),3)),(21,11))),(18,(12,19))));
	TREE 'Tree 2 from search (criterion: minimize Tree value using character matrix)' = (((28,((23,((22,((6,10),((29,13),(26,(2,(20,(7,((4,(1,24)),((25,15),9))))))))),3)),(21,11))),((5,17),(16,((8,27),14)))),(18,(12,19)));
	TREE 'Tree 3 from search (criterion: minimize Tree value using character matrix)' = ((28,((23,((22,((6,10),((29,13),(26,(2,(20,(7,((4,(1,24)),((25,15),9))))))))),3)),(21,11))),(((5,17),(16,((8,27),14))),(18,(12,19))));
	TREE 'Tree 4 from search (criterion: minimize Tree value using character matrix)' = ((18,((28,((23,((22,((6,10),((29,13),(26,(2,(20,(7,((4,(1,24)),((25,15),9))))))))),3)),(21,11))),((5,17),(16,((8,27),14))))),(12,19));
	TREE 'Tree 5 from search (criterion: minimize Tree value using character matrix)' = (18,(((28,((23,((22,((6,10),((29,13),(26,(2,(20,(7,((4,(1,24)),((25,15),9))))))))),3)),(21,11))),((5,17),(16,((8,27),14)))),(12,19)));
	TREE 'Tree 6 from search (criterion: minimize Tree value using character matrix)' = ((((23,((22,((6,10),((29,13),(26,(2,(20,(7,((4,(1,24)),((25,15),9))))))))),3)),(21,11)),(((5,17),(16,((8,27),14))),(18,(12,19)))),28);
	TREE 'Tree 7 from search (criterion: minimize Tree value using character matrix)' = (((23,((22,((6,10),((29,13),(26,(2,(20,(7,((4,(1,24)),((25,15),9))))))))),3)),(21,11)),(28,(((5,17),(16,((8,27),14))),(18,(12,19)))));
	TREE 'Tree 8 from search (criterion: minimize Tree value using character matrix)' = ((12,(18,((28,((23,((22,((6,10),((29,13),(26,(2,(20,(7,((4,(1,24)),((25,15),9))))))))),3)),(21,11))),((5,17),(16,((8,27),14)))))),19);
	TREE 'Tree 9 from search (criterion: minimize Tree value using character matrix)' = (12,((18,((28,((23,((22,((6,10),((29,13),(26,(2,(20,(7,((4,(1,24)),((25,15),9))))))))),3)),(21,11))),((5,17),(16,((8,27),14))))),19));
	TREE 'Tree 1 from search (criterion: minimize Tree value using character matrix)' = (((11,21),(23,((((10,6),((29,13),(26,(2,(20,(7,((4,(1,24)),((25,15),9)))))))),22),3))),((((5,17),(16,(14,(8,27)))),(18,(12,19))),28));
	TREE 'Tree 2 from search (criterion: minimize Tree value using character matrix)' = (((((5,17),(16,(14,(8,27)))),(18,(12,19))),((11,21),(23,((((10,6),((29,13),(26,(2,(20,(7,((4,(1,24)),((25,15),9)))))))),22),3)))),28);
	TREE 'Tree 3 from search (criterion: minimize Tree value using character matrix)' = ((((5,17),(16,(14,(8,27)))),(18,(12,19))),(((11,21),(23,((((10,6),((29,13),(26,(2,(20,(7,((4,(1,24)),((25,15),9)))))))),22),3))),28));
	TREE 'Tree 4 from search (criterion: minimize Tree value using character matrix)' = (((18,(12,19)),(((11,21),(23,((((10,6),((29,13),(26,(2,(20,(7,((4,(1,24)),((25,15),9)))))))),22),3))),28)),((5,17),(16,(14,(8,27)))));
	TREE 'Tree 5 from search (criterion: minimize Tree value using character matrix)' = ((18,(12,19)),(((5,17),(16,(14,(8,27)))),(((11,21),(23,((((10,6),((29,13),(26,(2,(20,(7,((4,(1,24)),((25,15),9)))))))),22),3))),28)));
	TREE 'Tree 6 from search (criterion: minimize Tree value using character matrix)' = (((12,19),(((5,17),(16,(14,(8,27)))),(((11,21),(23,((((10,6),((29,13),(26,(2,(20,(7,((4,(1,24)),((25,15),9)))))))),22),3))),28))),18);
	TREE 'Tree 7 from search (criterion: minimize Tree value using character matrix)' = ((12,19),(18,(((5,17),(16,(14,(8,27)))),(((11,21),(23,((((10,6),((29,13),(26,(2,(20,(7,((4,(1,24)),((25,15),9)))))))),22),3))),28))));
	TREE 'Tree 8 from search (criterion: minimize Tree value using character matrix)' = ((19,(18,(((5,17),(16,(14,(8,27)))),(((11,21),(23,((((10,6),((29,13),(26,(2,(20,(7,((4,(1,24)),((25,15),9)))))))),22),3))),28)))),12);
	TREE 'Tree 9 from search (criterion: minimize Tree value using character matrix)' = (19,(12,(18,(((5,17),(16,(14,(8,27)))),(((11,21),(23,((((10,6),((29,13),(26,(2,(20,(7,((4,(1,24)),((25,15),9)))))))),22),3))),28)))));
	TREE 'Tree 1 from search (criterion: minimize Tree value using character matrix)' = ((12,(18,(((5,17),(16,((8,27),14))),(28,((21,11),(23,(3,(22,((10,6),((13,29),((((((9,(25,15)),((1,24),4)),7),20),2),26))))))))))),19);
	TREE 'Tree 2 from search (criterion: minimize Tree value using character matrix)' = (((18,(((5,17),(16,((8,27),14))),(28,((21,11),(23,(3,(22,((10,6),((13,29),((((((9,(25,15)),((1,24),4)),7),20),2),26)))))))))),19),12);
	TREE 'Tree 3 from search (criterion: minimize Tree value using character matrix)' = ((18,(((5,17),(16,((8,27),14))),(28,((21,11),(23,(3,(22,((10,6),((13,29),((((((9,(25,15)),((1,24),4)),7),20),2),26)))))))))),(12,19));
	TREE 'Tree 4 from search (criterion: minimize Tree value using character matrix)' = (((((5,17),(16,((8,27),14))),(28,((21,11),(23,(3,(22,((10,6),((13,29),((((((9,(25,15)),((1,24),4)),7),20),2),26))))))))),(12,19)),18);
	TREE 'Tree 5 from search (criterion: minimize Tree value using character matrix)' = ((((5,17),(16,((8,27),14))),(28,((21,11),(23,(3,(22,((10,6),((13,29),((((((9,(25,15)),((1,24),4)),7),20),2),26))))))))),(18,(12,19)));
	TREE 'Tree 6 from search (criterion: minimize Tree value using character matrix)' = (((28,((21,11),(23,(3,(22,((10,6),((13,29),((((((9,(25,15)),((1,24),4)),7),20),2),26)))))))),(18,(12,19))),((5,17),(16,((8,27),14))));
	TREE 'Tree 7 from search (criterion: minimize Tree value using character matrix)' = ((28,((21,11),(23,(3,(22,((10,6),((13,29),((((((9,(25,15)),((1,24),4)),7),20),2),26)))))))),(((5,17),(16,((8,27),14))),(18,(12,19))));
	TREE 'Tree 8 from search (criterion: minimize Tree value using character matrix)' = ((((21,11),(23,(3,(22,((10,6),((13,29),((((((9,(25,15)),((1,24),4)),7),20),2),26))))))),(((5,17),(16,((8,27),14))),(18,(12,19)))),28);
	TREE 'Tree 9 from search (criterion: minimize Tree value using character matrix)' = (((21,11),(23,(3,(22,((10,6),((13,29),((((((9,(25,15)),((1,24),4)),7),20),2),26))))))),(28,(((5,17),(16,((8,27),14))),(18,(12,19)))));
	TREE 'Tree 1 from search (criterion: minimize Tree value using character matrix)' = (((((3,((((((((((25,15),9),((1,24),4)),7),20),2),26),(29,13)),(10,6)),22)),23),(21,11)),(((12,19),18),((16,(14,(27,8))),(17,5)))),28);
	TREE 'Tree 2 from search (criterion: minimize Tree value using character matrix)' = (((((12,19),18),((16,(14,(27,8))),(17,5))),28),(((3,((((((((((25,15),9),((1,24),4)),7),20),2),26),(29,13)),(10,6)),22)),23),(21,11)));
	TREE 'Tree 3 from search (criterion: minimize Tree value using character matrix)' = ((((12,19),18),((16,(14,(27,8))),(17,5))),((((3,((((((((((25,15),9),((1,24),4)),7),20),2),26),(29,13)),(10,6)),22)),23),(21,11)),28));
	TREE 'Tree 4 from search (criterion: minimize Tree value using character matrix)' = ((((16,(14,(27,8))),(17,5)),((((3,((((((((((25,15),9),((1,24),4)),7),20),2),26),(29,13)),(10,6)),22)),23),(21,11)),28)),((12,19),18));
	TREE 'Tree 5 from search (criterion: minimize Tree value using character matrix)' = (((16,(14,(27,8))),(17,5)),(((12,19),18),((((3,((((((((((25,15),9),((1,24),4)),7),20),2),26),(29,13)),(10,6)),22)),23),(21,11)),28)));
	TREE 'Tree 6 from search (criterion: minimize Tree value using character matrix)' = (((12,19),(((16,(14,(27,8))),(17,5)),((((3,((((((((((25,15),9),((1,24),4)),7),20),2),26),(29,13)),(10,6)),22)),23),(21,11)),28))),18);
	TREE 'Tree 7 from search (criterion: minimize Tree value using character matrix)' = ((12,19),((((16,(14,(27,8))),(17,5)),((((3,((((((((((25,15),9),((1,24),4)),7),20),2),26),(29,13)),(10,6)),22)),23),(21,11)),28)),18));
	TREE 'Tree 8 from search (criterion: minimize Tree value using character matrix)' = ((19,((((16,(14,(27,8))),(17,5)),((((3,((((((((((25,15),9),((1,24),4)),7),20),2),26),(29,13)),(10,6)),22)),23),(21,11)),28)),18)),12);
	TREE 'Tree 9 from search (criterion: minimize Tree value using character matrix)' = (19,(12,((((16,(14,(27,8))),(17,5)),((((3,((((((((((25,15),9),((1,24),4)),7),20),2),26),(29,13)),(10,6)),22)),23),(21,11)),28)),18)));

END;


BEGIN TREES;
	Title Filter_Trees_from_Other_Source;
	LINK Taxa = Taxa;
	TRANSLATE
		1 Paranomalurus_walkeri,
		2 Pondaungimys,
		3 Prolapsus,
		4 Shazurus,
		5 Hartenbergeromys,
		6 Glibia,
		7 Nementchamys,
		8 Theridomys,
		9 Paranomalurus_soniae,
		10 Zegdoumys,
		11 Eogliravus,
		12 Cocomys,
		13 Pappocricetodon,
		14 Remys,
		15 Anomalurus,
		16 Protadelomys,
		17 Pantrogna,
		18 Paramys,
		19 Tribosphenomys,
		20 Kebirmys,
		21 Bransatoglis,
		22 Pauromys,
		23 Knightomys,
		24 Paranomalurus_bishopi,
		25 Idiurus,
		26 Glibia_namibiensis,
		27 Elfomys,
		28 Birbalomys,
		29 Sinosminthus;
	TREE 'Tree 1 from search (criterion: minimize Tree value using character matrix)' = (((((14,(8,27)),16),(17,5)),(28,((23,(3,(22,(((13,29),(((20,((((15,25),9),((1,24),4)),7)),2),26)),(10,6))))),(11,21)))),((19,12),18));
	TREE 'Tree 2 from search (criterion: minimize Tree value using character matrix)' = (((19,12),((((14,(8,27)),16),(17,5)),(28,((23,(3,(22,(((13,29),(((20,((((15,25),9),((1,24),4)),7)),2),26)),(10,6))))),(11,21))))),18);
	TREE 'Tree 3 from search (criterion: minimize Tree value using character matrix)' = ((19,12),(((((14,(8,27)),16),(17,5)),(28,((23,(3,(22,(((13,29),(((20,((((15,25),9),((1,24),4)),7)),2),26)),(10,6))))),(11,21)))),18));
	TREE 'Tree 4 from search (criterion: minimize Tree value using character matrix)' = (((28,((23,(3,(22,(((13,29),(((20,((((15,25),9),((1,24),4)),7)),2),26)),(10,6))))),(11,21))),((19,12),18)),(((14,(8,27)),16),(17,5)));
	TREE 'Tree 5 from search (criterion: minimize Tree value using character matrix)' = ((28,((23,(3,(22,(((13,29),(((20,((((15,25),9),((1,24),4)),7)),2),26)),(10,6))))),(11,21))),((((14,(8,27)),16),(17,5)),((19,12),18)));
	TREE 'Tree 6 from search (criterion: minimize Tree value using character matrix)' = ((12,(((((14,(8,27)),16),(17,5)),(28,((23,(3,(22,(((13,29),(((20,((((15,25),9),((1,24),4)),7)),2),26)),(10,6))))),(11,21)))),18)),19);
	TREE 'Tree 7 from search (criterion: minimize Tree value using character matrix)' = (12,(19,(((((14,(8,27)),16),(17,5)),(28,((23,(3,(22,(((13,29),(((20,((((15,25),9),((1,24),4)),7)),2),26)),(10,6))))),(11,21)))),18)));
	TREE 'Tree 8 from search (criterion: minimize Tree value using character matrix)' = ((((23,(3,(22,(((13,29),(((20,((((15,25),9),((1,24),4)),7)),2),26)),(10,6))))),(11,21)),((((14,(8,27)),16),(17,5)),((19,12),18))),28);
	TREE 'Tree 9 from search (criterion: minimize Tree value using character matrix)' = (((23,(3,(22,(((13,29),(((20,((((15,25),9),((1,24),4)),7)),2),26)),(10,6))))),(11,21)),(28,((((14,(8,27)),16),(17,5)),((19,12),18))));
	TREE 'Tree 1 from search (criterion: minimize Tree value using character matrix)' = (((((12,19),18),((((27,8),14),16),(17,5))),((((((((((((9,(15,25)),((24,1),4)),7),20),2),26),(29,13)),(10,6)),22),3),23),(11,21))),28);
	TREE 'Tree 2 from search (criterion: minimize Tree value using character matrix)' = ((((((((((((((9,(15,25)),((24,1),4)),7),20),2),26),(29,13)),(10,6)),22),3),23),(11,21)),28),(((12,19),18),((((27,8),14),16),(17,5))));
	TREE 'Tree 3 from search (criterion: minimize Tree value using character matrix)' = (((((((((((((9,(15,25)),((24,1),4)),7),20),2),26),(29,13)),(10,6)),22),3),23),(11,21)),((((12,19),18),((((27,8),14),16),(17,5))),28));
	TREE 'Tree 4 from search (criterion: minimize Tree value using character matrix)' = ((((12,19),18),(((((((((((((9,(15,25)),((24,1),4)),7),20),2),26),(29,13)),(10,6)),22),3),23),(11,21)),28)),((((27,8),14),16),(17,5)));
	TREE 'Tree 5 from search (criterion: minimize Tree value using character matrix)' = (((12,19),18),((((((((((((((9,(15,25)),((24,1),4)),7),20),2),26),(29,13)),(10,6)),22),3),23),(11,21)),28),((((27,8),14),16),(17,5))));
	TREE 'Tree 6 from search (criterion: minimize Tree value using character matrix)' = ((18,((((((((((((((9,(15,25)),((24,1),4)),7),20),2),26),(29,13)),(10,6)),22),3),23),(11,21)),28),((((27,8),14),16),(17,5)))),(12,19));
	TREE 'Tree 7 from search (criterion: minimize Tree value using character matrix)' = (18,((12,19),((((((((((((((9,(15,25)),((24,1),4)),7),20),2),26),(29,13)),(10,6)),22),3),23),(11,21)),28),((((27,8),14),16),(17,5)))));
	TREE 'Tree 8 from search (criterion: minimize Tree value using character matrix)' = ((12,(18,((((((((((((((9,(15,25)),((24,1),4)),7),20),2),26),(29,13)),(10,6)),22),3),23),(11,21)),28),((((27,8),14),16),(17,5))))),19);
	TREE 'Tree 9 from search (criterion: minimize Tree value using character matrix)' = (12,((18,((((((((((((((9,(15,25)),((24,1),4)),7),20),2),26),(29,13)),(10,6)),22),3),23),(11,21)),28),((((27,8),14),16),(17,5)))),19));
	TREE 'Tree 1 from search (criterion: minimize Tree value using character matrix)' = ((18,(((((3,((((((20,(((4,(1,24)),((25,15),9)),7)),2),26),(29,13)),(10,6)),22)),23),(21,11)),28),((16,(14,(8,27))),(17,5)))),(12,19));
	TREE 'Tree 2 from search (criterion: minimize Tree value using character matrix)' = ((12,(18,(((((3,((((((20,(((4,(1,24)),((25,15),9)),7)),2),26),(29,13)),(10,6)),22)),23),(21,11)),28),((16,(14,(8,27))),(17,5))))),19);
	TREE 'Tree 3 from search (criterion: minimize Tree value using character matrix)' = (12,((18,(((((3,((((((20,(((4,(1,24)),((25,15),9)),7)),2),26),(29,13)),(10,6)),22)),23),(21,11)),28),((16,(14,(8,27))),(17,5)))),19));
	TREE 'Tree 4 from search (criterion: minimize Tree value using character matrix)' = (((((((3,((((((20,(((4,(1,24)),((25,15),9)),7)),2),26),(29,13)),(10,6)),22)),23),(21,11)),28),((16,(14,(8,27))),(17,5))),(12,19)),18);
	TREE 'Tree 5 from search (criterion: minimize Tree value using character matrix)' = ((((((3,((((((20,(((4,(1,24)),((25,15),9)),7)),2),26),(29,13)),(10,6)),22)),23),(21,11)),28),((16,(14,(8,27))),(17,5))),(18,(12,19)));
	TREE 'Tree 6 from search (criterion: minimize Tree value using character matrix)' = ((((16,(14,(8,27))),(17,5)),(18,(12,19))),((((3,((((((20,(((4,(1,24)),((25,15),9)),7)),2),26),(29,13)),(10,6)),22)),23),(21,11)),28));
	TREE 'Tree 7 from search (criterion: minimize Tree value using character matrix)' = (((16,(14,(8,27))),(17,5)),(((((3,((((((20,(((4,(1,24)),((25,15),9)),7)),2),26),(29,13)),(10,6)),22)),23),(21,11)),28),(18,(12,19))));
	TREE 'Tree 8 from search (criterion: minimize Tree value using character matrix)' = (((((3,((((((20,(((4,(1,24)),((25,15),9)),7)),2),26),(29,13)),(10,6)),22)),23),(21,11)),(((16,(14,(8,27))),(17,5)),(18,(12,19)))),28);
	TREE 'Tree 9 from search (criterion: minimize Tree value using character matrix)' = ((((3,((((((20,(((4,(1,24)),((25,15),9)),7)),2),26),(29,13)),(10,6)),22)),23),(21,11)),((((16,(14,(8,27))),(17,5)),(18,(12,19))),28));
	TREE 'Tree 1 from search (criterion: minimize Tree value using character matrix)' = (((((5,17),((14,(27,8)),16)),(28,(((3,(22,((10,6),((13,29),(26,(2,(20,(7,((4,(24,1)),((25,15),9)))))))))),23),(21,11)))),18),(19,12));
	TREE 'Tree 2 from search (criterion: minimize Tree value using character matrix)' = ((19,((((5,17),((14,(27,8)),16)),(28,(((3,(22,((10,6),((13,29),(26,(2,(20,(7,((4,(24,1)),((25,15),9)))))))))),23),(21,11)))),18)),12);
	TREE 'Tree 3 from search (criterion: minimize Tree value using character matrix)' = (19,(((((5,17),((14,(27,8)),16)),(28,(((3,(22,((10,6),((13,29),(26,(2,(20,(7,((4,(24,1)),((25,15),9)))))))))),23),(21,11)))),18),12));
	TREE 'Tree 4 from search (criterion: minimize Tree value using character matrix)' = ((18,(19,12)),(((5,17),((14,(27,8)),16)),(28,(((3,(22,((10,6),((13,29),(26,(2,(20,(7,((4,(24,1)),((25,15),9)))))))))),23),(21,11)))));
	TREE 'Tree 5 from search (criterion: minimize Tree value using character matrix)' = (18,((((5,17),((14,(27,8)),16)),(28,(((3,(22,((10,6),((13,29),(26,(2,(20,(7,((4,(24,1)),((25,15),9)))))))))),23),(21,11)))),(19,12)));
	TREE 'Tree 6 from search (criterion: minimize Tree value using character matrix)' = ((((5,17),((14,(27,8)),16)),(18,(19,12))),(28,(((3,(22,((10,6),((13,29),(26,(2,(20,(7,((4,(24,1)),((25,15),9)))))))))),23),(21,11))));
	TREE 'Tree 7 from search (criterion: minimize Tree value using character matrix)' = (((5,17),((14,(27,8)),16)),((18,(19,12)),(28,(((3,(22,((10,6),((13,29),(26,(2,(20,(7,((4,(24,1)),((25,15),9)))))))))),23),(21,11)))));
	TREE 'Tree 8 from search (criterion: minimize Tree value using character matrix)' = ((28,(((5,17),((14,(27,8)),16)),(18,(19,12)))),(((3,(22,((10,6),((13,29),(26,(2,(20,(7,((4,(24,1)),((25,15),9)))))))))),23),(21,11)));
	TREE 'Tree 9 from search (criterion: minimize Tree value using character matrix)' = (28,((((5,17),((14,(27,8)),16)),(18,(19,12))),(((3,(22,((10,6),((13,29),(26,(2,(20,(7,((4,(24,1)),((25,15),9)))))))))),23),(21,11))));
	TREE 'Tree 1 from search (criterion: minimize Tree value using character matrix)' = (((28,((21,11),(23,(3,(22,((10,6),((13,29),(26,(2,(20,((((1,24),4),(9,(15,25))),7))))))))))),(18,(12,19))),((5,17),((14,(27,8)),16)));
	TREE 'Tree 2 from search (criterion: minimize Tree value using character matrix)' = (((18,(12,19)),((5,17),((14,(27,8)),16))),(28,((21,11),(23,(3,(22,((10,6),((13,29),(26,(2,(20,((((1,24),4),(9,(15,25))),7))))))))))));
	TREE 'Tree 3 from search (criterion: minimize Tree value using character matrix)' = ((18,(12,19)),((28,((21,11),(23,(3,(22,((10,6),((13,29),(26,(2,(20,((((1,24),4),(9,(15,25))),7))))))))))),((5,17),((14,(27,8)),16))));
	TREE 'Tree 4 from search (criterion: minimize Tree value using character matrix)' = ((28,((18,(12,19)),((5,17),((14,(27,8)),16)))),((21,11),(23,(3,(22,((10,6),((13,29),(26,(2,(20,((((1,24),4),(9,(15,25))),7)))))))))));
	TREE 'Tree 5 from search (criterion: minimize Tree value using character matrix)' = (28,(((18,(12,19)),((5,17),((14,(27,8)),16))),((21,11),(23,(3,(22,((10,6),((13,29),(26,(2,(20,((((1,24),4),(9,(15,25))),7))))))))))));
	TREE 'Tree 6 from search (criterion: minimize Tree value using character matrix)' = (((12,19),((28,((21,11),(23,(3,(22,((10,6),((13,29),(26,(2,(20,((((1,24),4),(9,(15,25))),7))))))))))),((5,17),((14,(27,8)),16)))),18);
	TREE 'Tree 7 from search (criterion: minimize Tree value using character matrix)' = ((12,19),(18,((28,((21,11),(23,(3,(22,((10,6),((13,29),(26,(2,(20,((((1,24),4),(9,(15,25))),7))))))))))),((5,17),((14,(27,8)),16)))));
	TREE 'Tree 8 from search (criterion: minimize Tree value using character matrix)' = ((19,(18,((28,((21,11),(23,(3,(22,((10,6),((13,29),(26,(2,(20,((((1,24),4),(9,(15,25))),7))))))))))),((5,17),((14,(27,8)),16))))),12);
	TREE 'Tree 9 from search (criterion: minimize Tree value using character matrix)' = (19,(12,(18,((28,((21,11),(23,(3,(22,((10,6),((13,29),(26,(2,(20,((((1,24),4),(9,(15,25))),7))))))))))),((5,17),((14,(27,8)),16))))));
	TREE 'Tree 1 from search (criterion: minimize Tree value using character matrix)' = (((((16,(14,(27,8))),(17,5)),((19,12),18)),28),((((22,(((13,29),((2,(20,((((25,15),9),((1,24),4)),7))),26)),(6,10))),3),23),(11,21)));
	TREE 'Tree 2 from search (criterion: minimize Tree value using character matrix)' = ((28,((((22,(((13,29),((2,(20,((((25,15),9),((1,24),4)),7))),26)),(6,10))),3),23),(11,21))),(((16,(14,(27,8))),(17,5)),((19,12),18)));
	TREE 'Tree 3 from search (criterion: minimize Tree value using character matrix)' = (28,((((16,(14,(27,8))),(17,5)),((19,12),18)),((((22,(((13,29),((2,(20,((((25,15),9),((1,24),4)),7))),26)),(6,10))),3),23),(11,21))));
	TREE 'Tree 4 from search (criterion: minimize Tree value using character matrix)' = ((((16,(14,(27,8))),(17,5)),(28,((((22,(((13,29),((2,(20,((((25,15),9),((1,24),4)),7))),26)),(6,10))),3),23),(11,21)))),((19,12),18));
	TREE 'Tree 5 from search (criterion: minimize Tree value using character matrix)' = (((16,(14,(27,8))),(17,5)),((28,((((22,(((13,29),((2,(20,((((25,15),9),((1,24),4)),7))),26)),(6,10))),3),23),(11,21))),((19,12),18)));
	TREE 'Tree 6 from search (criterion: minimize Tree value using character matrix)' = (((19,12),(((16,(14,(27,8))),(17,5)),(28,((((22,(((13,29),((2,(20,((((25,15),9),((1,24),4)),7))),26)),(6,10))),3),23),(11,21))))),18);
	TREE 'Tree 7 from search (criterion: minimize Tree value using character matrix)' = ((19,12),((((16,(14,(27,8))),(17,5)),(28,((((22,(((13,29),((2,(20,((((25,15),9),((1,24),4)),7))),26)),(6,10))),3),23),(11,21)))),18));
	TREE 'Tree 8 from search (criterion: minimize Tree value using character matrix)' = ((12,((((16,(14,(27,8))),(17,5)),(28,((((22,(((13,29),((2,(20,((((25,15),9),((1,24),4)),7))),26)),(6,10))),3),23),(11,21)))),18)),19);
	TREE 'Tree 9 from search (criterion: minimize Tree value using character matrix)' = (12,(19,((((16,(14,(27,8))),(17,5)),(28,((((22,(((13,29),((2,(20,((((25,15),9),((1,24),4)),7))),26)),(6,10))),3),23),(11,21)))),18)));
	TREE 'Tree 2 from search (criterion: minimize Tree value using character matrix)' = ((((28,((21,11),(23,(3,(((10,6),((29,13),(26,((20,(((4,(1,24)),((25,15),9)),7)),2)))),22))))),((16,(14,(27,8))),(17,5))),18),(12,19));
	TREE 'Tree 3 from search (criterion: minimize Tree value using character matrix)' = (((28,((21,11),(23,(3,(((10,6),((29,13),(26,((20,(((4,(1,24)),((25,15),9)),7)),2)))),22))))),((16,(14,(27,8))),(17,5))),(18,(12,19)));
	TREE 'Tree 4 from search (criterion: minimize Tree value using character matrix)' = ((12,(((28,((21,11),(23,(3,(((10,6),((29,13),(26,((20,(((4,(1,24)),((25,15),9)),7)),2)))),22))))),((16,(14,(27,8))),(17,5))),18)),19);
	TREE 'Tree 5 from search (criterion: minimize Tree value using character matrix)' = (12,((((28,((21,11),(23,(3,(((10,6),((29,13),(26,((20,(((4,(1,24)),((25,15),9)),7)),2)))),22))))),((16,(14,(27,8))),(17,5))),18),19));
	TREE 'Tree 6 from search (criterion: minimize Tree value using character matrix)' = ((((16,(14,(27,8))),(17,5)),(18,(12,19))),(28,((21,11),(23,(3,(((10,6),((29,13),(26,((20,(((4,(1,24)),((25,15),9)),7)),2)))),22))))));
	TREE 'Tree 7 from search (criterion: minimize Tree value using character matrix)' = (((16,(14,(27,8))),(17,5)),((28,((21,11),(23,(3,(((10,6),((29,13),(26,((20,(((4,(1,24)),((25,15),9)),7)),2)))),22))))),(18,(12,19))));
	TREE 'Tree 8 from search (criterion: minimize Tree value using character matrix)' = ((28,(((16,(14,(27,8))),(17,5)),(18,(12,19)))),((21,11),(23,(3,(((10,6),((29,13),(26,((20,(((4,(1,24)),((25,15),9)),7)),2)))),22)))));
	TREE 'Tree 9 from search (criterion: minimize Tree value using character matrix)' = (28,((((16,(14,(27,8))),(17,5)),(18,(12,19))),((21,11),(23,(3,(((10,6),((29,13),(26,((20,(((4,(1,24)),((25,15),9)),7)),2)))),22))))));
	TREE 'Tree 1 from search (criterion: minimize Tree value using character matrix)' = ((((12,19),18),(((11,21),((3,(22,((((2,(20,(((9,(15,25)),((1,24),4)),7))),26),(29,13)),(6,10)))),23)),28)),((17,5),(((8,27),14),16)));
	TREE 'Tree 2 from search (criterion: minimize Tree value using character matrix)' = (((((11,21),((3,(22,((((2,(20,(((9,(15,25)),((1,24),4)),7))),26),(29,13)),(6,10)))),23)),28),((17,5),(((8,27),14),16))),((12,19),18));
	TREE 'Tree 3 from search (criterion: minimize Tree value using character matrix)' = ((((11,21),((3,(22,((((2,(20,(((9,(15,25)),((1,24),4)),7))),26),(29,13)),(6,10)))),23)),28),(((12,19),18),((17,5),(((8,27),14),16))));
	TREE 'Tree 4 from search (criterion: minimize Tree value using character matrix)' = (((12,19),((((11,21),((3,(22,((((2,(20,(((9,(15,25)),((1,24),4)),7))),26),(29,13)),(6,10)))),23)),28),((17,5),(((8,27),14),16)))),18);
	TREE 'Tree 5 from search (criterion: minimize Tree value using character matrix)' = ((12,19),(((((11,21),((3,(22,((((2,(20,(((9,(15,25)),((1,24),4)),7))),26),(29,13)),(6,10)))),23)),28),((17,5),(((8,27),14),16))),18));
	TREE 'Tree 6 from search (criterion: minimize Tree value using character matrix)' = ((28,(((12,19),18),((17,5),(((8,27),14),16)))),((11,21),((3,(22,((((2,(20,(((9,(15,25)),((1,24),4)),7))),26),(29,13)),(6,10)))),23)));
	TREE 'Tree 7 from search (criterion: minimize Tree value using character matrix)' = (28,(((11,21),((3,(22,((((2,(20,(((9,(15,25)),((1,24),4)),7))),26),(29,13)),(6,10)))),23)),(((12,19),18),((17,5),(((8,27),14),16)))));
	TREE 'Tree 8 from search (criterion: minimize Tree value using character matrix)' = ((19,(((((11,21),((3,(22,((((2,(20,(((9,(15,25)),((1,24),4)),7))),26),(29,13)),(6,10)))),23)),28),((17,5),(((8,27),14),16))),18)),12);
	TREE 'Tree 9 from search (criterion: minimize Tree value using character matrix)' = (19,(12,(((((11,21),((3,(22,((((2,(20,(((9,(15,25)),((1,24),4)),7))),26),(29,13)),(6,10)))),23)),28),((17,5),(((8,27),14),16))),18)));
	TREE 'Tree 1 from search (criterion: minimize Tree value using character matrix)' = ((((((14,(27,8)),16),(5,17)),((19,12),18)),28),((11,21),(23,((22,((((((((9,(25,15)),((24,1),4)),7),20),2),26),(13,29)),(10,6))),3))));
	TREE 'Tree 2 from search (criterion: minimize Tree value using character matrix)' = ((28,((11,21),(23,((22,((((((((9,(25,15)),((24,1),4)),7),20),2),26),(13,29)),(10,6))),3)))),((((14,(27,8)),16),(5,17)),((19,12),18)));
	TREE 'Tree 3 from search (criterion: minimize Tree value using character matrix)' = (28,(((((14,(27,8)),16),(5,17)),((19,12),18)),((11,21),(23,((22,((((((((9,(25,15)),((24,1),4)),7),20),2),26),(13,29)),(10,6))),3)))));
	TREE 'Tree 4 from search (criterion: minimize Tree value using character matrix)' = (((((14,(27,8)),16),(5,17)),(28,((11,21),(23,((22,((((((((9,(25,15)),((24,1),4)),7),20),2),26),(13,29)),(10,6))),3))))),((19,12),18));
	TREE 'Tree 5 from search (criterion: minimize Tree value using character matrix)' = ((((14,(27,8)),16),(5,17)),((28,((11,21),(23,((22,((((((((9,(25,15)),((24,1),4)),7),20),2),26),(13,29)),(10,6))),3)))),((19,12),18)));
	TREE 'Tree 6 from search (criterion: minimize Tree value using character matrix)' = (((19,12),((((14,(27,8)),16),(5,17)),(28,((11,21),(23,((22,((((((((9,(25,15)),((24,1),4)),7),20),2),26),(13,29)),(10,6))),3)))))),18);
	TREE 'Tree 7 from search (criterion: minimize Tree value using character matrix)' = ((19,12),(((((14,(27,8)),16),(5,17)),(28,((11,21),(23,((22,((((((((9,(25,15)),((24,1),4)),7),20),2),26),(13,29)),(10,6))),3))))),18));
	TREE 'Tree 8 from search (criterion: minimize Tree value using character matrix)' = ((12,(((((14,(27,8)),16),(5,17)),(28,((11,21),(23,((22,((((((((9,(25,15)),((24,1),4)),7),20),2),26),(13,29)),(10,6))),3))))),18)),19);
	TREE 'Tree 9 from search (criterion: minimize Tree value using character matrix)' = (12,(19,(((((14,(27,8)),16),(5,17)),(28,((11,21),(23,((22,((((((((9,(25,15)),((24,1),4)),7),20),2),26),(13,29)),(10,6))),3))))),18)));
	TREE 'Tree 1 from search (criterion: minimize Tree value using character matrix)' = (((((11,21),(((((10,6),((13,29),(26,(2,(20,(7,(((1,24),4),(9,(15,25))))))))),22),3),23)),28),((19,12),18)),((5,17),(((8,27),14),16)));
	TREE 'Tree 2 from search (criterion: minimize Tree value using character matrix)' = ((((19,12),18),((5,17),(((8,27),14),16))),(((11,21),(((((10,6),((13,29),(26,(2,(20,(7,(((1,24),4),(9,(15,25))))))))),22),3),23)),28));
	TREE 'Tree 3 from search (criterion: minimize Tree value using character matrix)' = (((19,12),18),((((11,21),(((((10,6),((13,29),(26,(2,(20,(7,(((1,24),4),(9,(15,25))))))))),22),3),23)),28),((5,17),(((8,27),14),16))));
	TREE 'Tree 4 from search (criterion: minimize Tree value using character matrix)' = ((((11,21),(((((10,6),((13,29),(26,(2,(20,(7,(((1,24),4),(9,(15,25))))))))),22),3),23)),(((19,12),18),((5,17),(((8,27),14),16)))),28);
	TREE 'Tree 5 from search (criterion: minimize Tree value using character matrix)' = (((11,21),(((((10,6),((13,29),(26,(2,(20,(7,(((1,24),4),(9,(15,25))))))))),22),3),23)),((((19,12),18),((5,17),(((8,27),14),16))),28));
	TREE 'Tree 6 from search (criterion: minimize Tree value using character matrix)' = ((18,((((11,21),(((((10,6),((13,29),(26,(2,(20,(7,(((1,24),4),(9,(15,25))))))))),22),3),23)),28),((5,17),(((8,27),14),16)))),(19,12));
	TREE 'Tree 7 from search (criterion: minimize Tree value using character matrix)' = (18,((19,12),((((11,21),(((((10,6),((13,29),(26,(2,(20,(7,(((1,24),4),(9,(15,25))))))))),22),3),23)),28),((5,17),(((8,27),14),16)))));
	TREE 'Tree 8 from search (criterion: minimize Tree value using character matrix)' = ((19,(18,((((11,21),(((((10,6),((13,29),(26,(2,(20,(7,(((1,24),4),(9,(15,25))))))))),22),3),23)),28),((5,17),(((8,27),14),16))))),12);
	TREE 'Tree 9 from search (criterion: minimize Tree value using character matrix)' = (19,((18,((((11,21),(((((10,6),((13,29),(26,(2,(20,(7,(((1,24),4),(9,(15,25))))))))),22),3),23)),28),((5,17),(((8,27),14),16)))),12));
	TREE 'Tree 1 from search (criterion: minimize Tree value using character matrix)' = (((((8,27),14),16),(5,17)),((((11,21),(((22,(((((((((25,15),9),((1,24),4)),7),20),2),26),(29,13)),(10,6))),3),23)),28),(18,(12,19))));
	TREE 'Tree 2 from search (criterion: minimize Tree value using character matrix)' = (((((11,21),(((22,(((((((((25,15),9),((1,24),4)),7),20),2),26),(29,13)),(10,6))),3),23)),28),((((8,27),14),16),(5,17))),(18,(12,19)));
	TREE 'Tree 3 from search (criterion: minimize Tree value using character matrix)' = ((((11,21),(((22,(((((((((25,15),9),((1,24),4)),7),20),2),26),(29,13)),(10,6))),3),23)),28),(((((8,27),14),16),(5,17)),(18,(12,19))));
	TREE 'Tree 4 from search (criterion: minimize Tree value using character matrix)' = ((18,((((11,21),(((22,(((((((((25,15),9),((1,24),4)),7),20),2),26),(29,13)),(10,6))),3),23)),28),((((8,27),14),16),(5,17)))),(12,19));
	TREE 'Tree 5 from search (criterion: minimize Tree value using character matrix)' = (18,(((((11,21),(((22,(((((((((25,15),9),((1,24),4)),7),20),2),26),(29,13)),(10,6))),3),23)),28),((((8,27),14),16),(5,17))),(12,19)));
	TREE 'Tree 6 from search (criterion: minimize Tree value using character matrix)' = ((28,(((((8,27),14),16),(5,17)),(18,(12,19)))),((11,21),(((22,(((((((((25,15),9),((1,24),4)),7),20),2),26),(29,13)),(10,6))),3),23)));
	TREE 'Tree 7 from search (criterion: minimize Tree value using character matrix)' = (28,(((11,21),(((22,(((((((((25,15),9),((1,24),4)),7),20),2),26),(29,13)),(10,6))),3),23)),(((((8,27),14),16),(5,17)),(18,(12,19)))));
	TREE 'Tree 8 from search (criterion: minimize Tree value using character matrix)' = ((12,(18,((((11,21),(((22,(((((((((25,15),9),((1,24),4)),7),20),2),26),(29,13)),(10,6))),3),23)),28),((((8,27),14),16),(5,17))))),19);
	TREE 'Tree 9 from search (criterion: minimize Tree value using character matrix)' = (12,((18,((((11,21),(((22,(((((((((25,15),9),((1,24),4)),7),20),2),26),(29,13)),(10,6))),3),23)),28),((((8,27),14),16),(5,17)))),19));
	TREE 'Tree 1 from search (criterion: minimize Tree value using character matrix)' = (((21,11),(23,(3,(22,((10,6),((26,(2,(20,(((9,(25,15)),((24,1),4)),7)))),(29,13))))))),((((17,5),(((27,8),14),16)),(18,(19,12))),28));
	TREE 'Tree 2 from search (criterion: minimize Tree value using character matrix)' = (((((17,5),(((27,8),14),16)),(18,(19,12))),((21,11),(23,(3,(22,((10,6),((26,(2,(20,(((9,(25,15)),((24,1),4)),7)))),(29,13)))))))),28);
	TREE 'Tree 3 from search (criterion: minimize Tree value using character matrix)' = ((((17,5),(((27,8),14),16)),(18,(19,12))),(((21,11),(23,(3,(22,((10,6),((26,(2,(20,(((9,(25,15)),((24,1),4)),7)))),(29,13))))))),28));
	TREE 'Tree 4 from search (criterion: minimize Tree value using character matrix)' = (((18,(19,12)),(((21,11),(23,(3,(22,((10,6),((26,(2,(20,(((9,(25,15)),((24,1),4)),7)))),(29,13))))))),28)),((17,5),(((27,8),14),16)));
	TREE 'Tree 5 from search (criterion: minimize Tree value using character matrix)' = ((18,(19,12)),(((17,5),(((27,8),14),16)),(((21,11),(23,(3,(22,((10,6),((26,(2,(20,(((9,(25,15)),((24,1),4)),7)))),(29,13))))))),28)));
	TREE 'Tree 6 from search (criterion: minimize Tree value using character matrix)' = (((19,12),(((17,5),(((27,8),14),16)),(((21,11),(23,(3,(22,((10,6),((26,(2,(20,(((9,(25,15)),((24,1),4)),7)))),(29,13))))))),28))),18);
	TREE 'Tree 7 from search (criterion: minimize Tree value using character matrix)' = ((19,12),(18,(((17,5),(((27,8),14),16)),(((21,11),(23,(3,(22,((10,6),((26,(2,(20,(((9,(25,15)),((24,1),4)),7)))),(29,13))))))),28))));
	TREE 'Tree 8 from search (criterion: minimize Tree value using character matrix)' = ((12,(18,(((17,5),(((27,8),14),16)),(((21,11),(23,(3,(22,((10,6),((26,(2,(20,(((9,(25,15)),((24,1),4)),7)))),(29,13))))))),28)))),19);
	TREE 'Tree 9 from search (criterion: minimize Tree value using character matrix)' = (12,(19,(18,(((17,5),(((27,8),14),16)),(((21,11),(23,(3,(22,((10,6),((26,(2,(20,(((9,(25,15)),((24,1),4)),7)))),(29,13))))))),28)))));
	TREE 'Tree 1 from search (criterion: minimize Tree value using character matrix)' = (((((((23,((22,((10,6),(((2,((7,((9,(25,15)),((24,1),4))),20)),26),(29,13)))),3)),(11,21)),28),(((14,(27,8)),16),(17,5))),18),19),12);
	TREE 'Tree 2 from search (criterion: minimize Tree value using character matrix)' = ((19,12),(((((23,((22,((10,6),(((2,((7,((9,(25,15)),((24,1),4))),20)),26),(29,13)))),3)),(11,21)),28),(((14,(27,8)),16),(17,5))),18));
	TREE 'Tree 3 from search (criterion: minimize Tree value using character matrix)' = (19,((((((23,((22,((10,6),(((2,((7,((9,(25,15)),((24,1),4))),20)),26),(29,13)))),3)),(11,21)),28),(((14,(27,8)),16),(17,5))),18),12));
	TREE 'Tree 4 from search (criterion: minimize Tree value using character matrix)' = ((((((23,((22,((10,6),(((2,((7,((9,(25,15)),((24,1),4))),20)),26),(29,13)))),3)),(11,21)),28),(((14,(27,8)),16),(17,5))),(19,12)),18);
	TREE 'Tree 5 from search (criterion: minimize Tree value using character matrix)' = (((((23,((22,((10,6),(((2,((7,((9,(25,15)),((24,1),4))),20)),26),(29,13)))),3)),(11,21)),28),(((14,(27,8)),16),(17,5))),((19,12),18));
	TREE 'Tree 6 from search (criterion: minimize Tree value using character matrix)' = (((((14,(27,8)),16),(17,5)),((19,12),18)),(((23,((22,((10,6),(((2,((7,((9,(25,15)),((24,1),4))),20)),26),(29,13)))),3)),(11,21)),28));
	TREE 'Tree 7 from search (criterion: minimize Tree value using character matrix)' = ((((14,(27,8)),16),(17,5)),((((23,((22,((10,6),(((2,((7,((9,(25,15)),((24,1),4))),20)),26),(29,13)))),3)),(11,21)),28),((19,12),18)));
	TREE 'Tree 8 from search (criterion: minimize Tree value using character matrix)' = ((((23,((22,((10,6),(((2,((7,((9,(25,15)),((24,1),4))),20)),26),(29,13)))),3)),(11,21)),((((14,(27,8)),16),(17,5)),((19,12),18))),28);
	TREE 'Tree 9 from search (criterion: minimize Tree value using character matrix)' = (((23,((22,((10,6),(((2,((7,((9,(25,15)),((24,1),4))),20)),26),(29,13)))),3)),(11,21)),(((((14,(27,8)),16),(17,5)),((19,12),18)),28));
	TREE 'Tree 1 from search (criterion: minimize Tree value using character matrix)' = (((((16,((8,27),14)),(17,5)),(18,(19,12))),((21,11),(((22,(((((((((15,25),9),((1,24),4)),7),20),2),26),(13,29)),(6,10))),3),23))),28);
	TREE 'Tree 2 from search (criterion: minimize Tree value using character matrix)' = ((((21,11),(((22,(((((((((15,25),9),((1,24),4)),7),20),2),26),(13,29)),(6,10))),3),23)),28),(((16,((8,27),14)),(17,5)),(18,(19,12))));
	TREE 'Tree 3 from search (criterion: minimize Tree value using character matrix)' = (((21,11),(((22,(((((((((15,25),9),((1,24),4)),7),20),2),26),(13,29)),(6,10))),3),23)),((((16,((8,27),14)),(17,5)),(18,(19,12))),28));
	TREE 'Tree 4 from search (criterion: minimize Tree value using character matrix)' = ((((16,((8,27),14)),(17,5)),(((21,11),(((22,(((((((((15,25),9),((1,24),4)),7),20),2),26),(13,29)),(6,10))),3),23)),28)),(18,(19,12)));
	TREE 'Tree 5 from search (criterion: minimize Tree value using character matrix)' = (((16,((8,27),14)),(17,5)),((((21,11),(((22,(((((((((15,25),9),((1,24),4)),7),20),2),26),(13,29)),(6,10))),3),23)),28),(18,(19,12))));
	TREE 'Tree 6 from search (criterion: minimize Tree value using character matrix)' = ((18,(((16,((8,27),14)),(17,5)),(((21,11),(((22,(((((((((15,25),9),((1,24),4)),7),20),2),26),(13,29)),(6,10))),3),23)),28))),(19,12));
	TREE 'Tree 7 from search (criterion: minimize Tree value using character matrix)' = (18,((((16,((8,27),14)),(17,5)),(((21,11),(((22,(((((((((15,25),9),((1,24),4)),7),20),2),26),(13,29)),(6,10))),3),23)),28)),(19,12)));
	TREE 'Tree 8 from search (criterion: minimize Tree value using character matrix)' = ((19,(18,(((16,((8,27),14)),(17,5)),(((21,11),(((22,(((((((((15,25),9),((1,24),4)),7),20),2),26),(13,29)),(6,10))),3),23)),28)))),12);
	TREE 'Tree 9 from search (criterion: minimize Tree value using character matrix)' = (19,((18,(((16,((8,27),14)),(17,5)),(((21,11),(((22,(((((((((15,25),9),((1,24),4)),7),20),2),26),(13,29)),(6,10))),3),23)),28))),12));
	TREE 'Tree 1 from search (criterion: minimize Tree value using character matrix)' = (((18,(19,12)),(28,((23,((((10,6),((13,29),(26,(2,(20,(((9,(15,25)),((24,1),4)),7)))))),22),3)),(11,21)))),((5,17),(16,(14,(27,8)))));
	TREE 'Tree 2 from search (criterion: minimize Tree value using character matrix)' = (((28,((23,((((10,6),((13,29),(26,(2,(20,(((9,(15,25)),((24,1),4)),7)))))),22),3)),(11,21))),((5,17),(16,(14,(27,8))))),(18,(19,12)));
	TREE 'Tree 3 from search (criterion: minimize Tree value using character matrix)' = ((28,((23,((((10,6),((13,29),(26,(2,(20,(((9,(15,25)),((24,1),4)),7)))))),22),3)),(11,21))),((18,(19,12)),((5,17),(16,(14,(27,8))))));
	TREE 'Tree 4 from search (criterion: minimize Tree value using character matrix)' = ((18,((28,((23,((((10,6),((13,29),(26,(2,(20,(((9,(15,25)),((24,1),4)),7)))))),22),3)),(11,21))),((5,17),(16,(14,(27,8)))))),(19,12));
	TREE 'Tree 5 from search (criterion: minimize Tree value using character matrix)' = (18,(((28,((23,((((10,6),((13,29),(26,(2,(20,(((9,(15,25)),((24,1),4)),7)))))),22),3)),(11,21))),((5,17),(16,(14,(27,8))))),(19,12)));
	TREE 'Tree 6 from search (criterion: minimize Tree value using character matrix)' = ((((23,((((10,6),((13,29),(26,(2,(20,(((9,(15,25)),((24,1),4)),7)))))),22),3)),(11,21)),((18,(19,12)),((5,17),(16,(14,(27,8)))))),28);
	TREE 'Tree 7 from search (criterion: minimize Tree value using character matrix)' = (((23,((((10,6),((13,29),(26,(2,(20,(((9,(15,25)),((24,1),4)),7)))))),22),3)),(11,21)),(28,((18,(19,12)),((5,17),(16,(14,(27,8)))))));
	TREE 'Tree 8 from search (criterion: minimize Tree value using character matrix)' = ((19,(18,((28,((23,((((10,6),((13,29),(26,(2,(20,(((9,(15,25)),((24,1),4)),7)))))),22),3)),(11,21))),((5,17),(16,(14,(27,8))))))),12);
	TREE 'Tree 9 from search (criterion: minimize Tree value using character matrix)' = (19,((18,((28,((23,((((10,6),((13,29),(26,(2,(20,(((9,(15,25)),((24,1),4)),7)))))),22),3)),(11,21))),((5,17),(16,(14,(27,8)))))),12));
	TREE 'Tree 1 from search (criterion: minimize Tree value using character matrix)' = (((23,(((((26,(2,(20,((((25,15),9),((24,1),4)),7)))),(29,13)),(10,6)),22),3)),(21,11)),((((12,19),18),((16,((27,8),14)),(17,5))),28));
	TREE 'Tree 2 from search (criterion: minimize Tree value using character matrix)' = (((((12,19),18),((16,((27,8),14)),(17,5))),((23,(((((26,(2,(20,((((25,15),9),((24,1),4)),7)))),(29,13)),(10,6)),22),3)),(21,11))),28);
	TREE 'Tree 3 from search (criterion: minimize Tree value using character matrix)' = ((((12,19),18),((16,((27,8),14)),(17,5))),(((23,(((((26,(2,(20,((((25,15),9),((24,1),4)),7)))),(29,13)),(10,6)),22),3)),(21,11)),28));
	TREE 'Tree 4 from search (criterion: minimize Tree value using character matrix)' = ((((16,((27,8),14)),(17,5)),(((23,(((((26,(2,(20,((((25,15),9),((24,1),4)),7)))),(29,13)),(10,6)),22),3)),(21,11)),28)),((12,19),18));
	TREE 'Tree 5 from search (criterion: minimize Tree value using character matrix)' = (((16,((27,8),14)),(17,5)),(((12,19),18),(((23,(((((26,(2,(20,((((25,15),9),((24,1),4)),7)))),(29,13)),(10,6)),22),3)),(21,11)),28)));
	TREE 'Tree 6 from search (criterion: minimize Tree value using character matrix)' = (((12,19),(((16,((27,8),14)),(17,5)),(((23,(((((26,(2,(20,((((25,15),9),((24,1),4)),7)))),(29,13)),(10,6)),22),3)),(21,11)),28))),18);
	TREE 'Tree 7 from search (criterion: minimize Tree value using character matrix)' = ((12,19),((((16,((27,8),14)),(17,5)),(((23,(((((26,(2,(20,((((25,15),9),((24,1),4)),7)))),(29,13)),(10,6)),22),3)),(21,11)),28)),18));
	TREE 'Tree 8 from search (criterion: minimize Tree value using character matrix)' = ((19,((((16,((27,8),14)),(17,5)),(((23,(((((26,(2,(20,((((25,15),9),((24,1),4)),7)))),(29,13)),(10,6)),22),3)),(21,11)),28)),18)),12);
	TREE 'Tree 9 from search (criterion: minimize Tree value using character matrix)' = (19,(12,((((16,((27,8),14)),(17,5)),(((23,(((((26,(2,(20,((((25,15),9),((24,1),4)),7)))),(29,13)),(10,6)),22),3)),(21,11)),28)),18)));
	TREE 'Tree 1 from search (criterion: minimize Tree value using character matrix)' = (((((23,((22,((10,6),((((((((15,25),9),((24,1),4)),7),20),2),26),(13,29)))),3)),(21,11)),28),(18,(19,12))),((17,5),(((27,8),14),16)));
	TREE 'Tree 2 from search (criterion: minimize Tree value using character matrix)' = (((18,(19,12)),((17,5),(((27,8),14),16))),(((23,((22,((10,6),((((((((15,25),9),((24,1),4)),7),20),2),26),(13,29)))),3)),(21,11)),28));
	TREE 'Tree 3 from search (criterion: minimize Tree value using character matrix)' = ((18,(19,12)),((((23,((22,((10,6),((((((((15,25),9),((24,1),4)),7),20),2),26),(13,29)))),3)),(21,11)),28),((17,5),(((27,8),14),16))));
	TREE 'Tree 4 from search (criterion: minimize Tree value using character matrix)' = ((((23,((22,((10,6),((((((((15,25),9),((24,1),4)),7),20),2),26),(13,29)))),3)),(21,11)),((18,(19,12)),((17,5),(((27,8),14),16)))),28);
	TREE 'Tree 5 from search (criterion: minimize Tree value using character matrix)' = (((23,((22,((10,6),((((((((15,25),9),((24,1),4)),7),20),2),26),(13,29)))),3)),(21,11)),(((18,(19,12)),((17,5),(((27,8),14),16))),28));
	TREE 'Tree 6 from search (criterion: minimize Tree value using character matrix)' = (((19,12),((((23,((22,((10,6),((((((((15,25),9),((24,1),4)),7),20),2),26),(13,29)))),3)),(21,11)),28),((17,5),(((27,8),14),16)))),18);
	TREE 'Tree 7 from search (criterion: minimize Tree value using character matrix)' = ((19,12),(18,((((23,((22,((10,6),((((((((15,25),9),((24,1),4)),7),20),2),26),(13,29)))),3)),(21,11)),28),((17,5),(((27,8),14),16)))));
	TREE 'Tree 8 from search (criterion: minimize Tree value using character matrix)' = ((12,(18,((((23,((22,((10,6),((((((((15,25),9),((24,1),4)),7),20),2),26),(13,29)))),3)),(21,11)),28),((17,5),(((27,8),14),16))))),19);
	TREE 'Tree 9 from search (criterion: minimize Tree value using character matrix)' = (12,(19,(18,((((23,((22,((10,6),((((((((15,25),9),((24,1),4)),7),20),2),26),(13,29)))),3)),(21,11)),28),((17,5),(((27,8),14),16))))));
	TREE 'Tree 1 from search (criterion: minimize Tree value using character matrix)' = (((12,19),((28,((23,((((10,6),((29,13),(26,(2,(20,(7,((4,(24,1)),((15,25),9)))))))),22),3)),(11,21))),((((8,27),14),16),(5,17)))),18);
	TREE 'Tree 2 from search (criterion: minimize Tree value using character matrix)' = ((((28,((23,((((10,6),((29,13),(26,(2,(20,(7,((4,(24,1)),((15,25),9)))))))),22),3)),(11,21))),((((8,27),14),16),(5,17))),18),(12,19));
	TREE 'Tree 3 from search (criterion: minimize Tree value using character matrix)' = (((28,((23,((((10,6),((29,13),(26,(2,(20,(7,((4,(24,1)),((15,25),9)))))))),22),3)),(11,21))),((((8,27),14),16),(5,17))),((12,19),18));
	TREE 'Tree 4 from search (criterion: minimize Tree value using character matrix)' = ((12,(((28,((23,((((10,6),((29,13),(26,(2,(20,(7,((4,(24,1)),((15,25),9)))))))),22),3)),(11,21))),((((8,27),14),16),(5,17))),18)),19);
	TREE 'Tree 5 from search (criterion: minimize Tree value using character matrix)' = (12,((((28,((23,((((10,6),((29,13),(26,(2,(20,(7,((4,(24,1)),((15,25),9)))))))),22),3)),(11,21))),((((8,27),14),16),(5,17))),18),19));
	TREE 'Tree 6 from search (criterion: minimize Tree value using character matrix)' = ((((((8,27),14),16),(5,17)),((12,19),18)),(28,((23,((((10,6),((29,13),(26,(2,(20,(7,((4,(24,1)),((15,25),9)))))))),22),3)),(11,21))));
	TREE 'Tree 7 from search (criterion: minimize Tree value using character matrix)' = (((((8,27),14),16),(5,17)),((28,((23,((((10,6),((29,13),(26,(2,(20,(7,((4,(24,1)),((15,25),9)))))))),22),3)),(11,21))),((12,19),18)));
	TREE 'Tree 8 from search (criterion: minimize Tree value using character matrix)' = ((28,(((((8,27),14),16),(5,17)),((12,19),18))),((23,((((10,6),((29,13),(26,(2,(20,(7,((4,(24,1)),((15,25),9)))))))),22),3)),(11,21)));
	TREE 'Tree 9 from search (criterion: minimize Tree value using character matrix)' = (28,((((((8,27),14),16),(5,17)),((12,19),18)),((23,((((10,6),((29,13),(26,(2,(20,(7,((4,(24,1)),((15,25),9)))))))),22),3)),(11,21))));
	TREE 'Tree 1 from search (criterion: minimize Tree value using character matrix)' = (((21,11),(23,((22,(((13,29),((((7,((4,(1,24)),((15,25),9))),20),2),26)),(6,10))),3))),(28,(((17,5),(16,((27,8),14))),((19,12),18))));
	TREE 'Tree 2 from search (criterion: minimize Tree value using character matrix)' = ((28,((21,11),(23,((22,(((13,29),((((7,((4,(1,24)),((15,25),9))),20),2),26)),(6,10))),3)))),(((17,5),(16,((27,8),14))),((19,12),18)));
	TREE 'Tree 3 from search (criterion: minimize Tree value using character matrix)' = (28,(((21,11),(23,((22,(((13,29),((((7,((4,(1,24)),((15,25),9))),20),2),26)),(6,10))),3))),(((17,5),(16,((27,8),14))),((19,12),18))));
	TREE 'Tree 4 from search (criterion: minimize Tree value using character matrix)' = ((((17,5),(16,((27,8),14))),(28,((21,11),(23,((22,(((13,29),((((7,((4,(1,24)),((15,25),9))),20),2),26)),(6,10))),3))))),((19,12),18));
	TREE 'Tree 5 from search (criterion: minimize Tree value using character matrix)' = (((17,5),(16,((27,8),14))),((28,((21,11),(23,((22,(((13,29),((((7,((4,(1,24)),((15,25),9))),20),2),26)),(6,10))),3)))),((19,12),18)));
	TREE 'Tree 6 from search (criterion: minimize Tree value using character matrix)' = (((19,12),(((17,5),(16,((27,8),14))),(28,((21,11),(23,((22,(((13,29),((((7,((4,(1,24)),((15,25),9))),20),2),26)),(6,10))),3)))))),18);
	TREE 'Tree 7 from search (criterion: minimize Tree value using character matrix)' = ((19,12),((((17,5),(16,((27,8),14))),(28,((21,11),(23,((22,(((13,29),((((7,((4,(1,24)),((15,25),9))),20),2),26)),(6,10))),3))))),18));
	TREE 'Tree 8 from search (criterion: minimize Tree value using character matrix)' = ((12,((((17,5),(16,((27,8),14))),(28,((21,11),(23,((22,(((13,29),((((7,((4,(1,24)),((15,25),9))),20),2),26)),(6,10))),3))))),18)),19);
	TREE 'Tree 9 from search (criterion: minimize Tree value using character matrix)' = (12,(19,((((17,5),(16,((27,8),14))),(28,((21,11),(23,((22,(((13,29),((((7,((4,(1,24)),((15,25),9))),20),2),26)),(6,10))),3))))),18)));
	TREE 'Tree 1 from search (criterion: minimize Tree value using character matrix)' = ((((((22,(((26,(2,(20,(7,((9,(15,25)),((1,24),4)))))),(13,29)),(10,6))),3),23),(11,21)),((((14,(27,8)),16),(5,17)),(18,(12,19)))),28);
	TREE 'Tree 2 from search (criterion: minimize Tree value using character matrix)' = ((((((14,(27,8)),16),(5,17)),(18,(12,19))),28),((((22,(((26,(2,(20,(7,((9,(15,25)),((1,24),4)))))),(13,29)),(10,6))),3),23),(11,21)));
	TREE 'Tree 3 from search (criterion: minimize Tree value using character matrix)' = (((((14,(27,8)),16),(5,17)),(18,(12,19))),(((((22,(((26,(2,(20,(7,((9,(15,25)),((1,24),4)))))),(13,29)),(10,6))),3),23),(11,21)),28));
	TREE 'Tree 4 from search (criterion: minimize Tree value using character matrix)' = (((18,(12,19)),(((((22,(((26,(2,(20,(7,((9,(15,25)),((1,24),4)))))),(13,29)),(10,6))),3),23),(11,21)),28)),(((14,(27,8)),16),(5,17)));
	TREE 'Tree 5 from search (criterion: minimize Tree value using character matrix)' = ((18,(12,19)),((((14,(27,8)),16),(5,17)),(((((22,(((26,(2,(20,(7,((9,(15,25)),((1,24),4)))))),(13,29)),(10,6))),3),23),(11,21)),28)));
	TREE 'Tree 6 from search (criterion: minimize Tree value using character matrix)' = (((12,19),((((14,(27,8)),16),(5,17)),(((((22,(((26,(2,(20,(7,((9,(15,25)),((1,24),4)))))),(13,29)),(10,6))),3),23),(11,21)),28))),18);
	TREE 'Tree 7 from search (criterion: minimize Tree value using character matrix)' = ((12,19),(18,((((14,(27,8)),16),(5,17)),(((((22,(((26,(2,(20,(7,((9,(15,25)),((1,24),4)))))),(13,29)),(10,6))),3),23),(11,21)),28))));
	TREE 'Tree 8 from search (criterion: minimize Tree value using character matrix)' = ((19,(18,((((14,(27,8)),16),(5,17)),(((((22,(((26,(2,(20,(7,((9,(15,25)),((1,24),4)))))),(13,29)),(10,6))),3),23),(11,21)),28)))),12);
	TREE 'Tree 9 from search (criterion: minimize Tree value using character matrix)' = (19,(12,(18,((((14,(27,8)),16),(5,17)),(((((22,(((26,(2,(20,(7,((9,(15,25)),((1,24),4)))))),(13,29)),(10,6))),3),23),(11,21)),28)))));
	TREE 'Tree 1 from search (criterion: minimize Tree value using character matrix)' = (((16,(14,(8,27))),(17,5)),((28,((((((10,6),((13,29),(26,(2,(20,(7,((9,(25,15)),((24,1),4)))))))),22),3),23),(21,11))),((19,12),18)));
	TREE 'Tree 2 from search (criterion: minimize Tree value using character matrix)' = (((28,((((((10,6),((13,29),(26,(2,(20,(7,((9,(25,15)),((24,1),4)))))))),22),3),23),(21,11))),((16,(14,(8,27))),(17,5))),((19,12),18));
	TREE 'Tree 3 from search (criterion: minimize Tree value using character matrix)' = ((28,((((((10,6),((13,29),(26,(2,(20,(7,((9,(25,15)),((24,1),4)))))))),22),3),23),(21,11))),(((16,(14,(8,27))),(17,5)),((19,12),18)));
	TREE 'Tree 4 from search (criterion: minimize Tree value using character matrix)' = (((19,12),((28,((((((10,6),((13,29),(26,(2,(20,(7,((9,(25,15)),((24,1),4)))))))),22),3),23),(21,11))),((16,(14,(8,27))),(17,5)))),18);
	TREE 'Tree 5 from search (criterion: minimize Tree value using character matrix)' = ((19,12),(((28,((((((10,6),((13,29),(26,(2,(20,(7,((9,(25,15)),((24,1),4)))))))),22),3),23),(21,11))),((16,(14,(8,27))),(17,5))),18));
	TREE 'Tree 6 from search (criterion: minimize Tree value using character matrix)' = ((((((((10,6),((13,29),(26,(2,(20,(7,((9,(25,15)),((24,1),4)))))))),22),3),23),(21,11)),(((16,(14,(8,27))),(17,5)),((19,12),18))),28);
	TREE 'Tree 7 from search (criterion: minimize Tree value using character matrix)' = (((((((10,6),((13,29),(26,(2,(20,(7,((9,(25,15)),((24,1),4)))))))),22),3),23),(21,11)),(28,(((16,(14,(8,27))),(17,5)),((19,12),18))));
	TREE 'Tree 8 from search (criterion: minimize Tree value using character matrix)' = ((12,(((28,((((((10,6),((13,29),(26,(2,(20,(7,((9,(25,15)),((24,1),4)))))))),22),3),23),(21,11))),((16,(14,(8,27))),(17,5))),18)),19);
	TREE 'Tree 9 from search (criterion: minimize Tree value using character matrix)' = (12,(19,(((28,((((((10,6),((13,29),(26,(2,(20,(7,((9,(25,15)),((24,1),4)))))))),22),3),23),(21,11))),((16,(14,(8,27))),(17,5))),18)));
	TREE 'Tree 1 from search (criterion: minimize Tree value using character matrix)' = (((5,17),(16,((8,27),14))),((28,((23,((22,((6,10),((29,13),(26,(2,(20,(7,((4,(1,24)),((25,15),9))))))))),3)),(21,11))),(18,(12,19))));
	TREE 'Tree 2 from search (criterion: minimize Tree value using character matrix)' = (((28,((23,((22,((6,10),((29,13),(26,(2,(20,(7,((4,(1,24)),((25,15),9))))))))),3)),(21,11))),((5,17),(16,((8,27),14)))),(18,(12,19)));
	TREE 'Tree 3 from search (criterion: minimize Tree value using character matrix)' = ((28,((23,((22,((6,10),((29,13),(26,(2,(20,(7,((4,(1,24)),((25,15),9))))))))),3)),(21,11))),(((5,17),(16,((8,27),14))),(18,(12,19))));
	TREE 'Tree 4 from search (criterion: minimize Tree value using character matrix)' = ((18,((28,((23,((22,((6,10),((29,13),(26,(2,(20,(7,((4,(1,24)),((25,15),9))))))))),3)),(21,11))),((5,17),(16,((8,27),14))))),(12,19));
	TREE 'Tree 5 from search (criterion: minimize Tree value using character matrix)' = (18,(((28,((23,((22,((6,10),((29,13),(26,(2,(20,(7,((4,(1,24)),((25,15),9))))))))),3)),(21,11))),((5,17),(16,((8,27),14)))),(12,19)));
	TREE 'Tree 6 from search (criterion: minimize Tree value using character matrix)' = ((((23,((22,((6,10),((29,13),(26,(2,(20,(7,((4,(1,24)),((25,15),9))))))))),3)),(21,11)),(((5,17),(16,((8,27),14))),(18,(12,19)))),28);
	TREE 'Tree 7 from search (criterion: minimize Tree value using character matrix)' = (((23,((22,((6,10),((29,13),(26,(2,(20,(7,((4,(1,24)),((25,15),9))))))))),3)),(21,11)),(28,(((5,17),(16,((8,27),14))),(18,(12,19)))));
	TREE 'Tree 8 from search (criterion: minimize Tree value using character matrix)' = ((12,(18,((28,((23,((22,((6,10),((29,13),(26,(2,(20,(7,((4,(1,24)),((25,15),9))))))))),3)),(21,11))),((5,17),(16,((8,27),14)))))),19);
	TREE 'Tree 9 from search (criterion: minimize Tree value using character matrix)' = (12,((18,((28,((23,((22,((6,10),((29,13),(26,(2,(20,(7,((4,(1,24)),((25,15),9))))))))),3)),(21,11))),((5,17),(16,((8,27),14))))),19));
	TREE 'Tree 1 from search (criterion: minimize Tree value using character matrix)' = (((11,21),(23,((((10,6),((29,13),(26,(2,(20,(7,((4,(1,24)),((25,15),9)))))))),22),3))),((((5,17),(16,(14,(8,27)))),(18,(12,19))),28));
	TREE 'Tree 2 from search (criterion: minimize Tree value using character matrix)' = (((((5,17),(16,(14,(8,27)))),(18,(12,19))),((11,21),(23,((((10,6),((29,13),(26,(2,(20,(7,((4,(1,24)),((25,15),9)))))))),22),3)))),28);
	TREE 'Tree 3 from search (criterion: minimize Tree value using character matrix)' = ((((5,17),(16,(14,(8,27)))),(18,(12,19))),(((11,21),(23,((((10,6),((29,13),(26,(2,(20,(7,((4,(1,24)),((25,15),9)))))))),22),3))),28));
	TREE 'Tree 4 from search (criterion: minimize Tree value using character matrix)' = (((18,(12,19)),(((11,21),(23,((((10,6),((29,13),(26,(2,(20,(7,((4,(1,24)),((25,15),9)))))))),22),3))),28)),((5,17),(16,(14,(8,27)))));
	TREE 'Tree 5 from search (criterion: minimize Tree value using character matrix)' = ((18,(12,19)),(((5,17),(16,(14,(8,27)))),(((11,21),(23,((((10,6),((29,13),(26,(2,(20,(7,((4,(1,24)),((25,15),9)))))))),22),3))),28)));
	TREE 'Tree 6 from search (criterion: minimize Tree value using character matrix)' = (((12,19),(((5,17),(16,(14,(8,27)))),(((11,21),(23,((((10,6),((29,13),(26,(2,(20,(7,((4,(1,24)),((25,15),9)))))))),22),3))),28))),18);
	TREE 'Tree 7 from search (criterion: minimize Tree value using character matrix)' = ((12,19),(18,(((5,17),(16,(14,(8,27)))),(((11,21),(23,((((10,6),((29,13),(26,(2,(20,(7,((4,(1,24)),((25,15),9)))))))),22),3))),28))));
	TREE 'Tree 8 from search (criterion: minimize Tree value using character matrix)' = ((19,(18,(((5,17),(16,(14,(8,27)))),(((11,21),(23,((((10,6),((29,13),(26,(2,(20,(7,((4,(1,24)),((25,15),9)))))))),22),3))),28)))),12);
	TREE 'Tree 9 from search (criterion: minimize Tree value using character matrix)' = (19,(12,(18,(((5,17),(16,(14,(8,27)))),(((11,21),(23,((((10,6),((29,13),(26,(2,(20,(7,((4,(1,24)),((25,15),9)))))))),22),3))),28)))));
	TREE 'Tree 1 from search (criterion: minimize Tree value using character matrix)' = ((12,(18,(((5,17),(16,((8,27),14))),(28,((21,11),(23,(3,(22,((10,6),((13,29),((((((9,(25,15)),((1,24),4)),7),20),2),26))))))))))),19);
	TREE 'Tree 2 from search (criterion: minimize Tree value using character matrix)' = (((18,(((5,17),(16,((8,27),14))),(28,((21,11),(23,(3,(22,((10,6),((13,29),((((((9,(25,15)),((1,24),4)),7),20),2),26)))))))))),19),12);
	TREE 'Tree 3 from search (criterion: minimize Tree value using character matrix)' = ((18,(((5,17),(16,((8,27),14))),(28,((21,11),(23,(3,(22,((10,6),((13,29),((((((9,(25,15)),((1,24),4)),7),20),2),26)))))))))),(12,19));
	TREE 'Tree 4 from search (criterion: minimize Tree value using character matrix)' = (((((5,17),(16,((8,27),14))),(28,((21,11),(23,(3,(22,((10,6),((13,29),((((((9,(25,15)),((1,24),4)),7),20),2),26))))))))),(12,19)),18);
	TREE 'Tree 5 from search (criterion: minimize Tree value using character matrix)' = ((((5,17),(16,((8,27),14))),(28,((21,11),(23,(3,(22,((10,6),((13,29),((((((9,(25,15)),((1,24),4)),7),20),2),26))))))))),(18,(12,19)));
	TREE 'Tree 6 from search (criterion: minimize Tree value using character matrix)' = (((28,((21,11),(23,(3,(22,((10,6),((13,29),((((((9,(25,15)),((1,24),4)),7),20),2),26)))))))),(18,(12,19))),((5,17),(16,((8,27),14))));
	TREE 'Tree 7 from search (criterion: minimize Tree value using character matrix)' = ((28,((21,11),(23,(3,(22,((10,6),((13,29),((((((9,(25,15)),((1,24),4)),7),20),2),26)))))))),(((5,17),(16,((8,27),14))),(18,(12,19))));
	TREE 'Tree 8 from search (criterion: minimize Tree value using character matrix)' = ((((21,11),(23,(3,(22,((10,6),((13,29),((((((9,(25,15)),((1,24),4)),7),20),2),26))))))),(((5,17),(16,((8,27),14))),(18,(12,19)))),28);
	TREE 'Tree 9 from search (criterion: minimize Tree value using character matrix)' = (((21,11),(23,(3,(22,((10,6),((13,29),((((((9,(25,15)),((1,24),4)),7),20),2),26))))))),(28,(((5,17),(16,((8,27),14))),(18,(12,19)))));
	TREE 'Tree 1 from search (criterion: minimize Tree value using character matrix)' = (((((3,((((((((((25,15),9),((1,24),4)),7),20),2),26),(29,13)),(10,6)),22)),23),(21,11)),(((12,19),18),((16,(14,(27,8))),(17,5)))),28);
	TREE 'Tree 2 from search (criterion: minimize Tree value using character matrix)' = (((((12,19),18),((16,(14,(27,8))),(17,5))),28),(((3,((((((((((25,15),9),((1,24),4)),7),20),2),26),(29,13)),(10,6)),22)),23),(21,11)));
	TREE 'Tree 3 from search (criterion: minimize Tree value using character matrix)' = ((((12,19),18),((16,(14,(27,8))),(17,5))),((((3,((((((((((25,15),9),((1,24),4)),7),20),2),26),(29,13)),(10,6)),22)),23),(21,11)),28));
	TREE 'Tree 4 from search (criterion: minimize Tree value using character matrix)' = ((((16,(14,(27,8))),(17,5)),((((3,((((((((((25,15),9),((1,24),4)),7),20),2),26),(29,13)),(10,6)),22)),23),(21,11)),28)),((12,19),18));
	TREE 'Tree 5 from search (criterion: minimize Tree value using character matrix)' = (((16,(14,(27,8))),(17,5)),(((12,19),18),((((3,((((((((((25,15),9),((1,24),4)),7),20),2),26),(29,13)),(10,6)),22)),23),(21,11)),28)));
	TREE 'Tree 6 from search (criterion: minimize Tree value using character matrix)' = (((12,19),(((16,(14,(27,8))),(17,5)),((((3,((((((((((25,15),9),((1,24),4)),7),20),2),26),(29,13)),(10,6)),22)),23),(21,11)),28))),18);
	TREE 'Tree 7 from search (criterion: minimize Tree value using character matrix)' = ((12,19),((((16,(14,(27,8))),(17,5)),((((3,((((((((((25,15),9),((1,24),4)),7),20),2),26),(29,13)),(10,6)),22)),23),(21,11)),28)),18));
	TREE 'Tree 8 from search (criterion: minimize Tree value using character matrix)' = ((19,((((16,(14,(27,8))),(17,5)),((((3,((((((((((25,15),9),((1,24),4)),7),20),2),26),(29,13)),(10,6)),22)),23),(21,11)),28)),18)),12);
	TREE 'Tree 9 from search (criterion: minimize Tree value using character matrix)' = (19,(12,((((16,(14,(27,8))),(17,5)),((((3,((((((((((25,15),9),((1,24),4)),7),20),2),26),(29,13)),(10,6)),22)),23),(21,11)),28)),18)));

END;


BEGIN TREES;
	Title Consensus_Trees_from_Tree_Blocks;
	LINK Taxa = Taxa;
	TRANSLATE
		1 Paranomalurus_walkeri,
		2 Pondaungimys,
		3 Prolapsus,
		4 Shazurus,
		5 Hartenbergeromys,
		6 Glibia,
		7 Nementchamys,
		8 Theridomys,
		9 Paranomalurus_soniae,
		10 Zegdoumys,
		11 Eogliravus,
		12 Cocomys,
		13 Pappocricetodon,
		14 Remys,
		15 Anomalurus,
		16 Protadelomys,
		17 Pantrogna,
		18 Paramys,
		19 Tribosphenomys,
		20 Kebirmys,
		21 Bransatoglis,
		22 Pauromys,
		23 Knightomys,
		24 Paranomalurus_bishopi,
		25 Idiurus,
		26 Glibia_namibiensis,
		27 Elfomys,
		28 Birbalomys,
		29 Sinosminthus;
	TREE 'Default Bush+' = (5,12,17,18,19,28,((11,21),(23,(22,(3,((6,10),((8,27,(14,16)),((13,29),(26,(2,((7,20),((4,(1,24)),(9,(15,25))))))))))))));
	TREE 'Default Bush+' = (12,18,19,28,((5,17),(16,(14,(8,27)))),((11,21),(23,(3,(22,((6,10),((13,29),(26,(2,(20,(7,((4,(1,24)),(9,(15,25))))))))))))));
	TREE 'Default Bush+' = (5,12,17,18,19,28,((11,21),(23,((3,22),((26,(13,29)),((6,10),((8,27,(14,16)),((2,(7,20)),((4,(1,24)),(9,(15,25)))))))))));
	TREE 'Default Bush+' = (5,12,17,18,19,28,((11,21),(23,(22,(3,((6,10),((8,27,(14,16)),((13,29),(26,(2,((7,20),((4,(1,24)),(9,(15,25))))))))))))));
	TREE 'Default Bush+' = (12,18,19,28,((5,17),(16,(14,(8,27)))),((11,21),(23,(3,(22,((6,10),((13,29),(26,(2,(20,(7,((4,(1,24)),(9,(15,25))))))))))))));
	TREE 'Default Bush+' = (12,18,19,28,((5,17),(16,(14,(8,27)))),((11,21),(23,(3,(22,((6,10),((13,29),(26,(2,(20,(7,((4,(1,24)),(9,(15,25))))))))))))));
	TREE 'Default Bush+' = (12,18,19,28,((5,17),(16,(14,(8,27)))),((11,21),(23,(3,(22,((6,10),((13,29),(26,(2,(20,(7,((4,(1,24)),(9,(15,25))))))))))))));
	TREE 'Default Bush+' = (12,18,19,28,((5,17),(16,(14,(8,27)))),((11,21),(23,(3,(22,((6,10),((13,29),(26,(2,(20,(7,((4,(1,24)),(9,(15,25))))))))))))));
	TREE 'Default Bush+' = (5,12,17,18,19,28,((11,21),(23,(22,(3,((6,10),((8,27,(14,16)),((13,29),(26,(2,((7,20),((4,(1,24)),(9,(15,25))))))))))))));
	TREE 'Default Bush+' = (12,18,19,28,((5,17),(16,(14,(8,27)))),((11,21),(23,(3,(22,((6,10),((13,29),(26,(2,(20,(7,((4,(1,24)),(9,(15,25))))))))))))));
	TREE 'Default Bush+' = (5,12,17,18,19,28,((11,21),(3,22,(23,((6,10),(((8,27),(14,16)),((13,29),(26,(2,((7,20),((4,(1,24)),(9,(15,25)))))))))))));
	TREE 'Default Bush+' = (5,12,17,18,19,28,((11,21),(23,(22,(3,((6,10),((8,27,(14,16)),((13,29),(26,(2,((7,20),((4,(1,24)),(9,(15,25))))))))))))));
	TREE 'Default Bush+' = (12,18,19,28,((5,17),(16,(14,(8,27)))),((11,21),(23,(3,(22,((6,10),((13,29),(26,(2,(20,(7,((4,(1,24)),(9,(15,25))))))))))))));
	TREE 'Default Bush+' = (5,12,17,18,19,28,((11,21),(23,(22,(3,((6,10),((8,27,(14,16)),((13,29),(26,(2,((7,20),((4,(1,24)),(9,(15,25))))))))))))));
	TREE 'Default Bush+' = (12,18,19,28,((5,17),(16,(14,(8,27)))),((11,21),(23,(3,(22,((6,10),((13,29),(26,(2,(20,(7,((4,(1,24)),(9,(15,25))))))))))))));
	TREE 'Default Bush+' = (5,12,17,18,19,28,((11,21),(23,(22,(3,((6,10),((8,27,(14,16)),((13,29),(26,(2,((7,20),((4,(1,24)),(9,(15,25))))))))))))));
	TREE 'Default Bush+' = (12,18,19,28,((5,17),(16,(14,(8,27)))),((11,21),(23,(3,(22,((6,10),((13,29),(26,(2,(20,(7,((4,(1,24)),(9,(15,25))))))))))))));
	TREE 'Default Bush+' = (12,18,19,28,((5,17),(16,(14,(8,27)))),((11,21),(23,(3,(22,((6,10),((13,29),(26,(2,(20,(7,((4,(1,24)),(9,(15,25))))))))))))));
	TREE 'Default Bush+' = (5,12,17,18,19,28,((11,21),(23,(22,(3,((6,10),((8,27,(14,16)),((13,29),(26,(2,((7,20),((4,(1,24)),(9,(15,25))))))))))))));
	TREE 'Default Bush+' = (12,18,19,28,((5,17),(16,(14,(8,27)))),((11,21),(23,(3,(22,((6,10),((13,29),(26,(2,(20,(7,((4,(1,24)),(9,(15,25))))))))))))));
	TREE 'Default Bush+' = (12,18,19,28,((5,17),(16,(14,(8,27)))),((11,21),(23,(3,(22,((6,10),((13,29),(26,(2,(20,(7,((4,(1,24)),(9,(15,25))))))))))))));
	TREE 'Default Bush+' = (12,18,19,28,((5,17),(16,(14,(8,27)))),((11,21),(23,(3,(22,((6,10),((13,29),(26,(2,(20,(7,((4,(1,24)),(9,(15,25))))))))))))));
	TREE 'Default Bush+' = (5,12,17,18,19,28,((11,21),(3,22,(23,((6,10),(((8,27),(14,16)),((13,29),(26,(2,((7,20),((4,(1,24)),(9,(15,25)))))))))))));
	TREE 'Default Bush+' = (5,12,17,18,19,28,((11,21),(23,((3,22),((26,(13,29)),((6,10),((8,27,(14,16)),((2,(7,20)),((4,(1,24)),(9,(15,25)))))))))));
	TREE 'Default Bush+' = (5,12,17,18,19,28,((11,21),(23,(22,(3,((6,10),((8,27,(14,16)),((13,29),(26,(2,((7,20),((4,(1,24)),(9,(15,25))))))))))))));
	TREE 'Default Bush+' = (12,18,19,28,((5,17),(16,(14,(8,27)))),((11,21),(23,(3,(22,((6,10),((13,29),(26,(2,(20,(7,((4,(1,24)),(9,(15,25))))))))))))));
	TREE 'Default Bush+' = (12,18,19,28,((5,17),(16,(14,(8,27)))),((11,21),(23,(3,(22,((6,10),((13,29),(26,(2,(20,(7,((4,(1,24)),(9,(15,25))))))))))))));
	TREE 'Default Bush+' = (5,12,17,18,19,28,((11,21),(3,22,(23,((6,10),(((8,27),(14,16)),((13,29),(26,(2,((7,20),((4,(1,24)),(9,(15,25)))))))))))));
	TREE 'Default Bush+' = (5,12,17,18,19,28,((11,21),(23,(22,(3,((6,10),((8,27,(14,16)),((13,29),(26,(2,((7,20),((4,(1,24)),(9,(15,25))))))))))))));
	TREE 'Default Bush+' = (5,12,17,18,19,28,((11,21),(23,(22,(3,((6,10),((8,27,(14,16)),((13,29),(26,(2,((7,20),((4,(1,24)),(9,(15,25))))))))))))));
	TREE 'Default Bush+' = (12,18,19,28,((5,17),(16,(14,(8,27)))),((11,21),(23,(3,(22,((6,10),((13,29),(26,(2,(20,(7,((4,(1,24)),(9,(15,25))))))))))))));
	TREE 'Default Bush+' = (5,12,17,18,19,28,((11,21),(23,(22,(3,((6,10),((8,27,(14,16)),((13,29),(26,(2,((7,20),((4,(1,24)),(9,(15,25))))))))))))));
	TREE 'Default Bush+' = (5,12,17,18,19,28,((11,21),(23,(22,(3,((6,10),((8,27,(14,16)),((13,29),(26,(2,((7,20),((4,(1,24)),(9,(15,25))))))))))))));
	TREE 'Default Bush+' = (12,18,19,28,((5,17),(16,(14,(8,27)))),((11,21),(23,(3,(22,((6,10),((13,29),(26,(2,(20,(7,((4,(1,24)),(9,(15,25))))))))))))));
	TREE 'Default Bush+' = (12,18,19,28,((5,17),(16,(14,(8,27)))),((11,21),(23,(3,(22,((6,10),((13,29),(26,(2,(20,(7,((4,(1,24)),(9,(15,25))))))))))))));
	TREE 'Default Bush+' = (5,12,17,18,19,28,((11,21),(3,22,(23,((6,10),(((8,27),(14,16)),((13,29),(26,(2,((7,20),((4,(1,24)),(9,(15,25)))))))))))));
	TREE 'Default Bush+' = (12,18,19,28,((5,17),(16,(14,(8,27)))),((11,21),(23,(3,(22,((6,10),((13,29),(26,(2,(20,(7,((4,(1,24)),(9,(15,25))))))))))))));
	TREE 'Default Bush+' = (5,12,17,18,19,28,((11,21),(23,(22,(3,((6,10),((8,27,(14,16)),((13,29),(26,(2,((7,20),((4,(1,24)),(9,(15,25))))))))))))));
	TREE 'Default Bush+' = (5,12,17,18,19,28,((11,21),(23,(22,(3,((6,10),((8,27,(14,16)),((13,29),(26,(2,((7,20),((4,(1,24)),(9,(15,25))))))))))))));
	TREE 'Default Bush+' = (12,18,19,28,((5,17),(16,(14,(8,27)))),((11,21),(23,(3,(22,((6,10),((13,29),(26,(2,(20,(7,((4,(1,24)),(9,(15,25))))))))))))));
	TREE 'Default Bush+' = (12,18,19,28,((5,17),(16,(14,(8,27)))),((11,21),(23,(3,(22,((6,10),((13,29),(26,(2,(20,(7,((4,(1,24)),(9,(15,25))))))))))))));
	TREE 'Default Bush+' = (12,18,19,28,((5,17),(16,(14,(8,27)))),((11,21),(23,(3,(22,((6,10),((13,29),(26,(2,(20,(7,((4,(1,24)),(9,(15,25))))))))))))));
	TREE 'Default Bush+' = (5,12,17,18,19,28,((11,21),(23,(22,(3,((6,10),((8,27,(14,16)),((13,29),(26,(2,((7,20),((4,(1,24)),(9,(15,25))))))))))))));
	TREE 'Default Bush+' = (5,12,17,18,19,28,((11,21),(23,(22,(3,((6,10),((8,27,(14,16)),((13,29),(26,(2,((7,20),((4,(1,24)),(9,(15,25))))))))))))));
	TREE 'Default Bush+' = (12,18,19,28,((5,17),(16,(14,(8,27)))),((11,21),(23,(3,(22,((6,10),((13,29),(26,(2,(20,(7,((4,(1,24)),(9,(15,25))))))))))))));
	TREE 'Default Bush+' = (12,18,19,28,((5,17),(16,(14,(8,27)))),((11,21),(23,(3,(22,((6,10),((13,29),(26,(2,(20,(7,((4,(1,24)),(9,(15,25))))))))))))));
	TREE 'Default Bush+' = (5,12,17,18,19,28,((11,21),(3,22,(23,((6,10),(((8,27),(14,16)),((13,29),(26,(2,((7,20),((4,(1,24)),(9,(15,25)))))))))))));
	TREE 'Default Bush+' = (5,12,17,18,19,28,((11,21),(23,(22,(3,((6,10),((8,27,(14,16)),((13,29),(26,(2,((7,20),((4,(1,24)),(9,(15,25))))))))))))));
	TREE 'Default Bush+' = (5,12,17,18,19,28,((11,21),(3,22,(23,((6,10),(((8,27),(14,16)),((13,29),(26,(2,((7,20),((4,(1,24)),(9,(15,25)))))))))))));
	TREE 'Default Bush+' = (12,18,19,28,((5,17),(16,(14,(8,27)))),((11,21),(23,(3,(22,((6,10),((13,29),(26,(2,(20,(7,((4,(1,24)),(9,(15,25))))))))))))));
	TREE 'Default Bush+' = (12,18,19,28,((5,17),(16,(14,(8,27)))),((11,21),(23,(3,(22,((6,10),((13,29),(26,(2,(20,(7,((4,(1,24)),(9,(15,25))))))))))))));
	TREE 'Default Bush+' = (12,18,19,28,((5,17),(16,(14,(8,27)))),((11,21),(23,(3,(22,((6,10),((13,29),(26,(2,(20,(7,((4,(1,24)),(9,(15,25))))))))))))));

END;


BEGIN TREES;
	Title Consensus_Trees_from_Tree_Blocks;
	LINK Taxa = Taxa;
	TRANSLATE
		1 Paranomalurus_walkeri,
		2 Pondaungimys,
		3 Prolapsus,
		4 Shazurus,
		5 Hartenbergeromys,
		6 Glibia,
		7 Nementchamys,
		8 Theridomys,
		9 Paranomalurus_soniae,
		10 Zegdoumys,
		11 Eogliravus,
		12 Cocomys,
		13 Pappocricetodon,
		14 Remys,
		15 Anomalurus,
		16 Protadelomys,
		17 Pantrogna,
		18 Paramys,
		19 Tribosphenomys,
		20 Kebirmys,
		21 Bransatoglis,
		22 Pauromys,
		23 Knightomys,
		24 Paranomalurus_bishopi,
		25 Idiurus,
		26 Glibia_namibiensis,
		27 Elfomys,
		28 Birbalomys,
		29 Sinosminthus;
	TREE 'Default Bush+' = (5,12,17,18,19,28,((11,21),(23,(22,(3,((6,10),((8,27,(14,16)),((13,29),(26,(2,((7,20),((4,(1,24)),(9,(15,25))))))))))))));
	TREE 'Default Bush+' = (12,18,19,28,((5,17),(16,(14,(8,27)))),((11,21),(23,(3,(22,((6,10),((13,29),(26,(2,(20,(7,((4,(1,24)),(9,(15,25))))))))))))));
	TREE 'Default Bush+' = (5,12,17,18,19,28,((11,21),(23,((3,22),((26,(13,29)),((6,10),((8,27,(14,16)),((2,(7,20)),((4,(1,24)),(9,(15,25)))))))))));
	TREE 'Default Bush+' = (5,12,17,18,19,28,((11,21),(23,(22,(3,((6,10),((8,27,(14,16)),((13,29),(26,(2,((7,20),((4,(1,24)),(9,(15,25))))))))))))));
	TREE 'Default Bush+' = (12,18,19,28,((5,17),(16,(14,(8,27)))),((11,21),(23,(3,(22,((6,10),((13,29),(26,(2,(20,(7,((4,(1,24)),(9,(15,25))))))))))))));
	TREE 'Default Bush+' = (12,18,19,28,((5,17),(16,(14,(8,27)))),((11,21),(23,(3,(22,((6,10),((13,29),(26,(2,(20,(7,((4,(1,24)),(9,(15,25))))))))))))));
	TREE 'Default Bush+' = (12,18,19,28,((5,17),(16,(14,(8,27)))),((11,21),(23,(3,(22,((6,10),((13,29),(26,(2,(20,(7,((4,(1,24)),(9,(15,25))))))))))))));
	TREE 'Default Bush+' = (12,18,19,28,((5,17),(16,(14,(8,27)))),((11,21),(23,(3,(22,((6,10),((13,29),(26,(2,(20,(7,((4,(1,24)),(9,(15,25))))))))))))));
	TREE 'Default Bush+' = (5,12,17,18,19,28,((11,21),(23,(22,(3,((6,10),((8,27,(14,16)),((13,29),(26,(2,((7,20),((4,(1,24)),(9,(15,25))))))))))))));
	TREE 'Default Bush+' = (12,18,19,28,((5,17),(16,(14,(8,27)))),((11,21),(23,(3,(22,((6,10),((13,29),(26,(2,(20,(7,((4,(1,24)),(9,(15,25))))))))))))));
	TREE 'Default Bush+' = (5,12,17,18,19,28,((11,21),(3,22,(23,((6,10),(((8,27),(14,16)),((13,29),(26,(2,((7,20),((4,(1,24)),(9,(15,25)))))))))))));
	TREE 'Default Bush+' = (5,12,17,18,19,28,((11,21),(23,(22,(3,((6,10),((8,27,(14,16)),((13,29),(26,(2,((7,20),((4,(1,24)),(9,(15,25))))))))))))));
	TREE 'Default Bush+' = (12,18,19,28,((5,17),(16,(14,(8,27)))),((11,21),(23,(3,(22,((6,10),((13,29),(26,(2,(20,(7,((4,(1,24)),(9,(15,25))))))))))))));
	TREE 'Default Bush+' = (5,12,17,18,19,28,((11,21),(23,(22,(3,((6,10),((8,27,(14,16)),((13,29),(26,(2,((7,20),((4,(1,24)),(9,(15,25))))))))))))));
	TREE 'Default Bush+' = (12,18,19,28,((5,17),(16,(14,(8,27)))),((11,21),(23,(3,(22,((6,10),((13,29),(26,(2,(20,(7,((4,(1,24)),(9,(15,25))))))))))))));
	TREE 'Default Bush+' = (5,12,17,18,19,28,((11,21),(23,(22,(3,((6,10),((8,27,(14,16)),((13,29),(26,(2,((7,20),((4,(1,24)),(9,(15,25))))))))))))));
	TREE 'Default Bush+' = (12,18,19,28,((5,17),(16,(14,(8,27)))),((11,21),(23,(3,(22,((6,10),((13,29),(26,(2,(20,(7,((4,(1,24)),(9,(15,25))))))))))))));
	TREE 'Default Bush+' = (12,18,19,28,((5,17),(16,(14,(8,27)))),((11,21),(23,(3,(22,((6,10),((13,29),(26,(2,(20,(7,((4,(1,24)),(9,(15,25))))))))))))));
	TREE 'Default Bush+' = (5,12,17,18,19,28,((11,21),(23,(22,(3,((6,10),((8,27,(14,16)),((13,29),(26,(2,((7,20),((4,(1,24)),(9,(15,25))))))))))))));
	TREE 'Default Bush+' = (12,18,19,28,((5,17),(16,(14,(8,27)))),((11,21),(23,(3,(22,((6,10),((13,29),(26,(2,(20,(7,((4,(1,24)),(9,(15,25))))))))))))));
	TREE 'Default Bush+' = (12,18,19,28,((5,17),(16,(14,(8,27)))),((11,21),(23,(3,(22,((6,10),((13,29),(26,(2,(20,(7,((4,(1,24)),(9,(15,25))))))))))))));
	TREE 'Default Bush+' = (12,18,19,28,((5,17),(16,(14,(8,27)))),((11,21),(23,(3,(22,((6,10),((13,29),(26,(2,(20,(7,((4,(1,24)),(9,(15,25))))))))))))));
	TREE 'Default Bush+' = (5,12,17,18,19,28,((11,21),(3,22,(23,((6,10),(((8,27),(14,16)),((13,29),(26,(2,((7,20),((4,(1,24)),(9,(15,25)))))))))))));
	TREE 'Default Bush+' = (5,12,17,18,19,28,((11,21),(23,((3,22),((26,(13,29)),((6,10),((8,27,(14,16)),((2,(7,20)),((4,(1,24)),(9,(15,25)))))))))));
	TREE 'Default Bush+' = (5,12,17,18,19,28,((11,21),(23,(22,(3,((6,10),((8,27,(14,16)),((13,29),(26,(2,((7,20),((4,(1,24)),(9,(15,25))))))))))))));
	TREE 'Default Bush+' = (12,18,19,28,((5,17),(16,(14,(8,27)))),((11,21),(23,(3,(22,((6,10),((13,29),(26,(2,(20,(7,((4,(1,24)),(9,(15,25))))))))))))));
	TREE 'Default Bush+' = (12,18,19,28,((5,17),(16,(14,(8,27)))),((11,21),(23,(3,(22,((6,10),((13,29),(26,(2,(20,(7,((4,(1,24)),(9,(15,25))))))))))))));
	TREE 'Default Bush+' = (5,12,17,18,19,28,((11,21),(3,22,(23,((6,10),(((8,27),(14,16)),((13,29),(26,(2,((7,20),((4,(1,24)),(9,(15,25)))))))))))));
	TREE 'Default Bush+' = (5,12,17,18,19,28,((11,21),(23,(22,(3,((6,10),((8,27,(14,16)),((13,29),(26,(2,((7,20),((4,(1,24)),(9,(15,25))))))))))))));
	TREE 'Default Bush+' = (5,12,17,18,19,28,((11,21),(23,(22,(3,((6,10),((8,27,(14,16)),((13,29),(26,(2,((7,20),((4,(1,24)),(9,(15,25))))))))))))));
	TREE 'Default Bush+' = (12,18,19,28,((5,17),(16,(14,(8,27)))),((11,21),(23,(3,(22,((6,10),((13,29),(26,(2,(20,(7,((4,(1,24)),(9,(15,25))))))))))))));
	TREE 'Default Bush+' = (5,12,17,18,19,28,((11,21),(23,(22,(3,((6,10),((8,27,(14,16)),((13,29),(26,(2,((7,20),((4,(1,24)),(9,(15,25))))))))))))));
	TREE 'Default Bush+' = (5,12,17,18,19,28,((11,21),(23,(22,(3,((6,10),((8,27,(14,16)),((13,29),(26,(2,((7,20),((4,(1,24)),(9,(15,25))))))))))))));
	TREE 'Default Bush+' = (12,18,19,28,((5,17),(16,(14,(8,27)))),((11,21),(23,(3,(22,((6,10),((13,29),(26,(2,(20,(7,((4,(1,24)),(9,(15,25))))))))))))));
	TREE 'Default Bush+' = (12,18,19,28,((5,17),(16,(14,(8,27)))),((11,21),(23,(3,(22,((6,10),((13,29),(26,(2,(20,(7,((4,(1,24)),(9,(15,25))))))))))))));
	TREE 'Default Bush+' = (5,12,17,18,19,28,((11,21),(3,22,(23,((6,10),(((8,27),(14,16)),((13,29),(26,(2,((7,20),((4,(1,24)),(9,(15,25)))))))))))));
	TREE 'Default Bush+' = (12,18,19,28,((5,17),(16,(14,(8,27)))),((11,21),(23,(3,(22,((6,10),((13,29),(26,(2,(20,(7,((4,(1,24)),(9,(15,25))))))))))))));
	TREE 'Default Bush+' = (5,12,17,18,19,28,((11,21),(23,(22,(3,((6,10),((8,27,(14,16)),((13,29),(26,(2,((7,20),((4,(1,24)),(9,(15,25))))))))))))));
	TREE 'Default Bush+' = (5,12,17,18,19,28,((11,21),(23,(22,(3,((6,10),((8,27,(14,16)),((13,29),(26,(2,((7,20),((4,(1,24)),(9,(15,25))))))))))))));
	TREE 'Default Bush+' = (12,18,19,28,((5,17),(16,(14,(8,27)))),((11,21),(23,(3,(22,((6,10),((13,29),(26,(2,(20,(7,((4,(1,24)),(9,(15,25))))))))))))));
	TREE 'Default Bush+' = (12,18,19,28,((5,17),(16,(14,(8,27)))),((11,21),(23,(3,(22,((6,10),((13,29),(26,(2,(20,(7,((4,(1,24)),(9,(15,25))))))))))))));
	TREE 'Default Bush+' = (12,18,19,28,((5,17),(16,(14,(8,27)))),((11,21),(23,(3,(22,((6,10),((13,29),(26,(2,(20,(7,((4,(1,24)),(9,(15,25))))))))))))));
	TREE 'Default Bush+' = (5,12,17,18,19,28,((11,21),(23,(22,(3,((6,10),((8,27,(14,16)),((13,29),(26,(2,((7,20),((4,(1,24)),(9,(15,25))))))))))))));
	TREE 'Default Bush+' = (5,12,17,18,19,28,((11,21),(23,(22,(3,((6,10),((8,27,(14,16)),((13,29),(26,(2,((7,20),((4,(1,24)),(9,(15,25))))))))))))));
	TREE 'Default Bush+' = (12,18,19,28,((5,17),(16,(14,(8,27)))),((11,21),(23,(3,(22,((6,10),((13,29),(26,(2,(20,(7,((4,(1,24)),(9,(15,25))))))))))))));
	TREE 'Default Bush+' = (12,18,19,28,((5,17),(16,(14,(8,27)))),((11,21),(23,(3,(22,((6,10),((13,29),(26,(2,(20,(7,((4,(1,24)),(9,(15,25))))))))))))));
	TREE 'Default Bush+' = (5,12,17,18,19,28,((11,21),(3,22,(23,((6,10),(((8,27),(14,16)),((13,29),(26,(2,((7,20),((4,(1,24)),(9,(15,25)))))))))))));
	TREE 'Default Bush+' = (5,12,17,18,19,28,((11,21),(23,(22,(3,((6,10),((8,27,(14,16)),((13,29),(26,(2,((7,20),((4,(1,24)),(9,(15,25))))))))))))));
	TREE 'Default Bush+' = (5,12,17,18,19,28,((11,21),(3,22,(23,((6,10),(((8,27),(14,16)),((13,29),(26,(2,((7,20),((4,(1,24)),(9,(15,25)))))))))))));
	TREE 'Default Bush+' = (12,18,19,28,((5,17),(16,(14,(8,27)))),((11,21),(23,(3,(22,((6,10),((13,29),(26,(2,(20,(7,((4,(1,24)),(9,(15,25))))))))))))));
	TREE 'Default Bush+' = (12,18,19,28,((5,17),(16,(14,(8,27)))),((11,21),(23,(3,(22,((6,10),((13,29),(26,(2,(20,(7,((4,(1,24)),(9,(15,25))))))))))))));
	TREE 'Default Bush+' = (12,18,19,28,((5,17),(16,(14,(8,27)))),((11,21),(23,(3,(22,((6,10),((13,29),(26,(2,(20,(7,((4,(1,24)),(9,(15,25))))))))))))));
	TREE 'Default Bush+' = (3,5,12,17,18,19,22,23,26,28,(6,10),(11,21),(13,29),(8,14,16,27),(2,7,20,((4,(1,24)),(9,(15,25)))));
	TREE strict_consensus_302.25 = (12,18,19,28,((5,17),(16,(14,(8,27)))),((11,21),(23,(3,(22,((6,10),((13,29),(26,(2,(20,(7,((4,(1,24)),(9,(15,25))))))))))))));

END;


BEGIN TREES;
	Title Consensus_Trees_from_Tree_Blocks;
	LINK Taxa = Taxa;
	TRANSLATE
		1 Paranomalurus_walkeri,
		2 Pondaungimys,
		3 Prolapsus,
		4 Shazurus,
		5 Hartenbergeromys,
		6 Glibia,
		7 Nementchamys,
		8 Theridomys,
		9 Paranomalurus_soniae,
		10 Zegdoumys,
		11 Eogliravus,
		12 Cocomys,
		13 Pappocricetodon,
		14 Remys,
		15 Anomalurus,
		16 Protadelomys,
		17 Pantrogna,
		18 Paramys,
		19 Tribosphenomys,
		20 Kebirmys,
		21 Bransatoglis,
		22 Pauromys,
		23 Knightomys,
		24 Paranomalurus_bishopi,
		25 Idiurus,
		26 Glibia_namibiensis,
		27 Elfomys,
		28 Birbalomys,
		29 Sinosminthus;
	TREE 'Default Bush+' = (5,12,17,18,19,28,((11,21),(23,(22,(3,((6,10),((8,27,(14,16)),((13,29),(26,(2,((7,20),((4,(1,24)),(9,(15,25))))))))))))));
	TREE 'Default Bush+' = (12,18,19,28,((5,17),(16,(14,(8,27)))),((11,21),(23,(3,(22,((6,10),((13,29),(26,(2,(20,(7,((4,(1,24)),(9,(15,25))))))))))))));
	TREE 'Default Bush+' = (5,12,17,18,19,28,((11,21),(23,((3,22),((26,(13,29)),((6,10),((8,27,(14,16)),((2,(7,20)),((4,(1,24)),(9,(15,25)))))))))));
	TREE 'Default Bush+' = (5,12,17,18,19,28,((11,21),(23,(22,(3,((6,10),((8,27,(14,16)),((13,29),(26,(2,((7,20),((4,(1,24)),(9,(15,25))))))))))))));
	TREE 'Default Bush+' = (12,18,19,28,((5,17),(16,(14,(8,27)))),((11,21),(23,(3,(22,((6,10),((13,29),(26,(2,(20,(7,((4,(1,24)),(9,(15,25))))))))))))));
	TREE 'Default Bush+' = (12,18,19,28,((5,17),(16,(14,(8,27)))),((11,21),(23,(3,(22,((6,10),((13,29),(26,(2,(20,(7,((4,(1,24)),(9,(15,25))))))))))))));
	TREE 'Default Bush+' = (12,18,19,28,((5,17),(16,(14,(8,27)))),((11,21),(23,(3,(22,((6,10),((13,29),(26,(2,(20,(7,((4,(1,24)),(9,(15,25))))))))))))));
	TREE 'Default Bush+' = (12,18,19,28,((5,17),(16,(14,(8,27)))),((11,21),(23,(3,(22,((6,10),((13,29),(26,(2,(20,(7,((4,(1,24)),(9,(15,25))))))))))))));
	TREE 'Default Bush+' = (5,12,17,18,19,28,((11,21),(23,(22,(3,((6,10),((8,27,(14,16)),((13,29),(26,(2,((7,20),((4,(1,24)),(9,(15,25))))))))))))));
	TREE 'Default Bush+' = (12,18,19,28,((5,17),(16,(14,(8,27)))),((11,21),(23,(3,(22,((6,10),((13,29),(26,(2,(20,(7,((4,(1,24)),(9,(15,25))))))))))))));
	TREE 'Default Bush+' = (5,12,17,18,19,28,((11,21),(3,22,(23,((6,10),(((8,27),(14,16)),((13,29),(26,(2,((7,20),((4,(1,24)),(9,(15,25)))))))))))));
	TREE 'Default Bush+' = (5,12,17,18,19,28,((11,21),(23,(22,(3,((6,10),((8,27,(14,16)),((13,29),(26,(2,((7,20),((4,(1,24)),(9,(15,25))))))))))))));
	TREE 'Default Bush+' = (12,18,19,28,((5,17),(16,(14,(8,27)))),((11,21),(23,(3,(22,((6,10),((13,29),(26,(2,(20,(7,((4,(1,24)),(9,(15,25))))))))))))));
	TREE 'Default Bush+' = (5,12,17,18,19,28,((11,21),(23,(22,(3,((6,10),((8,27,(14,16)),((13,29),(26,(2,((7,20),((4,(1,24)),(9,(15,25))))))))))))));
	TREE 'Default Bush+' = (12,18,19,28,((5,17),(16,(14,(8,27)))),((11,21),(23,(3,(22,((6,10),((13,29),(26,(2,(20,(7,((4,(1,24)),(9,(15,25))))))))))))));
	TREE 'Default Bush+' = (5,12,17,18,19,28,((11,21),(23,(22,(3,((6,10),((8,27,(14,16)),((13,29),(26,(2,((7,20),((4,(1,24)),(9,(15,25))))))))))))));
	TREE 'Default Bush+' = (12,18,19,28,((5,17),(16,(14,(8,27)))),((11,21),(23,(3,(22,((6,10),((13,29),(26,(2,(20,(7,((4,(1,24)),(9,(15,25))))))))))))));
	TREE 'Default Bush+' = (12,18,19,28,((5,17),(16,(14,(8,27)))),((11,21),(23,(3,(22,((6,10),((13,29),(26,(2,(20,(7,((4,(1,24)),(9,(15,25))))))))))))));
	TREE 'Default Bush+' = (5,12,17,18,19,28,((11,21),(23,(22,(3,((6,10),((8,27,(14,16)),((13,29),(26,(2,((7,20),((4,(1,24)),(9,(15,25))))))))))))));
	TREE 'Default Bush+' = (12,18,19,28,((5,17),(16,(14,(8,27)))),((11,21),(23,(3,(22,((6,10),((13,29),(26,(2,(20,(7,((4,(1,24)),(9,(15,25))))))))))))));
	TREE 'Default Bush+' = (12,18,19,28,((5,17),(16,(14,(8,27)))),((11,21),(23,(3,(22,((6,10),((13,29),(26,(2,(20,(7,((4,(1,24)),(9,(15,25))))))))))))));
	TREE 'Default Bush+' = (12,18,19,28,((5,17),(16,(14,(8,27)))),((11,21),(23,(3,(22,((6,10),((13,29),(26,(2,(20,(7,((4,(1,24)),(9,(15,25))))))))))))));
	TREE 'Default Bush+' = (5,12,17,18,19,28,((11,21),(3,22,(23,((6,10),(((8,27),(14,16)),((13,29),(26,(2,((7,20),((4,(1,24)),(9,(15,25)))))))))))));
	TREE 'Default Bush+' = (5,12,17,18,19,28,((11,21),(23,((3,22),((26,(13,29)),((6,10),((8,27,(14,16)),((2,(7,20)),((4,(1,24)),(9,(15,25)))))))))));
	TREE 'Default Bush+' = (5,12,17,18,19,28,((11,21),(23,(22,(3,((6,10),((8,27,(14,16)),((13,29),(26,(2,((7,20),((4,(1,24)),(9,(15,25))))))))))))));
	TREE 'Default Bush+' = (12,18,19,28,((5,17),(16,(14,(8,27)))),((11,21),(23,(3,(22,((6,10),((13,29),(26,(2,(20,(7,((4,(1,24)),(9,(15,25))))))))))))));
	TREE 'Default Bush+' = (12,18,19,28,((5,17),(16,(14,(8,27)))),((11,21),(23,(3,(22,((6,10),((13,29),(26,(2,(20,(7,((4,(1,24)),(9,(15,25))))))))))))));
	TREE 'Default Bush+' = (5,12,17,18,19,28,((11,21),(3,22,(23,((6,10),(((8,27),(14,16)),((13,29),(26,(2,((7,20),((4,(1,24)),(9,(15,25)))))))))))));
	TREE 'Default Bush+' = (5,12,17,18,19,28,((11,21),(23,(22,(3,((6,10),((8,27,(14,16)),((13,29),(26,(2,((7,20),((4,(1,24)),(9,(15,25))))))))))))));
	TREE 'Default Bush+' = (5,12,17,18,19,28,((11,21),(23,(22,(3,((6,10),((8,27,(14,16)),((13,29),(26,(2,((7,20),((4,(1,24)),(9,(15,25))))))))))))));
	TREE 'Default Bush+' = (12,18,19,28,((5,17),(16,(14,(8,27)))),((11,21),(23,(3,(22,((6,10),((13,29),(26,(2,(20,(7,((4,(1,24)),(9,(15,25))))))))))))));
	TREE 'Default Bush+' = (5,12,17,18,19,28,((11,21),(23,(22,(3,((6,10),((8,27,(14,16)),((13,29),(26,(2,((7,20),((4,(1,24)),(9,(15,25))))))))))))));
	TREE 'Default Bush+' = (5,12,17,18,19,28,((11,21),(23,(22,(3,((6,10),((8,27,(14,16)),((13,29),(26,(2,((7,20),((4,(1,24)),(9,(15,25))))))))))))));
	TREE 'Default Bush+' = (12,18,19,28,((5,17),(16,(14,(8,27)))),((11,21),(23,(3,(22,((6,10),((13,29),(26,(2,(20,(7,((4,(1,24)),(9,(15,25))))))))))))));
	TREE 'Default Bush+' = (12,18,19,28,((5,17),(16,(14,(8,27)))),((11,21),(23,(3,(22,((6,10),((13,29),(26,(2,(20,(7,((4,(1,24)),(9,(15,25))))))))))))));
	TREE 'Default Bush+' = (5,12,17,18,19,28,((11,21),(3,22,(23,((6,10),(((8,27),(14,16)),((13,29),(26,(2,((7,20),((4,(1,24)),(9,(15,25)))))))))))));
	TREE 'Default Bush+' = (12,18,19,28,((5,17),(16,(14,(8,27)))),((11,21),(23,(3,(22,((6,10),((13,29),(26,(2,(20,(7,((4,(1,24)),(9,(15,25))))))))))))));
	TREE 'Default Bush+' = (5,12,17,18,19,28,((11,21),(23,(22,(3,((6,10),((8,27,(14,16)),((13,29),(26,(2,((7,20),((4,(1,24)),(9,(15,25))))))))))))));
	TREE 'Default Bush+' = (5,12,17,18,19,28,((11,21),(23,(22,(3,((6,10),((8,27,(14,16)),((13,29),(26,(2,((7,20),((4,(1,24)),(9,(15,25))))))))))))));
	TREE 'Default Bush+' = (12,18,19,28,((5,17),(16,(14,(8,27)))),((11,21),(23,(3,(22,((6,10),((13,29),(26,(2,(20,(7,((4,(1,24)),(9,(15,25))))))))))))));
	TREE 'Default Bush+' = (12,18,19,28,((5,17),(16,(14,(8,27)))),((11,21),(23,(3,(22,((6,10),((13,29),(26,(2,(20,(7,((4,(1,24)),(9,(15,25))))))))))))));
	TREE 'Default Bush+' = (12,18,19,28,((5,17),(16,(14,(8,27)))),((11,21),(23,(3,(22,((6,10),((13,29),(26,(2,(20,(7,((4,(1,24)),(9,(15,25))))))))))))));
	TREE 'Default Bush+' = (5,12,17,18,19,28,((11,21),(23,(22,(3,((6,10),((8,27,(14,16)),((13,29),(26,(2,((7,20),((4,(1,24)),(9,(15,25))))))))))))));
	TREE 'Default Bush+' = (5,12,17,18,19,28,((11,21),(23,(22,(3,((6,10),((8,27,(14,16)),((13,29),(26,(2,((7,20),((4,(1,24)),(9,(15,25))))))))))))));
	TREE 'Default Bush+' = (12,18,19,28,((5,17),(16,(14,(8,27)))),((11,21),(23,(3,(22,((6,10),((13,29),(26,(2,(20,(7,((4,(1,24)),(9,(15,25))))))))))))));
	TREE 'Default Bush+' = (12,18,19,28,((5,17),(16,(14,(8,27)))),((11,21),(23,(3,(22,((6,10),((13,29),(26,(2,(20,(7,((4,(1,24)),(9,(15,25))))))))))))));
	TREE 'Default Bush+' = (5,12,17,18,19,28,((11,21),(3,22,(23,((6,10),(((8,27),(14,16)),((13,29),(26,(2,((7,20),((4,(1,24)),(9,(15,25)))))))))))));
	TREE 'Default Bush+' = (5,12,17,18,19,28,((11,21),(23,(22,(3,((6,10),((8,27,(14,16)),((13,29),(26,(2,((7,20),((4,(1,24)),(9,(15,25))))))))))))));
	TREE 'Default Bush+' = (5,12,17,18,19,28,((11,21),(3,22,(23,((6,10),(((8,27),(14,16)),((13,29),(26,(2,((7,20),((4,(1,24)),(9,(15,25)))))))))))));
	TREE 'Default Bush+' = (12,18,19,28,((5,17),(16,(14,(8,27)))),((11,21),(23,(3,(22,((6,10),((13,29),(26,(2,(20,(7,((4,(1,24)),(9,(15,25))))))))))))));
	TREE 'Default Bush+' = (12,18,19,28,((5,17),(16,(14,(8,27)))),((11,21),(23,(3,(22,((6,10),((13,29),(26,(2,(20,(7,((4,(1,24)),(9,(15,25))))))))))))));
	TREE 'Default Bush+' = (12,18,19,28,((5,17),(16,(14,(8,27)))),((11,21),(23,(3,(22,((6,10),((13,29),(26,(2,(20,(7,((4,(1,24)),(9,(15,25))))))))))))));
	TREE 'Default Bush+' = (3,5,12,17,18,19,22,23,26,28,(6,10),(11,21),(13,29),(8,14,16,27),(2,7,20,((4,(1,24)),(9,(15,25)))));
	TREE 'Default Bush+' = (3,5,12,17,18,19,22,23,26,28,(6,10),(11,21),(13,29),(8,14,16,27),(2,7,20,((4,(1,24)),(9,(15,25)))));

END;


BEGIN TREES;
	Title Trees_from_heuristic_search;
	LINK Taxa = Taxa;
[!Parameters: Tree search criterion: minimize Tree value using character matrix]
	TRANSLATE
		1 Paranomalurus_walkeri,
		2 Pondaungimys,
		3 Prolapsus,
		4 Shazurus,
		5 Hartenbergeromys,
		6 Glibia,
		7 Nementchamys,
		8 Theridomys,
		9 Paranomalurus_soniae,
		10 Zegdoumys,
		11 Eogliravus,
		12 Cocomys,
		13 Pappocricetodon,
		14 Remys,
		15 Anomalurus,
		16 Protadelomys,
		17 Pantrogna,
		18 Paramys,
		19 Tribosphenomys,
		20 Kebirmys,
		21 Bransatoglis,
		22 Pauromys,
		23 Knightomys,
		24 Paranomalurus_bishopi,
		25 Idiurus,
		26 Glibia_namibiensis,
		27 Elfomys,
		28 Birbalomys,
		29 Sinosminthus;
	TREE 'Tree 1 from search (criterion: minimize Tree value using character matrix)' = (((((3,((((((7,(2,(((25,15),9),((1,24),4)))),20),26),(29,13)),(10,6)),22)),23),(21,11)),(((12,19),18),((16,(14,(27,8))),(17,5)))),28);
	TREE 'Tree 2 from search (criterion: minimize Tree value using character matrix)' = (((((12,19),18),((16,(14,(27,8))),(17,5))),28),(((3,((((((7,(2,(((25,15),9),((1,24),4)))),20),26),(29,13)),(10,6)),22)),23),(21,11)));
	TREE 'Tree 3 from search (criterion: minimize Tree value using character matrix)' = ((((12,19),18),((16,(14,(27,8))),(17,5))),((((3,((((((7,(2,(((25,15),9),((1,24),4)))),20),26),(29,13)),(10,6)),22)),23),(21,11)),28));
	TREE 'Tree 4 from search (criterion: minimize Tree value using character matrix)' = (((((3,(((((((7,(((25,15),9),((1,24),4))),20),2),26),(29,13)),(10,6)),22)),23),(21,11)),(((12,19),18),((16,(14,(27,8))),(17,5)))),28);
	TREE 'Tree 5 from search (criterion: minimize Tree value using character matrix)' = (((((12,19),18),((16,(14,(27,8))),(17,5))),28),(((3,(((((((7,(((25,15),9),((1,24),4))),20),2),26),(29,13)),(10,6)),22)),23),(21,11)));
	TREE 'Tree 6 from search (criterion: minimize Tree value using character matrix)' = ((((16,(14,(27,8))),(17,5)),((((3,((((((7,(2,(((25,15),9),((1,24),4)))),20),26),(29,13)),(10,6)),22)),23),(21,11)),28)),((12,19),18));
	TREE 'Tree 7 from search (criterion: minimize Tree value using character matrix)' = (((16,(14,(27,8))),(17,5)),(((12,19),18),((((3,((((((7,(2,(((25,15),9),((1,24),4)))),20),26),(29,13)),(10,6)),22)),23),(21,11)),28)));
	TREE 'Tree 8 from search (criterion: minimize Tree value using character matrix)' = ((((12,19),18),((16,(14,(27,8))),(17,5))),((((3,(((((((7,(((25,15),9),((1,24),4))),20),2),26),(29,13)),(10,6)),22)),23),(21,11)),28));
	TREE 'Tree 9 from search (criterion: minimize Tree value using character matrix)' = (((12,19),(((16,(14,(27,8))),(17,5)),((((3,((((((7,(2,(((25,15),9),((1,24),4)))),20),26),(29,13)),(10,6)),22)),23),(21,11)),28))),18);
	TREE 'Tree 10 from search (criterion: minimize Tree value using character matrix)' = ((12,19),((((16,(14,(27,8))),(17,5)),((((3,((((((7,(2,(((25,15),9),((1,24),4)))),20),26),(29,13)),(10,6)),22)),23),(21,11)),28)),18));
	TREE 'Tree 11 from search (criterion: minimize Tree value using character matrix)' = ((((16,(14,(27,8))),(17,5)),((((3,(((((((7,(((25,15),9),((1,24),4))),20),2),26),(29,13)),(10,6)),22)),23),(21,11)),28)),((12,19),18));
	TREE 'Tree 12 from search (criterion: minimize Tree value using character matrix)' = (((16,(14,(27,8))),(17,5)),(((12,19),18),((((3,(((((((7,(((25,15),9),((1,24),4))),20),2),26),(29,13)),(10,6)),22)),23),(21,11)),28)));
	TREE 'Tree 13 from search (criterion: minimize Tree value using character matrix)' = (((12,19),(((16,(14,(27,8))),(17,5)),((((3,(((((((7,(((25,15),9),((1,24),4))),20),2),26),(29,13)),(10,6)),22)),23),(21,11)),28))),18);
	TREE 'Tree 14 from search (criterion: minimize Tree value using character matrix)' = ((19,((((16,(14,(27,8))),(17,5)),((((3,((((((7,(2,(((25,15),9),((1,24),4)))),20),26),(29,13)),(10,6)),22)),23),(21,11)),28)),18)),12);
	TREE 'Tree 15 from search (criterion: minimize Tree value using character matrix)' = (19,(12,((((16,(14,(27,8))),(17,5)),((((3,((((((7,(2,(((25,15),9),((1,24),4)))),20),26),(29,13)),(10,6)),22)),23),(21,11)),28)),18)));
	TREE 'Tree 16 from search (criterion: minimize Tree value using character matrix)' = ((12,19),((((16,(14,(27,8))),(17,5)),((((3,(((((((7,(((25,15),9),((1,24),4))),20),2),26),(29,13)),(10,6)),22)),23),(21,11)),28)),18));
	TREE 'Tree 17 from search (criterion: minimize Tree value using character matrix)' = ((19,((((16,(14,(27,8))),(17,5)),((((3,(((((((7,(((25,15),9),((1,24),4))),20),2),26),(29,13)),(10,6)),22)),23),(21,11)),28)),18)),12);
	TREE 'Tree 18 from search (criterion: minimize Tree value using character matrix)' = (19,(12,((((16,(14,(27,8))),(17,5)),((((3,(((((((7,(((25,15),9),((1,24),4))),20),2),26),(29,13)),(10,6)),22)),23),(21,11)),28)),18)));

END;


BEGIN TREES;
	Title Consensus_Trees_from_Tree_Blocks;
	LINK Taxa = Taxa;
[!Parameters: Consensus tree of trees from Stored Tree Blocks]
	TRANSLATE
		1 Paranomalurus_walkeri,
		2 Pondaungimys,
		3 Prolapsus,
		4 Shazurus,
		5 Hartenbergeromys,
		6 Glibia,
		7 Nementchamys,
		8 Theridomys,
		9 Paranomalurus_soniae,
		10 Zegdoumys,
		11 Eogliravus,
		12 Cocomys,
		13 Pappocricetodon,
		14 Remys,
		15 Anomalurus,
		16 Protadelomys,
		17 Pantrogna,
		18 Paramys,
		19 Tribosphenomys,
		20 Kebirmys,
		21 Bransatoglis,
		22 Pauromys,
		23 Knightomys,
		24 Paranomalurus_bishopi,
		25 Idiurus,
		26 Glibia_namibiensis,
		27 Elfomys,
		28 Birbalomys,
		29 Sinosminthus;
	TREE 'Default Bush+' = (5,12,17,18,19,28,((11,21),(23,(22,(3,((6,10),((8,27,(14,16)),((13,29),(26,(2,((7,20),((4,(1,24)),(9,(15,25))))))))))))));
	TREE 'Default Bush+' = (12,18,19,28,((5,17),(16,(14,(8,27)))),((11,21),(23,(3,(22,((6,10),((13,29),(26,(2,(20,(7,((4,(1,24)),(9,(15,25))))))))))))));
	TREE 'Default Bush+' = (5,12,17,18,19,28,((11,21),(23,((3,22),((26,(13,29)),((6,10),((8,27,(14,16)),((2,(7,20)),((4,(1,24)),(9,(15,25)))))))))));
	TREE 'Default Bush+' = (5,12,17,18,19,28,((11,21),(23,(22,(3,((6,10),((8,27,(14,16)),((13,29),(26,(2,((7,20),((4,(1,24)),(9,(15,25))))))))))))));
	TREE 'Default Bush+' = (12,18,19,28,((5,17),(16,(14,(8,27)))),((11,21),(23,(3,(22,((6,10),((13,29),(26,(2,(20,(7,((4,(1,24)),(9,(15,25))))))))))))));
	TREE 'Default Bush+' = (12,18,19,28,((5,17),(16,(14,(8,27)))),((11,21),(23,(3,(22,((6,10),((13,29),(26,(2,(20,(7,((4,(1,24)),(9,(15,25))))))))))))));
	TREE 'Default Bush+' = (12,18,19,28,((5,17),(16,(14,(8,27)))),((11,21),(23,(3,(22,((6,10),((13,29),(26,(2,(20,(7,((4,(1,24)),(9,(15,25))))))))))))));
	TREE 'Default Bush+' = (12,18,19,28,((5,17),(16,(14,(8,27)))),((11,21),(23,(3,(22,((6,10),((13,29),(26,(2,(20,(7,((4,(1,24)),(9,(15,25))))))))))))));
	TREE 'Default Bush+' = (5,12,17,18,19,28,((11,21),(23,(22,(3,((6,10),((8,27,(14,16)),((13,29),(26,(2,((7,20),((4,(1,24)),(9,(15,25))))))))))))));
	TREE 'Default Bush+' = (12,18,19,28,((5,17),(16,(14,(8,27)))),((11,21),(23,(3,(22,((6,10),((13,29),(26,(2,(20,(7,((4,(1,24)),(9,(15,25))))))))))))));
	TREE 'Default Bush+' = (5,12,17,18,19,28,((11,21),(3,22,(23,((6,10),(((8,27),(14,16)),((13,29),(26,(2,((7,20),((4,(1,24)),(9,(15,25)))))))))))));
	TREE 'Default Bush+' = (5,12,17,18,19,28,((11,21),(23,(22,(3,((6,10),((8,27,(14,16)),((13,29),(26,(2,((7,20),((4,(1,24)),(9,(15,25))))))))))))));
	TREE 'Default Bush+' = (12,18,19,28,((5,17),(16,(14,(8,27)))),((11,21),(23,(3,(22,((6,10),((13,29),(26,(2,(20,(7,((4,(1,24)),(9,(15,25))))))))))))));
	TREE 'Default Bush+' = (5,12,17,18,19,28,((11,21),(23,(22,(3,((6,10),((8,27,(14,16)),((13,29),(26,(2,((7,20),((4,(1,24)),(9,(15,25))))))))))))));
	TREE 'Default Bush+' = (12,18,19,28,((5,17),(16,(14,(8,27)))),((11,21),(23,(3,(22,((6,10),((13,29),(26,(2,(20,(7,((4,(1,24)),(9,(15,25))))))))))))));
	TREE 'Default Bush+' = (5,12,17,18,19,28,((11,21),(23,(22,(3,((6,10),((8,27,(14,16)),((13,29),(26,(2,((7,20),((4,(1,24)),(9,(15,25))))))))))))));
	TREE 'Default Bush+' = (12,18,19,28,((5,17),(16,(14,(8,27)))),((11,21),(23,(3,(22,((6,10),((13,29),(26,(2,(20,(7,((4,(1,24)),(9,(15,25))))))))))))));
	TREE 'Default Bush+' = (12,18,19,28,((5,17),(16,(14,(8,27)))),((11,21),(23,(3,(22,((6,10),((13,29),(26,(2,(20,(7,((4,(1,24)),(9,(15,25))))))))))))));
	TREE 'Default Bush+' = (5,12,17,18,19,28,((11,21),(23,(22,(3,((6,10),((8,27,(14,16)),((13,29),(26,(2,((7,20),((4,(1,24)),(9,(15,25))))))))))))));
	TREE 'Default Bush+' = (12,18,19,28,((5,17),(16,(14,(8,27)))),((11,21),(23,(3,(22,((6,10),((13,29),(26,(2,(20,(7,((4,(1,24)),(9,(15,25))))))))))))));
	TREE 'Default Bush+' = (12,18,19,28,((5,17),(16,(14,(8,27)))),((11,21),(23,(3,(22,((6,10),((13,29),(26,(2,(20,(7,((4,(1,24)),(9,(15,25))))))))))))));
	TREE 'Default Bush+' = (12,18,19,28,((5,17),(16,(14,(8,27)))),((11,21),(23,(3,(22,((6,10),((13,29),(26,(2,(20,(7,((4,(1,24)),(9,(15,25))))))))))))));
	TREE 'Default Bush+' = (5,12,17,18,19,28,((11,21),(3,22,(23,((6,10),(((8,27),(14,16)),((13,29),(26,(2,((7,20),((4,(1,24)),(9,(15,25)))))))))))));
	TREE 'Default Bush+' = (5,12,17,18,19,28,((11,21),(23,((3,22),((26,(13,29)),((6,10),((8,27,(14,16)),((2,(7,20)),((4,(1,24)),(9,(15,25)))))))))));
	TREE 'Default Bush+' = (5,12,17,18,19,28,((11,21),(23,(22,(3,((6,10),((8,27,(14,16)),((13,29),(26,(2,((7,20),((4,(1,24)),(9,(15,25))))))))))))));
	TREE 'Default Bush+' = (12,18,19,28,((5,17),(16,(14,(8,27)))),((11,21),(23,(3,(22,((6,10),((13,29),(26,(2,(20,(7,((4,(1,24)),(9,(15,25))))))))))))));
	TREE 'Default Bush+' = (12,18,19,28,((5,17),(16,(14,(8,27)))),((11,21),(23,(3,(22,((6,10),((13,29),(26,(2,(20,(7,((4,(1,24)),(9,(15,25))))))))))))));
	TREE 'Default Bush+' = (5,12,17,18,19,28,((11,21),(3,22,(23,((6,10),(((8,27),(14,16)),((13,29),(26,(2,((7,20),((4,(1,24)),(9,(15,25)))))))))))));
	TREE 'Default Bush+' = (5,12,17,18,19,28,((11,21),(23,(22,(3,((6,10),((8,27,(14,16)),((13,29),(26,(2,((7,20),((4,(1,24)),(9,(15,25))))))))))))));
	TREE 'Default Bush+' = (5,12,17,18,19,28,((11,21),(23,(22,(3,((6,10),((8,27,(14,16)),((13,29),(26,(2,((7,20),((4,(1,24)),(9,(15,25))))))))))))));
	TREE 'Default Bush+' = (12,18,19,28,((5,17),(16,(14,(8,27)))),((11,21),(23,(3,(22,((6,10),((13,29),(26,(2,(20,(7,((4,(1,24)),(9,(15,25))))))))))))));
	TREE 'Default Bush+' = (5,12,17,18,19,28,((11,21),(23,(22,(3,((6,10),((8,27,(14,16)),((13,29),(26,(2,((7,20),((4,(1,24)),(9,(15,25))))))))))))));
	TREE 'Default Bush+' = (5,12,17,18,19,28,((11,21),(23,(22,(3,((6,10),((8,27,(14,16)),((13,29),(26,(2,((7,20),((4,(1,24)),(9,(15,25))))))))))))));
	TREE 'Default Bush+' = (12,18,19,28,((5,17),(16,(14,(8,27)))),((11,21),(23,(3,(22,((6,10),((13,29),(26,(2,(20,(7,((4,(1,24)),(9,(15,25))))))))))))));
	TREE 'Default Bush+' = (12,18,19,28,((5,17),(16,(14,(8,27)))),((11,21),(23,(3,(22,((6,10),((13,29),(26,(2,(20,(7,((4,(1,24)),(9,(15,25))))))))))))));
	TREE 'Default Bush+' = (5,12,17,18,19,28,((11,21),(3,22,(23,((6,10),(((8,27),(14,16)),((13,29),(26,(2,((7,20),((4,(1,24)),(9,(15,25)))))))))))));
	TREE 'Default Bush+' = (12,18,19,28,((5,17),(16,(14,(8,27)))),((11,21),(23,(3,(22,((6,10),((13,29),(26,(2,(20,(7,((4,(1,24)),(9,(15,25))))))))))))));
	TREE 'Default Bush+' = (5,12,17,18,19,28,((11,21),(23,(22,(3,((6,10),((8,27,(14,16)),((13,29),(26,(2,((7,20),((4,(1,24)),(9,(15,25))))))))))))));
	TREE 'Default Bush+' = (5,12,17,18,19,28,((11,21),(23,(22,(3,((6,10),((8,27,(14,16)),((13,29),(26,(2,((7,20),((4,(1,24)),(9,(15,25))))))))))))));
	TREE 'Default Bush+' = (12,18,19,28,((5,17),(16,(14,(8,27)))),((11,21),(23,(3,(22,((6,10),((13,29),(26,(2,(20,(7,((4,(1,24)),(9,(15,25))))))))))))));
	TREE 'Default Bush+' = (12,18,19,28,((5,17),(16,(14,(8,27)))),((11,21),(23,(3,(22,((6,10),((13,29),(26,(2,(20,(7,((4,(1,24)),(9,(15,25))))))))))))));
	TREE 'Default Bush+' = (12,18,19,28,((5,17),(16,(14,(8,27)))),((11,21),(23,(3,(22,((6,10),((13,29),(26,(2,(20,(7,((4,(1,24)),(9,(15,25))))))))))))));
	TREE 'Default Bush+' = (5,12,17,18,19,28,((11,21),(23,(22,(3,((6,10),((8,27,(14,16)),((13,29),(26,(2,((7,20),((4,(1,24)),(9,(15,25))))))))))))));
	TREE 'Default Bush+' = (5,12,17,18,19,28,((11,21),(23,(22,(3,((6,10),((8,27,(14,16)),((13,29),(26,(2,((7,20),((4,(1,24)),(9,(15,25))))))))))))));
	TREE 'Default Bush+' = (12,18,19,28,((5,17),(16,(14,(8,27)))),((11,21),(23,(3,(22,((6,10),((13,29),(26,(2,(20,(7,((4,(1,24)),(9,(15,25))))))))))))));
	TREE 'Default Bush+' = (12,18,19,28,((5,17),(16,(14,(8,27)))),((11,21),(23,(3,(22,((6,10),((13,29),(26,(2,(20,(7,((4,(1,24)),(9,(15,25))))))))))))));
	TREE 'Default Bush+' = (5,12,17,18,19,28,((11,21),(3,22,(23,((6,10),(((8,27),(14,16)),((13,29),(26,(2,((7,20),((4,(1,24)),(9,(15,25)))))))))))));
	TREE 'Default Bush+' = (5,12,17,18,19,28,((11,21),(23,(22,(3,((6,10),((8,27,(14,16)),((13,29),(26,(2,((7,20),((4,(1,24)),(9,(15,25))))))))))))));
	TREE 'Default Bush+' = (5,12,17,18,19,28,((11,21),(3,22,(23,((6,10),(((8,27),(14,16)),((13,29),(26,(2,((7,20),((4,(1,24)),(9,(15,25)))))))))))));
	TREE 'Default Bush+' = (12,18,19,28,((5,17),(16,(14,(8,27)))),((11,21),(23,(3,(22,((6,10),((13,29),(26,(2,(20,(7,((4,(1,24)),(9,(15,25))))))))))))));
	TREE 'Default Bush+' = (12,18,19,28,((5,17),(16,(14,(8,27)))),((11,21),(23,(3,(22,((6,10),((13,29),(26,(2,(20,(7,((4,(1,24)),(9,(15,25))))))))))))));
	TREE 'Default Bush+' = (12,18,19,28,((5,17),(16,(14,(8,27)))),((11,21),(23,(3,(22,((6,10),((13,29),(26,(2,(20,(7,((4,(1,24)),(9,(15,25))))))))))))));
	TREE 'Default Bush+' = (3,5,12,17,18,19,22,23,26,28,(6,10),(11,21),(13,29),(8,14,16,27),(2,7,20,((4,(1,24)),(9,(15,25)))));
	TREE 'Default Bush+' = (3,5,12,17,18,19,22,23,26,28,(6,10),(11,21),(13,29),(8,14,16,27),(2,7,20,((4,(1,24)),(9,(15,25)))));
	TREE 'Default Bush+' = (3,5,12,17,18,19,22,23,26,28,(6,10),(11,21),(13,29),(8,14,16,27),(2,7,20,((4,(1,24)),(9,(15,25)))));
	TREE 'Default Bush+' = (12,18,19,28,((5,17),(16,(14,(8,27)))),((11,21),(23,(3,(22,((6,10),((13,29),(26,(2,7,20,((4,(1,24)),(9,(15,25))))))))))));

END;


Begin MESQUITE;
		MESQUITESCRIPTVERSION 2;
		TITLE AUTO;
		tell ProjectCoordinator;
		getEmployee #mesquite.minimal.ManageTaxa.ManageTaxa;
		tell It;
			setID 0 433781703049652704;
		endTell;
		getEmployee #mesquite.charMatrices.ManageCharacters.ManageCharacters;
		tell It;
			setID 0 1114170927443340671;
			checksum 0 287667863 null;
		endTell;
		getWindow;
		tell It;
			setResourcesState false false 100;
			setPopoutState 400;
			setExplanationSize 0;
			setAnnotationSize 0;
			setFontIncAnnot 0;
			setFontIncExp 0;
			setSize 1680 938;
			setLocation -4 0;
			setFont SanSerif;
			setFontSize 10;
		endTell;
		getEmployee  #mesquite.minimal.ManageTaxa.ManageTaxa;
		tell It;
			showTaxa #433781703049652704 #mesquite.lists.TaxonList.TaxonList;
			tell It;
				setTaxa #433781703049652704;
				getWindow;
				tell It;
					newAssistant  #mesquite.lists.DefaultTaxaOrder.DefaultTaxaOrder;
					newAssistant  #mesquite.lists.TaxonListCurrPartition.TaxonListCurrPartition;
					setExplanationSize 30;
					setAnnotationSize 20;
					setFontIncAnnot 0;
					setFontIncExp 0;
					setSize 1580 871;
					setLocation -4 0;
					setFont SanSerif;
					setFontSize 10;
					getToolPalette;
					tell It;
					endTell;
				endTell;
				showWindow;
				getEmployee #mesquite.lists.TaxonListAnnotPanel.TaxonListAnnotPanel;
				tell It;
					togglePanel off;
				endTell;
			endTell;
		endTell;
		getEmployee  #mesquite.charMatrices.BasicDataWindowCoord.BasicDataWindowCoord;
		tell It;
			showDataWindow #1114170927443340671 #mesquite.charMatrices.BasicDataWindowMaker.BasicDataWindowMaker;
			tell It;
				getWindow;
				tell It;
					getTable;
					tell It;
						rowNamesWidth 125;
					endTell;
					setExplanationSize 110;
					setAnnotationSize 20;
					setFontIncAnnot 0;
					setFontIncExp 0;
					setSize 1580 791;
					setLocation -4 0;
					setFont SanSerif;
					setFontSize 10;
					getToolPalette;
					tell It;
						setTool mesquite.charMatrices.BasicDataWindowMaker.BasicDataWindow.ibeam;
					endTell;
					setActive;
					setTool mesquite.charMatrices.BasicDataWindowMaker.BasicDataWindow.ibeam;
					colorCells  #mesquite.charMatrices.ColorCells.ColorCells;
				tell It;
					setColor Yellow;
					removeColor off;
				endTell;
					colorRowNames  #mesquite.charMatrices.ColorCells.ColorCells;
				tell It;
					setColor Yellow;
					removeColor off;
				endTell;
					colorColumnNames  #mesquite.charMatrices.CharGroupColor.CharGroupColor;
					colorText  #mesquite.charMatrices.NoColor.NoColor;
					setBackground White;
					toggleShowNames off;
					toggleShowTaxonNames on;
					toggleTight off;
					toggleShowChanges on;
					toggleSeparateLines off;
					toggleShowStates on;
					toggleAutoWCharNames on;
					toggleShowDefaultCharNames off;
					toggleConstrainCW on;
					toggleBirdsEye off;
					toggleAllowAutosize on;
					toggleColorsPanel off;
					toggleDiagonal on;
					setDiagonalHeight 80;
					toggleLinkedScrolling on;
					toggleScrollLinkedTables off;
				endTell;
				showWindow;
				getWindow;
				tell It;
					forceAutosize;
				endTell;
				getEmployee #mesquite.categ.StateNamesStrip.StateNamesStrip;
				tell It;
					showStrip off;
				endTell;
				getEmployee #mesquite.charMatrices.AnnotPanel.AnnotPanel;
				tell It;
					togglePanel off;
				endTell;
				getEmployee #mesquite.charMatrices.CharReferenceStrip.CharReferenceStrip;
				tell It;
					showStrip off;
				endTell;
				getEmployee #mesquite.charMatrices.QuickKeySelector.QuickKeySelector;
				tell It;
					autotabOff;
				endTell;
				getEmployee #mesquite.categ.SmallStateNamesEditor.SmallStateNamesEditor;
				tell It;
					panelOpen true;
				endTell;
			endTell;
		endTell;
		endTell;
end;


